{
  "_args": [
    [
      "suckle@latest",
      "/home/david/dev/geometryzen/mathdoodle/node_modules/lactate"
    ]
  ],
  "_from": "suckle@latest",
  "_id": "suckle@0.5.4",
  "_inCache": true,
  "_installable": true,
  "_location": "/suckle",
  "_npmUser": {
    "email": "wltsmrz@gmail.com",
    "name": "Weltschmerz"
  },
  "_npmVersion": "1.1.62",
  "_phantomChildren": {},
  "_requested": {
    "name": "suckle",
    "raw": "suckle@latest",
    "rawSpec": "latest",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "/lactate",
    "/lactate/abridge"
  ],
  "_resolved": "https://registry.npmjs.org/suckle/-/suckle-0.5.4.tgz",
  "_shasum": "a1b6eebd65536ddfd6eb3b5ebed04f52ca943945",
  "_shrinkwrap": null,
  "_spec": "suckle@latest",
  "_where": "/home/david/dev/geometryzen/mathdoodle/node_modules/lactate",
  "author": {
    "email": "wltsmrz@gmail.com",
    "name": "Weltschmerz"
  },
  "bugs": {
    "url": "https://github.com/Weltschmerz/Suckle/issues"
  },
  "dependencies": {},
  "description": "Stream multiplexer, with callback ability",
  "devDependencies": {
    "accumulate": "0.0.1",
    "vows": "0.7.0"
  },
  "directories": {},
  "dist": {
    "shasum": "a1b6eebd65536ddfd6eb3b5ebed04f52ca943945",
    "tarball": "http://registry.npmjs.org/suckle/-/suckle-0.5.4.tgz"
  },
  "engines": {
    "node": ">= 0.5.0"
  },
  "homepage": "https://github.com/Weltschmerz/Suckle#readme",
  "keywords": [
    "multiplex",
    "stream"
  ],
  "main": "index.js",
  "maintainer": "Weltschmerz <wltsmrz@gmail.com>",
  "maintainers": [
    {
      "name": "Weltschmerz",
      "email": "chlavois@gmail.com"
    }
  ],
  "name": "suckle",
  "optionalDependencies": {},
  "readme": "## Suckle\n\n`npm install suckle`\n\nSuckle is a stream multiplexer for node. Give it one readable stream, and it pipes to multiple writable streams.\n\n```js\nvar suckle = require('suckle')\n\nvar mux = suckle.createStream();\n\nmux.pipe(process.stdout, process.stdout, process.stdout)\nmux.pipe(process.stdout, process.stdout);\nmux.pipe(process.stdout);\n\nprocess.stdin.pipe(mux)\n```\n\nThe main problem Suckle solves is when you need a callback, to return the piped data. As a case study, say you have a static file server. Ideally, you would like to pipe node's file readStream to gzip, and then to the client. Fine. But what if you also need to cache that gzipped data in an object, for subsequent requests? With Suckle you can!\n\n```js\n\nvar fs   = require('fs')\nvar zlib = require('zlib')\nvar http = require('http')\n\nvar Suckle = require('suckle')\n\nhttp.createserver(function(req, res) {\n\n    var mux = new Suckle;\n\n    mux.pipe(res);\n\n    mux.onComplete(function(data, length) {\n      /* Here's your gzipped data */\n    });\n\n    fs.createReadStream('somefile.jpg')\n    .pipe(zlib.createGzip())\n    .pipe(mux);\n\n}).listen(8080)\n\n\n```\n\n*Suckle is used internally by [Lactate](https://github.com/Weltschmerz/Lactate)*\n",
  "repository": {
    "type": "git",
    "url": "git://github.com/Weltschmerz/Suckle.git"
  },
  "scripts": {
    "test": "make test"
  },
  "version": "0.5.4"
}
