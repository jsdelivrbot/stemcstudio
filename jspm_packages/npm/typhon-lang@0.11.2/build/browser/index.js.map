{"version":3,"file":"index.js","sources":["../module/sym/symtable.js","../module/sym/SymbolTable.js","../module/sym/SymbolTableScope.js","../module/sym/Symbol.js","../module/sym/mangleName.js","../module/common/dictUpdate.js","../module/sym/SymbolConstants.js","../module/ast/builder.js","../module/ast/numericLiteral.js","../module/ast/types.js","../module/cst/parser.js","../module/cst/splitSourceTextIntoLines.js","../module/common/tree.js","../module/common/Range.js","../module/common/Position.js","../module/common/syntaxError.js","../../node_modules/tslib/tslib.es6.js","../module/cst/grammarName.js","../module/cst/tokenNames.js","../module/cst/Tokenizer.js","../module/common/TokenError.js","../module/common/base.js","../module/common/asserts.js","../module/cst/tables.js","../module/cst/Tokens.js"],"sourcesContent":["// import { Symbol } from './Symbol';\r\nimport { SymbolTable } from './SymbolTable';\r\nimport { ModuleBlock } from './SymbolConstants';\r\n/**\r\n * Creates a SymbolTable for the specified Module.\r\n */\r\nexport function semanticsOfModule(mod) {\r\n    var st = new SymbolTable();\r\n    st.enterBlock(\"top\", ModuleBlock, mod, null);\r\n    st.top = st.cur;\r\n    // This is a good place to dump the AST for debugging.\r\n    for (var _i = 0, _a = mod.body; _i < _a.length; _i++) {\r\n        var stmt = _a[_i];\r\n        st.visitStmt(stmt);\r\n    }\r\n    st.exitBlock();\r\n    st.analyze();\r\n    return st;\r\n}\r\nexport function symbolTableFromStatements(stmts) {\r\n    var st = new SymbolTable();\r\n    // st.enterBlock(\"top\", ModuleBlock, mod, 0);\r\n    st.top = st.cur;\r\n    // This is a good place to dump the AST for debugging.\r\n    for (var _i = 0, stmts_1 = stmts; _i < stmts_1.length; _i++) {\r\n        var stmt = stmts_1[_i];\r\n        st.visitStmt(stmt);\r\n    }\r\n    // st.exitBlock();\r\n    st.analyze();\r\n    return st;\r\n}\r\n/**\r\n * Provides a textual representation of the SymbolTable.\r\n */\r\nexport function dumpSymbolTable(st) {\r\n    /**\r\n     * Renders the argument in the Python format: 'True' or 'False'.\r\n     */\r\n    var pyBoolStr = function (b) {\r\n        return b ? \"True\" : \"False\";\r\n    };\r\n    /**\r\n     * Renders the list in the Python format: '[' 1, 2, ..., N ']'.\r\n     */\r\n    var pyList = function (l) {\r\n        var ret = [];\r\n        for (var i = 0; i < l.length; ++i) {\r\n            // TODO: Originally, this computed the Python repr().\r\n            ret.push(l[i]);\r\n        }\r\n        return '[' + ret.join(', ') + ']';\r\n    };\r\n    var getIdents = function (obj, indent) {\r\n        if (indent === undefined)\r\n            indent = \"\";\r\n        var ret = \"\";\r\n        ret += indent + \"type: '\" + obj.get_type() + \"'\\n\";\r\n        ret += indent + \"name: '\" + obj.get_name() + \"'\\n\";\r\n        ret += indent + \"lineno: \" + JSON.stringify(obj.get_range()) + \"\\n\";\r\n        ret += indent + \"nested: \" + pyBoolStr(obj.is_nested()) + \"\\n\";\r\n        ret += indent + \"haschildren: \" + pyBoolStr(obj.has_children()) + \"\\n\";\r\n        if (obj.get_type() === \"class\") {\r\n            ret += indent + \"Class_methods: \" + pyList(obj.get_methods()) + \"\\n\";\r\n        }\r\n        else if (obj.get_type() === \"function\") {\r\n            ret += indent + \"Func_params: \" + pyList(obj.get_parameters()) + \"\\n\";\r\n            ret += indent + \"Func_locals: \" + pyList(obj.get_locals()) + \"\\n\";\r\n            ret += indent + \"Func_globals: \" + pyList(obj.get_globals()) + \"\\n\";\r\n            ret += indent + \"Func_frees: \" + pyList(obj.get_frees()) + \"\\n\";\r\n        }\r\n        ret += indent + \"-- Identifiers --\\n\";\r\n        var objidents = obj.get_identifiers();\r\n        var objidentslen = objidents.length;\r\n        for (var i = 0; i < objidentslen; ++i) {\r\n            var info = obj.lookup(objidents[i]);\r\n            ret += indent + \"name: '\" + info.get_name() + \"'\\n\";\r\n            ret += indent + \"  is_referenced: \" + pyBoolStr(info.is_referenced()) + \"\\n\";\r\n            ret += indent + \"  is_imported: \" + pyBoolStr(info.is_imported()) + \"\\n\";\r\n            ret += indent + \"  is_parameter: \" + pyBoolStr(info.is_parameter()) + \"\\n\";\r\n            ret += indent + \"  is_global: \" + pyBoolStr(info.is_global()) + \"\\n\";\r\n            ret += indent + \"  is_declared_global: \" + pyBoolStr(info.is_declared_global()) + \"\\n\";\r\n            ret += indent + \"  is_local: \" + pyBoolStr(info.is_local()) + \"\\n\";\r\n            ret += indent + \"  is_free: \" + pyBoolStr(info.is_free()) + \"\\n\";\r\n            ret += indent + \"  is_assigned: \" + pyBoolStr(info.is_assigned()) + \"\\n\";\r\n            ret += indent + \"  is_namespace: \" + pyBoolStr(info.is_namespace()) + \"\\n\";\r\n            var nss = info.get_namespaces();\r\n            var nsslen = nss.length;\r\n            ret += indent + \"  namespaces: [\\n\";\r\n            var sub = [];\r\n            for (var j = 0; j < nsslen; ++j) {\r\n                var ns = nss[j];\r\n                sub.push(getIdents(ns, indent + \"    \"));\r\n            }\r\n            ret += sub.join('\\n');\r\n            ret += indent + '  ]\\n';\r\n        }\r\n        return ret;\r\n    };\r\n    return getIdents(st.top, '');\r\n}\r\n","import { assert, fail } from '../common/asserts';\r\nimport { dictUpdate } from '../common/dictUpdate';\r\nimport { mangleName } from './mangleName';\r\nimport { SymbolTableScope } from './SymbolTableScope';\r\nimport { syntaxError } from '../common/syntaxError';\r\nimport { Assert } from '../ast/types';\r\nimport { Assign } from '../ast/types';\r\nimport { Attribute } from '../ast/types';\r\nimport { AugAssign } from '../ast/types';\r\nimport { BinOp } from '../ast/types';\r\nimport { BoolOp } from '../ast/types';\r\nimport { BreakStatement } from '../ast/types';\r\nimport { Call } from '../ast/types';\r\nimport { ClassDef } from '../ast/types';\r\nimport { Compare } from '../ast/types';\r\nimport { ContinueStatement } from '../ast/types';\r\nimport { DeleteStatement } from '../ast/types';\r\nimport { Dict } from '../ast/types';\r\nimport { Ellipsis } from '../ast/types';\r\nimport { Exec } from '../ast/types';\r\nimport { ExpressionStatement } from '../ast/types';\r\nimport { ExtSlice } from '../ast/types';\r\nimport { ForStatement } from '../ast/types';\r\nimport { FunctionDef } from '../ast/types';\r\nimport { GeneratorExp } from '../ast/types';\r\nimport { Global } from '../ast/types';\r\nimport { IfStatement } from '../ast/types';\r\nimport { IfExp } from '../ast/types';\r\nimport { ImportStatement } from '../ast/types';\r\nimport { ImportFrom } from '../ast/types';\r\nimport { Index } from '../ast/types';\r\nimport { Lambda } from '../ast/types';\r\nimport { Load } from '../ast/types';\r\nimport { List } from '../ast/types';\r\nimport { ListComp } from '../ast/types';\r\nimport { Name } from '../ast/types';\r\nimport { Num } from '../ast/types';\r\nimport { Param } from '../ast/types';\r\nimport { Pass } from '../ast/types';\r\nimport { Print } from '../ast/types';\r\nimport { Raise } from '../ast/types';\r\nimport { ReturnStatement } from '../ast/types';\r\nimport { Slice } from '../ast/types';\r\nimport { Store } from '../ast/types';\r\nimport { Str } from '../ast/types';\r\nimport { Subscript } from '../ast/types';\r\nimport { TryExcept } from '../ast/types';\r\nimport { TryFinally } from '../ast/types';\r\nimport { Tuple } from '../ast/types';\r\nimport { UnaryOp } from '../ast/types';\r\nimport { WhileStatement } from '../ast/types';\r\nimport { WithStatement } from '../ast/types';\r\nimport { Yield } from '../ast/types';\r\nimport { CELL } from './SymbolConstants';\r\nimport { ClassBlock } from './SymbolConstants';\r\nimport { DEF_BOUND } from './SymbolConstants';\r\nimport { DEF_FREE_CLASS } from './SymbolConstants';\r\nimport { DEF_GLOBAL } from './SymbolConstants';\r\nimport { DEF_IMPORT } from './SymbolConstants';\r\nimport { DEF_LOCAL } from './SymbolConstants';\r\nimport { DEF_PARAM } from './SymbolConstants';\r\nimport { FREE } from './SymbolConstants';\r\nimport { FunctionBlock } from './SymbolConstants';\r\nimport { GLOBAL_EXPLICIT } from './SymbolConstants';\r\nimport { GLOBAL_IMPLICIT } from './SymbolConstants';\r\nimport { LOCAL } from './SymbolConstants';\r\nimport { ModuleBlock } from './SymbolConstants';\r\nimport { USE } from './SymbolConstants';\r\nimport { SCOPE_OFF } from './SymbolConstants';\r\n//\r\n// TODO: This should be refactored into a SemanticVisitor implementing the Visitor.\r\n//\r\n/**\r\n * Migrate to using this class to providing the implementation for the SymbolTable.\r\n */\r\nvar SemanticVisitor = (function () {\r\n    function SemanticVisitor(st) {\r\n        this.st = st;\r\n        // Do nothing.\r\n    }\r\n    SemanticVisitor.prototype.assign = function (assign) {\r\n        this.st.SEQExpr(assign.targets);\r\n        assign.value.accept(this);\r\n    };\r\n    SemanticVisitor.prototype.attribute = function (attribute) {\r\n        attribute.value.accept(this);\r\n    };\r\n    SemanticVisitor.prototype.binOp = function (be) {\r\n        be.lhs.accept(this);\r\n        be.rhs.accept(this);\r\n    };\r\n    SemanticVisitor.prototype.callExpression = function (ce) {\r\n        ce.func.accept(this);\r\n        this.st.SEQExpr(ce.args);\r\n        for (var i = 0; i < ce.keywords.length; ++i)\r\n            ce.keywords[i].value.accept(this);\r\n        // print(JSON.stringify(e.starargs, null, 2));\r\n        // print(JSON.stringify(e.kwargs, null,2));\r\n        if (ce.starargs) {\r\n            ce.starargs.accept(this);\r\n        }\r\n        if (ce.kwargs) {\r\n            ce.kwargs.accept(this);\r\n        }\r\n    };\r\n    SemanticVisitor.prototype.classDef = function (cd) {\r\n        this.st.addDef(cd.name.value, DEF_LOCAL, cd.range);\r\n        this.st.SEQExpr(cd.bases);\r\n        if (cd.decorator_list)\r\n            this.st.SEQExpr(cd.decorator_list);\r\n        this.st.enterBlock(cd.name.value, ClassBlock, cd, cd.range);\r\n        var tmp = this.st.curClass;\r\n        this.st.curClass = cd.name.value;\r\n        this.st.SEQStmt(cd.body);\r\n        this.st.curClass = tmp;\r\n        this.st.exitBlock();\r\n    };\r\n    SemanticVisitor.prototype.compareExpression = function (ce) {\r\n        ce.left.accept(this);\r\n        this.st.SEQExpr(ce.comparators);\r\n    };\r\n    SemanticVisitor.prototype.dict = function (dict) {\r\n        this.st.SEQExpr(dict.keys);\r\n        this.st.SEQExpr(dict.values);\r\n    };\r\n    SemanticVisitor.prototype.expressionStatement = function (expressionStatement) {\r\n        expressionStatement.accept(this);\r\n    };\r\n    SemanticVisitor.prototype.functionDef = function (fd) {\r\n        this.st.addDef(fd.name.value, DEF_LOCAL, fd.range);\r\n        if (fd.args.defaults)\r\n            this.st.SEQExpr(fd.args.defaults);\r\n        if (fd.decorator_list)\r\n            this.st.SEQExpr(fd.decorator_list);\r\n        this.st.enterBlock(fd.name.value, FunctionBlock, fd, fd.range);\r\n        this.st.visitArguments(fd.args, fd.range);\r\n        this.st.SEQStmt(fd.body);\r\n        this.st.exitBlock();\r\n    };\r\n    SemanticVisitor.prototype.ifStatement = function (i) {\r\n        i.test.accept(this);\r\n        this.st.SEQStmt(i.consequent);\r\n        if (i.alternate) {\r\n            this.st.SEQStmt(i.alternate);\r\n        }\r\n        throw new Error(\"SemanticVistor.IfStatement\");\r\n    };\r\n    SemanticVisitor.prototype.importFrom = function (importFrom) {\r\n        this.st.visitAlias(importFrom.names, importFrom.range);\r\n    };\r\n    SemanticVisitor.prototype.list = function (list) {\r\n        this.st.SEQExpr(list.elts);\r\n    };\r\n    SemanticVisitor.prototype.module = function (module) {\r\n        throw new Error(\"module\");\r\n    };\r\n    SemanticVisitor.prototype.name = function (name) {\r\n        this.st.addDef(name.id.value, name.ctx === Load ? USE : DEF_LOCAL, name.range);\r\n    };\r\n    SemanticVisitor.prototype.num = function (num) {\r\n        // Do nothing, unless we are doing type inference.\r\n    };\r\n    SemanticVisitor.prototype.print = function (print) {\r\n        if (print.dest) {\r\n            print.dest.accept(this);\r\n        }\r\n        this.st.SEQExpr(print.values);\r\n    };\r\n    SemanticVisitor.prototype.returnStatement = function (rs) {\r\n        if (rs.value) {\r\n            rs.value.accept(this);\r\n            this.st.cur.returnsValue = true;\r\n            if (this.st.cur.generator) {\r\n                throw syntaxError(\"'return' with argument inside generator\");\r\n            }\r\n        }\r\n    };\r\n    SemanticVisitor.prototype.str = function (str) {\r\n        // Do nothing, unless we are doing type inference.\r\n    };\r\n    return SemanticVisitor;\r\n}());\r\nexport { SemanticVisitor };\r\n/**\r\n * The symbol table uses the abstract synntax tree (not the parse tree).\r\n */\r\nvar SymbolTable = (function () {\r\n    /**\r\n     *\r\n     */\r\n    function SymbolTable() {\r\n        this.cur = null;\r\n        this.top = null;\r\n        this.stack = [];\r\n        this.global = null; // points at top level module symFlags\r\n        this.curClass = null; // current class or null\r\n        this.tmpname = 0;\r\n        // mapping from ast nodes to their scope if they have one. we add an\r\n        // id to the ast node when a scope is created for it, and store it in\r\n        // here for the compiler to lookup later.\r\n        this.stss = {};\r\n    }\r\n    /**\r\n     * Lookup the SymbolTableScope for a scopeId of the AST.\r\n     */\r\n    SymbolTable.prototype.getStsForAst = function (ast) {\r\n        assert(ast.scopeId !== undefined, \"ast wasn't added to st?\");\r\n        var v = this.stss[ast.scopeId];\r\n        assert(v !== undefined, \"unknown sym tab entry\");\r\n        return v;\r\n    };\r\n    SymbolTable.prototype.SEQStmt = function (nodes) {\r\n        var len = nodes.length;\r\n        for (var i = 0; i < len; ++i) {\r\n            var val = nodes[i];\r\n            if (val)\r\n                this.visitStmt(val);\r\n        }\r\n    };\r\n    SymbolTable.prototype.SEQExpr = function (nodes) {\r\n        var len = nodes.length;\r\n        for (var i = 0; i < len; ++i) {\r\n            var val = nodes[i];\r\n            if (val)\r\n                this.visitExpr(val);\r\n        }\r\n    };\r\n    /**\r\n     * A block represents a scope.\r\n     * The following nodes in the AST define new blocks of the indicated type and name:\r\n     * Module        ModuleBlock   = 'module'    name = 'top'\r\n     * FunctionDef   FunctionBlock = 'function'  name = The name of the function.\r\n     * ClassDef      ClassBlock    = 'class'     name = The name of the class.\r\n     * Lambda        FunctionBlock = 'function'  name = 'lambda'\r\n     * GeneratoeExp  FunctionBlock = 'function'  name = 'genexpr'\r\n     *\r\n     * @param name\r\n     * @param blockType\r\n     * @param astNode The AST node that is defining the block.\r\n     * @param lineno\r\n     */\r\n    SymbolTable.prototype.enterBlock = function (name, blockType, astNode, range) {\r\n        //  name = fixReservedNames(name);\r\n        var prev = null;\r\n        if (this.cur) {\r\n            prev = this.cur;\r\n            this.stack.push(this.cur);\r\n        }\r\n        this.cur = new SymbolTableScope(this, name, blockType, astNode, range);\r\n        if (name === 'top') {\r\n            this.global = this.cur.symFlags;\r\n        }\r\n        if (prev) {\r\n            prev.children.push(this.cur);\r\n        }\r\n    };\r\n    SymbolTable.prototype.exitBlock = function () {\r\n        // print(\"exitBlock\");\r\n        this.cur = null;\r\n        if (this.stack.length > 0)\r\n            this.cur = this.stack.pop();\r\n    };\r\n    SymbolTable.prototype.visitParams = function (args, toplevel) {\r\n        for (var i = 0; i < args.length; ++i) {\r\n            var arg = args[i];\r\n            if (arg.constructor === Name) {\r\n                assert(arg.ctx === Param || (arg.ctx === Store && !toplevel));\r\n                this.addDef(arg.id.value, DEF_PARAM, arg.range);\r\n            }\r\n            else {\r\n                // Tuple isn't supported\r\n                throw syntaxError(\"invalid expression in parameter list\");\r\n            }\r\n        }\r\n    };\r\n    SymbolTable.prototype.visitArguments = function (a, range) {\r\n        if (a.args)\r\n            this.visitParams(a.args, true);\r\n        if (a.vararg) {\r\n            this.addDef(a.vararg, DEF_PARAM, range);\r\n            this.cur.varargs = true;\r\n        }\r\n        if (a.kwarg) {\r\n            this.addDef(a.kwarg, DEF_PARAM, range);\r\n            this.cur.varkeywords = true;\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    SymbolTable.prototype.newTmpname = function (range) {\r\n        this.addDef(\"_[\" + (++this.tmpname) + \"]\", DEF_LOCAL, range);\r\n    };\r\n    /**\r\n     * 1. Modifies symbol flags for the current scope.\r\n     * 2.a Adds a variable name for the current scope, OR\r\n     * 2.b Sets the SymbolFlags for a global variable.\r\n     * @param name\r\n     * @param flags\r\n     * @param lineno\r\n     */\r\n    SymbolTable.prototype.addDef = function (name, flags, range) {\r\n        var mangled = mangleName(this.curClass, name);\r\n        //  mangled = fixReservedNames(mangled);\r\n        // Modify symbol flags for the current scope.\r\n        var val = this.cur.symFlags[mangled];\r\n        if (val !== undefined) {\r\n            if ((flags & DEF_PARAM) && (val & DEF_PARAM)) {\r\n                throw syntaxError(\"duplicate argument '\" + name + \"' in function definition\", range);\r\n            }\r\n            val |= flags;\r\n        }\r\n        else {\r\n            val = flags;\r\n        }\r\n        this.cur.symFlags[mangled] = val;\r\n        if (flags & DEF_PARAM) {\r\n            this.cur.varnames.push(mangled);\r\n        }\r\n        else if (flags & DEF_GLOBAL) {\r\n            val = flags;\r\n            var fromGlobal = this.global[mangled];\r\n            if (fromGlobal !== undefined)\r\n                val |= fromGlobal;\r\n            this.global[mangled] = val;\r\n        }\r\n    };\r\n    SymbolTable.prototype.visitSlice = function (s) {\r\n        if (s instanceof Slice) {\r\n            if (s.lower)\r\n                this.visitExpr(s.lower);\r\n            if (s.upper)\r\n                this.visitExpr(s.upper);\r\n            if (s.step)\r\n                this.visitExpr(s.step);\r\n        }\r\n        else if (s instanceof ExtSlice) {\r\n            for (var i = 0; i < s.dims.length; ++i) {\r\n                this.visitSlice(s.dims[i]);\r\n            }\r\n        }\r\n        else if (s instanceof Index) {\r\n            this.visitExpr(s.value);\r\n        }\r\n        else if (s instanceof Ellipsis) {\r\n            // Do nothing.\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    SymbolTable.prototype.visitStmt = function (s) {\r\n        assert(s !== undefined, \"visitStmt called with undefined\");\r\n        if (s instanceof FunctionDef) {\r\n            this.addDef(s.name.value, DEF_LOCAL, s.range);\r\n            if (s.args.defaults)\r\n                this.SEQExpr(s.args.defaults);\r\n            if (s.decorator_list)\r\n                this.SEQExpr(s.decorator_list);\r\n            this.enterBlock(s.name.value, FunctionBlock, s, s.range);\r\n            this.visitArguments(s.args, s.range);\r\n            this.SEQStmt(s.body);\r\n            this.exitBlock();\r\n        }\r\n        else if (s instanceof ClassDef) {\r\n            this.addDef(s.name.value, DEF_LOCAL, s.range);\r\n            this.SEQExpr(s.bases);\r\n            if (s.decorator_list)\r\n                this.SEQExpr(s.decorator_list);\r\n            this.enterBlock(s.name.value, ClassBlock, s, s.range);\r\n            var tmp = this.curClass;\r\n            this.curClass = s.name.value;\r\n            this.SEQStmt(s.body);\r\n            this.curClass = tmp;\r\n            this.exitBlock();\r\n        }\r\n        else if (s instanceof ReturnStatement) {\r\n            if (s.value) {\r\n                this.visitExpr(s.value);\r\n                this.cur.returnsValue = true;\r\n                if (this.cur.generator) {\r\n                    throw syntaxError(\"'return' with argument inside generator\");\r\n                }\r\n            }\r\n        }\r\n        else if (s instanceof DeleteStatement) {\r\n            this.SEQExpr(s.targets);\r\n        }\r\n        else if (s instanceof Assign) {\r\n            this.SEQExpr(s.targets);\r\n            this.visitExpr(s.value);\r\n        }\r\n        else if (s instanceof AugAssign) {\r\n            this.visitExpr(s.target);\r\n            this.visitExpr(s.value);\r\n        }\r\n        else if (s instanceof Print) {\r\n            if (s.dest)\r\n                this.visitExpr(s.dest);\r\n            this.SEQExpr(s.values);\r\n        }\r\n        else if (s instanceof ForStatement) {\r\n            this.visitExpr(s.target);\r\n            this.visitExpr(s.iter);\r\n            this.SEQStmt(s.body);\r\n            if (s.orelse)\r\n                this.SEQStmt(s.orelse);\r\n        }\r\n        else if (s instanceof WhileStatement) {\r\n            this.visitExpr(s.test);\r\n            this.SEQStmt(s.body);\r\n            if (s.orelse)\r\n                this.SEQStmt(s.orelse);\r\n        }\r\n        else if (s instanceof IfStatement) {\r\n            this.visitExpr(s.test);\r\n            this.SEQStmt(s.consequent);\r\n            if (s.alternate) {\r\n                this.SEQStmt(s.alternate);\r\n            }\r\n        }\r\n        else if (s instanceof Raise) {\r\n            if (s.type) {\r\n                this.visitExpr(s.type);\r\n                if (s.inst) {\r\n                    this.visitExpr(s.inst);\r\n                    if (s.tback)\r\n                        this.visitExpr(s.tback);\r\n                }\r\n            }\r\n        }\r\n        else if (s instanceof TryExcept) {\r\n            this.SEQStmt(s.body);\r\n            this.SEQStmt(s.orelse);\r\n            this.visitExcepthandlers(s.handlers);\r\n        }\r\n        else if (s instanceof TryFinally) {\r\n            this.SEQStmt(s.body);\r\n            this.SEQStmt(s.finalbody);\r\n        }\r\n        else if (s instanceof Assert) {\r\n            this.visitExpr(s.test);\r\n            if (s.msg)\r\n                this.visitExpr(s.msg);\r\n        }\r\n        else if (s instanceof ImportStatement) {\r\n            var imps = s;\r\n            this.visitAlias(imps.names, imps.range);\r\n        }\r\n        else if (s instanceof ImportFrom) {\r\n            var impFrom = s;\r\n            this.visitAlias(impFrom.names, impFrom.range);\r\n        }\r\n        else if (s instanceof Exec) {\r\n            this.visitExpr(s.body);\r\n            if (s.globals) {\r\n                this.visitExpr(s.globals);\r\n                if (s.locals)\r\n                    this.visitExpr(s.locals);\r\n            }\r\n        }\r\n        else if (s instanceof Global) {\r\n            var nameslen = s.names.length;\r\n            for (var i = 0; i < nameslen; ++i) {\r\n                var name_1 = mangleName(this.curClass, s.names[i]);\r\n                //              name = fixReservedNames(name);\r\n                var cur = this.cur.symFlags[name_1];\r\n                if (cur & (DEF_LOCAL | USE)) {\r\n                    if (cur & DEF_LOCAL) {\r\n                        throw syntaxError(\"name '\" + name_1 + \"' is assigned to before global declaration\", s.range);\r\n                    }\r\n                    else {\r\n                        throw syntaxError(\"name '\" + name_1 + \"' is used prior to global declaration\", s.range);\r\n                    }\r\n                }\r\n                this.addDef(name_1, DEF_GLOBAL, s.range);\r\n            }\r\n        }\r\n        else if (s instanceof ExpressionStatement) {\r\n            this.visitExpr(s.value);\r\n        }\r\n        else if (s instanceof Pass || s instanceof BreakStatement || s instanceof ContinueStatement) {\r\n            // Do nothing.\r\n        }\r\n        else if (s instanceof WithStatement) {\r\n            var ws = s;\r\n            this.newTmpname(ws.range);\r\n            this.visitExpr(ws.context_expr);\r\n            if (ws.optional_vars) {\r\n                this.newTmpname(ws.range);\r\n                this.visitExpr(ws.optional_vars);\r\n            }\r\n            this.SEQStmt(ws.body);\r\n        }\r\n        else {\r\n            fail(\"Unhandled type \" + s.constructor.name + \" in visitStmt\");\r\n        }\r\n    };\r\n    SymbolTable.prototype.visitExpr = function (e) {\r\n        assert(e !== undefined, \"visitExpr called with undefined\");\r\n        if (e instanceof BoolOp) {\r\n            this.SEQExpr(e.values);\r\n        }\r\n        else if (e instanceof BinOp) {\r\n            this.visitExpr(e.lhs);\r\n            this.visitExpr(e.rhs);\r\n        }\r\n        else if (e instanceof UnaryOp) {\r\n            this.visitExpr(e.operand);\r\n        }\r\n        else if (e instanceof Lambda) {\r\n            this.addDef(\"lambda\", DEF_LOCAL, e.range);\r\n            if (e.args.defaults)\r\n                this.SEQExpr(e.args.defaults);\r\n            this.enterBlock(\"lambda\", FunctionBlock, e, e.range);\r\n            this.visitArguments(e.args, e.range);\r\n            this.visitExpr(e.body);\r\n            this.exitBlock();\r\n        }\r\n        else if (e instanceof IfExp) {\r\n            this.visitExpr(e.test);\r\n            this.visitExpr(e.body);\r\n            this.visitExpr(e.orelse);\r\n        }\r\n        else if (e instanceof Dict) {\r\n            this.SEQExpr(e.keys);\r\n            this.SEQExpr(e.values);\r\n        }\r\n        else if (e instanceof ListComp) {\r\n            this.newTmpname(e.range);\r\n            this.visitExpr(e.elt);\r\n            this.visitComprehension(e.generators, 0);\r\n        }\r\n        else if (e instanceof GeneratorExp) {\r\n            this.visitGenexp(e);\r\n        }\r\n        else if (e instanceof Yield) {\r\n            if (e.value)\r\n                this.visitExpr(e.value);\r\n            this.cur.generator = true;\r\n            if (this.cur.returnsValue) {\r\n                throw syntaxError(\"'return' with argument inside generator\");\r\n            }\r\n        }\r\n        else if (e instanceof Compare) {\r\n            this.visitExpr(e.left);\r\n            this.SEQExpr(e.comparators);\r\n        }\r\n        else if (e instanceof Call) {\r\n            this.visitExpr(e.func);\r\n            this.SEQExpr(e.args);\r\n            for (var i = 0; i < e.keywords.length; ++i)\r\n                this.visitExpr(e.keywords[i].value);\r\n            // print(JSON.stringify(e.starargs, null, 2));\r\n            // print(JSON.stringify(e.kwargs, null,2));\r\n            if (e.starargs)\r\n                this.visitExpr(e.starargs);\r\n            if (e.kwargs)\r\n                this.visitExpr(e.kwargs);\r\n        }\r\n        else if (e instanceof Num || e instanceof Str) {\r\n            // Do nothing.\r\n        }\r\n        else if (e instanceof Attribute) {\r\n            this.visitExpr(e.value);\r\n        }\r\n        else if (e instanceof Subscript) {\r\n            this.visitExpr(e.value);\r\n            this.visitSlice(e.slice);\r\n        }\r\n        else if (e instanceof Name) {\r\n            this.addDef(e.id.value, e.ctx === Load ? USE : DEF_LOCAL, e.range);\r\n        }\r\n        else if (e instanceof List || e instanceof Tuple) {\r\n            this.SEQExpr(e.elts);\r\n        }\r\n        else {\r\n            fail(\"Unhandled type \" + e.constructor.name + \" in visitExpr\");\r\n        }\r\n    };\r\n    SymbolTable.prototype.visitComprehension = function (lcs, startAt) {\r\n        var len = lcs.length;\r\n        for (var i = startAt; i < len; ++i) {\r\n            var lc = lcs[i];\r\n            this.visitExpr(lc.target);\r\n            this.visitExpr(lc.iter);\r\n            this.SEQExpr(lc.ifs);\r\n        }\r\n    };\r\n    /**\r\n     * This is probably not correct for names. What are they?\r\n     * @param names\r\n     * @param range\r\n     */\r\n    SymbolTable.prototype.visitAlias = function (names, range) {\r\n        /* Compute store_name, the name actually bound by the import\r\n            operation.  It is diferent than a->name when a->name is a\r\n            dotted package name (e.g. spam.eggs)\r\n        */\r\n        for (var _i = 0, names_1 = names; _i < names_1.length; _i++) {\r\n            var a = names_1[_i];\r\n            var name_2 = a.asname === null ? a.name.value : a.asname;\r\n            var storename = name_2;\r\n            var dot = name_2.indexOf('.');\r\n            if (dot !== -1)\r\n                storename = name_2.substr(0, dot);\r\n            if (name_2 !== \"*\") {\r\n                this.addDef(storename, DEF_IMPORT, range);\r\n            }\r\n            else {\r\n                if (this.cur.blockType !== ModuleBlock) {\r\n                    throw syntaxError(\"import * only allowed at module level\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    SymbolTable.prototype.visitGenexp = function (e) {\r\n        var outermost = e.generators[0];\r\n        // outermost is evaled in current scope\r\n        this.visitExpr(outermost.iter);\r\n        this.enterBlock(\"genexpr\", FunctionBlock, e, e.range);\r\n        this.cur.generator = true;\r\n        this.addDef(\".0\", DEF_PARAM, e.range);\r\n        this.visitExpr(outermost.target);\r\n        this.SEQExpr(outermost.ifs);\r\n        this.visitComprehension(e.generators, 1);\r\n        this.visitExpr(e.elt);\r\n        this.exitBlock();\r\n    };\r\n    SymbolTable.prototype.visitExcepthandlers = function (handlers) {\r\n        for (var i = 0, eh = void 0; eh = handlers[i]; ++i) {\r\n            if (eh.type)\r\n                this.visitExpr(eh.type);\r\n            if (eh.name)\r\n                this.visitExpr(eh.name);\r\n            this.SEQStmt(eh.body);\r\n        }\r\n    };\r\n    /**\r\n     * @param ste The Symbol Table Scope.\r\n     */\r\n    SymbolTable.prototype.analyzeBlock = function (ste, bound, free, global) {\r\n        var local = {};\r\n        var scope = {};\r\n        var newglobal = {};\r\n        var newbound = {};\r\n        var newfree = {};\r\n        if (ste.blockType === ClassBlock) {\r\n            dictUpdate(newglobal, global);\r\n            if (bound)\r\n                dictUpdate(newbound, bound);\r\n        }\r\n        for (var name_3 in ste.symFlags) {\r\n            if (ste.symFlags.hasOwnProperty(name_3)) {\r\n                var flags = ste.symFlags[name_3];\r\n                this.analyzeName(ste, scope, name_3, flags, bound, local, free, global);\r\n            }\r\n        }\r\n        if (ste.blockType !== ClassBlock) {\r\n            if (ste.blockType === FunctionBlock)\r\n                dictUpdate(newbound, local);\r\n            if (bound)\r\n                dictUpdate(newbound, bound);\r\n            dictUpdate(newglobal, global);\r\n        }\r\n        var allfree = {};\r\n        var childlen = ste.children.length;\r\n        for (var i = 0; i < childlen; ++i) {\r\n            var c = ste.children[i];\r\n            this.analyzeChildBlock(c, newbound, newfree, newglobal, allfree);\r\n            if (c.hasFree || c.childHasFree)\r\n                ste.childHasFree = true;\r\n        }\r\n        dictUpdate(newfree, allfree);\r\n        if (ste.blockType === FunctionBlock)\r\n            this.analyzeCells(scope, newfree);\r\n        this.updateSymbols(ste.symFlags, scope, bound, newfree, ste.blockType === ClassBlock);\r\n        dictUpdate(free, newfree);\r\n    };\r\n    SymbolTable.prototype.analyzeChildBlock = function (entry, bound, free, global, childFree) {\r\n        var tempBound = {};\r\n        dictUpdate(tempBound, bound);\r\n        var tempFree = {};\r\n        dictUpdate(tempFree, free);\r\n        var tempGlobal = {};\r\n        dictUpdate(tempGlobal, global);\r\n        this.analyzeBlock(entry, tempBound, tempFree, tempGlobal);\r\n        dictUpdate(childFree, tempFree);\r\n    };\r\n    SymbolTable.prototype.analyzeCells = function (scope, free) {\r\n        for (var name_4 in scope) {\r\n            if (scope.hasOwnProperty(name_4)) {\r\n                var flags = scope[name_4];\r\n                if (flags !== LOCAL)\r\n                    continue;\r\n                if (free[name_4] === undefined)\r\n                    continue;\r\n                scope[name_4] = CELL;\r\n                delete free[name_4];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * store scope info back into the st symbols dict. symbols is modified,\r\n     * others are not.\r\n     */\r\n    SymbolTable.prototype.updateSymbols = function (symbols, scope, bound, free, classflag) {\r\n        for (var name_5 in symbols) {\r\n            if (symbols.hasOwnProperty(name_5)) {\r\n                var flags = symbols[name_5];\r\n                var w = scope[name_5];\r\n                flags |= w << SCOPE_OFF;\r\n                symbols[name_5] = flags;\r\n            }\r\n        }\r\n        var freeValue = FREE << SCOPE_OFF;\r\n        for (var name_6 in free) {\r\n            if (free.hasOwnProperty(name_6)) {\r\n                var o = symbols[name_6];\r\n                if (o !== undefined) {\r\n                    // it could be a free variable in a method of the class that has\r\n                    // the same name as a local or global in the class scope\r\n                    if (classflag && (o & (DEF_BOUND | DEF_GLOBAL))) {\r\n                        var i = o | DEF_FREE_CLASS;\r\n                        symbols[name_6] = i;\r\n                    }\r\n                    // else it's not free, probably a cell\r\n                    continue;\r\n                }\r\n                if (bound[name_6] === undefined)\r\n                    continue;\r\n                symbols[name_6] = freeValue;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {Object} ste The Symbol Table Scope.\r\n     * @param {string} name\r\n     */\r\n    SymbolTable.prototype.analyzeName = function (ste, dict, name, flags, bound, local, free, global) {\r\n        if (flags & DEF_GLOBAL) {\r\n            if (flags & DEF_PARAM)\r\n                throw syntaxError(\"name '\" + name + \"' is local and global\", ste.range);\r\n            dict[name] = GLOBAL_EXPLICIT;\r\n            global[name] = null;\r\n            if (bound && bound[name] !== undefined)\r\n                delete bound[name];\r\n            return;\r\n        }\r\n        if (flags & DEF_BOUND) {\r\n            dict[name] = LOCAL;\r\n            local[name] = null;\r\n            delete global[name];\r\n            return;\r\n        }\r\n        if (bound && bound[name] !== undefined) {\r\n            dict[name] = FREE;\r\n            ste.hasFree = true;\r\n            free[name] = null;\r\n        }\r\n        else if (global && global[name] !== undefined) {\r\n            dict[name] = GLOBAL_IMPLICIT;\r\n        }\r\n        else {\r\n            if (ste.isNested)\r\n                ste.hasFree = true;\r\n            dict[name] = GLOBAL_IMPLICIT;\r\n        }\r\n    };\r\n    SymbolTable.prototype.analyze = function () {\r\n        var free = {};\r\n        var global = {};\r\n        this.analyzeBlock(this.top, null, free, global);\r\n    };\r\n    return SymbolTable;\r\n}());\r\nexport { SymbolTable };\r\n","import { assert } from '../common/asserts';\r\nimport { Symbol } from './Symbol';\r\nimport { DEF_PARAM } from './SymbolConstants';\r\nimport { DEF_BOUND } from './SymbolConstants';\r\nimport { FREE } from './SymbolConstants';\r\nimport { FunctionBlock } from './SymbolConstants';\r\nimport { GLOBAL_EXPLICIT } from './SymbolConstants';\r\nimport { GLOBAL_IMPLICIT } from './SymbolConstants';\r\nimport { SCOPE_MASK } from './SymbolConstants';\r\nimport { SCOPE_OFF } from './SymbolConstants';\r\nvar astScopeCounter = 0;\r\n/**\r\n * A SymbolTableScope is created for nodes in the AST.\r\n * It is created only when the SymbolTable enters a block.\r\n */\r\nvar SymbolTableScope = (function () {\r\n    /**\r\n     * @param table\r\n     * @param name The name of the node defining the scope.\r\n     * @param blockType\r\n     * @param astNode\r\n     * @param range\r\n     */\r\n    function SymbolTableScope(table, name, blockType, astNode, range) {\r\n        /**\r\n         * A mapping from the name of a symbol to its flags.\r\n         */\r\n        this.symFlags = {};\r\n        /**\r\n         * A list of (local) variables that exists in the current scope.\r\n         * This is populated by the addDef method in SymbolTable.\r\n         * e.g. Name, FunctionDef, ClassDef, Global?, Lambda, Alias.\r\n         * Note that global variables are maintained in the SymbolTable to which we have access.\r\n         */\r\n        this.varnames = [];\r\n        this.children = [];\r\n        this.table = table;\r\n        this.name = name;\r\n        this.blockType = blockType;\r\n        astNode.scopeId = astScopeCounter++;\r\n        table.stss[astNode.scopeId] = this;\r\n        this.range = range;\r\n        if (table.cur && (table.cur.isNested || table.cur.blockType === FunctionBlock)) {\r\n            this.isNested = true;\r\n        }\r\n        else {\r\n            this.isNested = false;\r\n        }\r\n        this.hasFree = false;\r\n        this.childHasFree = false; // true if child block has free vars including free refs to globals\r\n        this.generator = false;\r\n        this.varargs = false;\r\n        this.varkeywords = false;\r\n        this.returnsValue = false;\r\n        // cache of Symbols for returning to other parts of code\r\n        this.symbols = {};\r\n    }\r\n    SymbolTableScope.prototype.get_type = function () { return this.blockType; };\r\n    SymbolTableScope.prototype.get_name = function () { return this.name; };\r\n    SymbolTableScope.prototype.get_range = function () { return this.range; };\r\n    SymbolTableScope.prototype.is_nested = function () { return this.isNested; };\r\n    SymbolTableScope.prototype.has_children = function () { return this.children.length > 0; };\r\n    SymbolTableScope.prototype.get_identifiers = function () { return this._identsMatching(function (x) { return true; }); };\r\n    SymbolTableScope.prototype.lookup = function (name) {\r\n        var sym;\r\n        if (!this.symbols.hasOwnProperty(name)) {\r\n            var flags = this.symFlags[name];\r\n            var namespaces = this.__check_children(name);\r\n            sym = this.symbols[name] = new Symbol(name, flags, namespaces);\r\n        }\r\n        else {\r\n            sym = this.symbols[name];\r\n        }\r\n        return sym;\r\n    };\r\n    SymbolTableScope.prototype.__check_children = function (name) {\r\n        // print(\"  check_children:\", name);\r\n        var ret = [];\r\n        for (var i = 0; i < this.children.length; ++i) {\r\n            var child = this.children[i];\r\n            if (child.name === name)\r\n                ret.push(child);\r\n        }\r\n        return ret;\r\n    };\r\n    /**\r\n     * Looks in the bindings for this scope and returns the names of the nodes that match the mask filter.\r\n     */\r\n    SymbolTableScope.prototype._identsMatching = function (filter) {\r\n        var ret = [];\r\n        for (var k in this.symFlags) {\r\n            if (this.symFlags.hasOwnProperty(k)) {\r\n                if (filter(this.symFlags[k]))\r\n                    ret.push(k);\r\n            }\r\n        }\r\n        ret.sort();\r\n        return ret;\r\n    };\r\n    /**\r\n     * Returns the names of parameters (DEF_PARAM) for function scopes.\r\n     */\r\n    SymbolTableScope.prototype.get_parameters = function () {\r\n        assert(this.get_type() === 'function', \"get_parameters only valid for function scopes\");\r\n        if (!this._funcParams) {\r\n            this._funcParams = this._identsMatching(function (x) { return !!(x & DEF_PARAM); });\r\n        }\r\n        return this._funcParams;\r\n    };\r\n    /**\r\n     * Returns the names of local variables (DEF_BOUND) for function scopes.\r\n     */\r\n    SymbolTableScope.prototype.get_locals = function () {\r\n        assert(this.get_type() === 'function', \"get_locals only valid for function scopes\");\r\n        if (!this._funcLocals) {\r\n            this._funcLocals = this._identsMatching(function (x) { return !!(x & DEF_BOUND); });\r\n        }\r\n        return this._funcLocals;\r\n    };\r\n    /**\r\n     * Returns the names of global variables for function scopes.\r\n     */\r\n    SymbolTableScope.prototype.get_globals = function () {\r\n        assert(this.get_type() === 'function', \"get_globals only valid for function scopes\");\r\n        if (!this._funcGlobals) {\r\n            this._funcGlobals = this._identsMatching(function (x) {\r\n                var masked = (x >> SCOPE_OFF) & SCOPE_MASK;\r\n                return masked === GLOBAL_IMPLICIT || masked === GLOBAL_EXPLICIT;\r\n            });\r\n        }\r\n        return this._funcGlobals;\r\n    };\r\n    /**\r\n     * Returns the names of free variables for function scopes.\r\n     */\r\n    SymbolTableScope.prototype.get_frees = function () {\r\n        assert(this.get_type() === 'function', \"get_frees only valid for function scopes\");\r\n        if (!this._funcFrees) {\r\n            this._funcFrees = this._identsMatching(function (x) {\r\n                var masked = (x >> SCOPE_OFF) & SCOPE_MASK;\r\n                return masked === FREE;\r\n            });\r\n        }\r\n        return this._funcFrees;\r\n    };\r\n    /**\r\n     * Returns the names of methods for class scopes.\r\n     */\r\n    SymbolTableScope.prototype.get_methods = function () {\r\n        assert(this.get_type() === 'class', \"get_methods only valid for class scopes\");\r\n        if (!this._classMethods) {\r\n            // todo; uniq?\r\n            var all = [];\r\n            for (var i = 0; i < this.children.length; ++i)\r\n                all.push(this.children[i].name);\r\n            all.sort();\r\n            this._classMethods = all;\r\n        }\r\n        return this._classMethods;\r\n    };\r\n    /**\r\n     * I think this returns the scopeId of a node with the specified name.\r\n     */\r\n    SymbolTableScope.prototype.getScope = function (name) {\r\n        // print(\"getScope\");\r\n        // for (var k in this.symFlags) print(k);\r\n        var v = this.symFlags[name];\r\n        if (v === undefined)\r\n            return 0;\r\n        return (v >> SCOPE_OFF) & SCOPE_MASK;\r\n    };\r\n    return SymbolTableScope;\r\n}());\r\nexport { SymbolTableScope };\r\n","import { DEF_BOUND } from './SymbolConstants';\r\nimport { DEF_IMPORT } from './SymbolConstants';\r\nimport { DEF_LOCAL } from './SymbolConstants';\r\nimport { DEF_PARAM } from './SymbolConstants';\r\nimport { FREE } from './SymbolConstants';\r\nimport { GLOBAL_EXPLICIT } from './SymbolConstants';\r\nimport { GLOBAL_IMPLICIT } from './SymbolConstants';\r\nimport { SCOPE_MASK } from './SymbolConstants';\r\nimport { SCOPE_OFF } from './SymbolConstants';\r\nimport { USE } from './SymbolConstants';\r\nvar Symbol = (function () {\r\n    /**\r\n     * @param name\r\n     * @param flags\r\n     * @param namespaces\r\n     */\r\n    function Symbol(name, flags, namespaces) {\r\n        this.__name = name;\r\n        this.__flags = flags;\r\n        this.__scope = (flags >> SCOPE_OFF) & SCOPE_MASK;\r\n        this.__namespaces = namespaces || [];\r\n    }\r\n    Symbol.prototype.get_name = function () { return this.__name; };\r\n    Symbol.prototype.is_referenced = function () { return !!(this.__flags & USE); };\r\n    Symbol.prototype.is_parameter = function () {\r\n        return !!(this.__flags & DEF_PARAM);\r\n    };\r\n    Symbol.prototype.is_global = function () {\r\n        return this.__scope === GLOBAL_IMPLICIT || this.__scope === GLOBAL_EXPLICIT;\r\n    };\r\n    Symbol.prototype.is_declared_global = function () {\r\n        return this.__scope === GLOBAL_EXPLICIT;\r\n    };\r\n    Symbol.prototype.is_local = function () {\r\n        return !!(this.__flags & DEF_BOUND);\r\n    };\r\n    Symbol.prototype.is_free = function () { return this.__scope === FREE; };\r\n    Symbol.prototype.is_imported = function () { return !!(this.__flags & DEF_IMPORT); };\r\n    Symbol.prototype.is_assigned = function () { return !!(this.__flags & DEF_LOCAL); };\r\n    Symbol.prototype.is_namespace = function () { return this.__namespaces && this.__namespaces.length > 0; };\r\n    Symbol.prototype.get_namespaces = function () { return this.__namespaces; };\r\n    return Symbol;\r\n}());\r\nexport { Symbol };\r\n","/**\r\n * @param priv\r\n * @param name\r\n */\r\nexport function mangleName(priv, name) {\r\n    var strpriv = null;\r\n    if (priv === null || name === null || name.charAt(0) !== '_' || name.charAt(1) !== '_') {\r\n        return name;\r\n    }\r\n    // don't mangle dunder (double underscore) names e.g. __id__.\r\n    if (name.charAt(name.length - 1) === '_' && name.charAt(name.length - 2) === '_') {\r\n        return name;\r\n    }\r\n    // don't mangle classes that are all _ (obscure much?)\r\n    strpriv = priv;\r\n    strpriv.replace(/_/g, '');\r\n    if (strpriv === '') {\r\n        return name;\r\n    }\r\n    strpriv = priv;\r\n    strpriv.replace(/^_*/, '');\r\n    strpriv = '_' + strpriv + name;\r\n    return strpriv;\r\n}\r\n","export function dictUpdate(a, b) {\r\n    for (var kb in b) {\r\n        if (b.hasOwnProperty(kb)) {\r\n            a[kb] = b[kb];\r\n        }\r\n    }\r\n}\r\n","/* Flags for def-use information */\r\nexport var DEF_GLOBAL = 1 << 0; /* global stmt */\r\nexport var DEF_LOCAL = 2 << 0; /* assignment in code block */\r\nexport var DEF_PARAM = 2 << 1; /* formal parameter */\r\nexport var USE = 2 << 2; /* name is used */\r\nexport var DEF_STAR = 2 << 3; /* parameter is star arg */\r\nexport var DEF_DOUBLESTAR = 2 << 4; /* parameter is star-star arg */\r\nexport var DEF_INTUPLE = 2 << 5; /* name defined in tuple in parameters */\r\nexport var DEF_FREE = 2 << 6; /* name used but not defined in nested block */\r\nexport var DEF_FREE_GLOBAL = 2 << 7; /* free variable is actually implicit global */\r\nexport var DEF_FREE_CLASS = 2 << 8; /* free variable from class's method */\r\nexport var DEF_IMPORT = 2 << 9; /* assignment occurred via import */\r\nexport var DEF_BOUND = (DEF_LOCAL | DEF_PARAM | DEF_IMPORT);\r\n/* GLOBAL_EXPLICIT and GLOBAL_IMPLICIT are used internally by the symbol\r\n   table.  GLOBAL is returned from PyST_GetScope() for either of them.\r\n   It is stored in ste_symbols at bits 12-14.\r\n*/\r\nexport var SCOPE_OFF = 11;\r\nexport var SCOPE_MASK = 7;\r\nexport var LOCAL = 1;\r\nexport var GLOBAL_EXPLICIT = 2;\r\nexport var GLOBAL_IMPLICIT = 3;\r\nexport var FREE = 4;\r\nexport var CELL = 5;\r\n/* The following three names are used for the ste_unoptimized bit field */\r\nexport var OPT_IMPORT_STAR = 1;\r\nexport var OPT_EXEC = 2;\r\nexport var OPT_BARE_EXEC = 4;\r\nexport var OPT_TOPLEVEL = 8; /* top-level names, including eval and exec */\r\nexport var GENERATOR = 2;\r\nexport var GENERATOR_EXPRESSION = 2;\r\nexport var ModuleBlock = 'module';\r\nexport var FunctionBlock = 'function';\r\nexport var ClassBlock = 'class';\r\n","import { assert, fail } from '../common/asserts';\r\nimport { NCH, CHILD, FIND } from '../common/tree';\r\nimport { Add } from './types';\r\n// TODO: Conventions\r\nimport { Alias } from './types';\r\nimport { Arguments } from './types';\r\nimport { And } from './types';\r\nimport { Assert } from './types';\r\nimport { Assign } from './types';\r\nimport { Attribute } from './types';\r\nimport { AugAssign } from './types';\r\nimport { AugLoad } from './types';\r\nimport { AugStore } from './types';\r\nimport { BinOp } from './types';\r\nimport { BitAnd } from './types';\r\nimport { BitOr } from './types';\r\nimport { BitXor } from './types';\r\nimport { BoolOp } from './types';\r\nimport { BreakStatement } from './types';\r\nimport { Call } from './types';\r\nimport { ClassDef } from './types';\r\nimport { Compare } from './types';\r\nimport { Comprehension } from './types';\r\nimport { ContinueStatement } from './types';\r\nimport { Del } from './types';\r\nimport { DeleteStatement } from './types';\r\nimport { Dict } from './types';\r\nimport { Div } from './types';\r\nimport { Ellipsis } from './types';\r\nimport { Eq } from './types';\r\nimport { ExceptHandler } from './types';\r\nimport { Exec } from './types';\r\nimport { ExpressionStatement } from './types';\r\nimport { ExtSlice } from './types';\r\nimport { FloorDiv } from './types';\r\nimport { ForStatement } from './types';\r\nimport { FunctionDef } from './types';\r\nimport { GeneratorExp } from './types';\r\nimport { Global } from './types';\r\nimport { Gt } from './types';\r\nimport { GtE } from './types';\r\n// FIXME: Convention\r\nimport { Keyword } from './types';\r\nimport { IfStatement } from './types';\r\nimport { IfExp } from './types';\r\nimport { ImportStatement } from './types';\r\nimport { ImportFrom } from './types';\r\nimport { Index } from './types';\r\nimport { In } from './types';\r\nimport { Invert } from './types';\r\nimport { Is } from './types';\r\nimport { IsNot } from './types';\r\nimport { Lambda } from './types';\r\nimport { List } from './types';\r\nimport { ListComp } from './types';\r\nimport { Load } from './types';\r\nimport { LShift } from './types';\r\nimport { Lt } from './types';\r\nimport { LtE } from './types';\r\nimport { Mod } from './types';\r\n// import { Module } from './types';\r\nimport { Mult } from './types';\r\nimport { NonLocal } from './types';\r\nimport { Name } from './types';\r\nimport { Not } from './types';\r\nimport { NotEq } from './types';\r\nimport { NotIn } from './types';\r\nimport { Num } from './types';\r\nimport { Or } from './types';\r\nimport { Param } from './types';\r\nimport { Pass } from './types';\r\nimport { Pow } from './types';\r\nimport { Print } from './types';\r\nimport { Raise } from './types';\r\nimport { RangeAnnotated } from './types';\r\nimport { ReturnStatement } from './types';\r\nimport { RShift } from './types';\r\nimport { Slice } from './types';\r\nimport { Store } from './types';\r\nimport { Str } from './types';\r\nimport { Sub } from './types';\r\nimport { Subscript } from './types';\r\nimport { TryExcept } from './types';\r\nimport { TryFinally } from './types';\r\nimport { Tuple } from './types';\r\nimport { UAdd } from './types';\r\nimport { UnaryOp } from './types';\r\nimport { USub } from './types';\r\nimport { WhileStatement } from './types';\r\nimport { WithStatement } from './types';\r\nimport { Yield } from './types';\r\nimport { isNumber, isString } from '../common/base';\r\nimport { ParseTables } from '../cst/tables';\r\nimport { Tokens as TOK } from '../cst/Tokens';\r\nimport { floatAST, intAST, longAST } from './numericLiteral';\r\n// import { cstDump } from './parser';\r\nimport { grammarName } from '../cst/grammarName';\r\n//\r\n// This is pretty much a straight port of ast.c from CPython 2.6.5.\r\n//\r\n// The previous version was easier to work with and more JS-ish, but having a\r\n// somewhat different ast structure than cpython makes testing more difficult.\r\n//\r\n// This way, we can use a dump from the ast module on any arbitrary python\r\n// code and know that we're the same up to ast level, at least.\r\n//\r\nvar SYM = ParseTables.sym;\r\n/**\r\n *\r\n */\r\nvar LONG_THRESHOLD = Math.pow(2, 53);\r\n/**\r\n * FIXME: Consolidate with parseError in parser.\r\n */\r\nfunction syntaxError(message, range) {\r\n    assert(isString(message), \"message must be a string\");\r\n    assert(isNumber(range.begin.line), \"lineNumber must be a number\");\r\n    var e = new SyntaxError(message /*, fileName*/);\r\n    e['lineNumber'] = range.begin.line;\r\n    return e;\r\n}\r\nvar Compiling = (function () {\r\n    function Compiling(encoding) {\r\n        this.c_encoding = encoding;\r\n    }\r\n    return Compiling;\r\n}());\r\n/**\r\n * Asserts that the type of the node is that specified.\r\n */\r\nfunction REQ(n, type) {\r\n    // Avoid the cost of building the message string when there is no issue.\r\n    if (n.type !== type) {\r\n        fail(\"node must have type \" + type + \" = \" + grammarName(type) + \", but was \" + n.type + \" = \" + grammarName(n.type) + \".\");\r\n    }\r\n}\r\n/**\r\n * Nothing more than assertion that the argument is a string.\r\n */\r\nfunction strobj(s) {\r\n    // Avoid the cost of building the message string when there is no issue.\r\n    if (typeof s !== 'string') {\r\n        fail(\"expecting string, got \" + (typeof s));\r\n    }\r\n    // This previously constructed the runtime representation.\r\n    // That may have had an string intern side effect?\r\n    return s;\r\n}\r\nfunction numStmts(n) {\r\n    switch (n.type) {\r\n        case SYM.single_input:\r\n            if (CHILD(n, 0).type === TOK.T_NEWLINE)\r\n                return 0;\r\n            else\r\n                return numStmts(CHILD(n, 0));\r\n        case SYM.file_input:\r\n            var cnt = 0;\r\n            for (var i = 0; i < NCH(n); ++i) {\r\n                var ch = CHILD(n, i);\r\n                if (ch.type === SYM.stmt) {\r\n                    cnt += numStmts(ch);\r\n                }\r\n            }\r\n            return cnt;\r\n        case SYM.stmt:\r\n            return numStmts(CHILD(n, 0));\r\n        case SYM.compound_stmt:\r\n            return 1;\r\n        case SYM.simple_stmt:\r\n            return Math.floor(NCH(n) / 2); // div 2 is to remove count of ;s\r\n        case SYM.suite:\r\n            if (NCH(n) === 1)\r\n                return numStmts(CHILD(n, 0));\r\n            else {\r\n                var cnt_1 = 0;\r\n                for (var i = 2; i < NCH(n) - 1; ++i) {\r\n                    cnt_1 += numStmts(CHILD(n, i));\r\n                }\r\n                return cnt_1;\r\n            }\r\n        default: {\r\n            throw new Error(\"Non-statement found\");\r\n        }\r\n    }\r\n}\r\nfunction forbiddenCheck(c, n, x, range) {\r\n    if (x === \"None\")\r\n        throw syntaxError(\"assignment to None\", range);\r\n    if (x === \"True\" || x === \"False\")\r\n        throw syntaxError(\"assignment to True or False is forbidden\", range);\r\n}\r\n/**\r\n * Set the context ctx for e, recursively traversing e.\r\n *\r\n * Only sets context for expr kinds that can appear in assignment context as\r\n * per the asdl file.\r\n */\r\nfunction setContext(c, e, ctx, n) {\r\n    assert(ctx !== AugStore && ctx !== AugLoad);\r\n    var s = null;\r\n    var exprName = null;\r\n    if (e instanceof Attribute) {\r\n        if (ctx === Store)\r\n            forbiddenCheck(c, n, e.attr.value, n.range);\r\n        e.ctx = ctx;\r\n    }\r\n    else if (e instanceof Name) {\r\n        if (ctx === Store)\r\n            forbiddenCheck(c, n, /*e.attr*/ void 0, n.range);\r\n        e.ctx = ctx;\r\n    }\r\n    else if (e instanceof Subscript) {\r\n        e.ctx = ctx;\r\n    }\r\n    else if (e instanceof List) {\r\n        e.ctx = ctx;\r\n        s = e.elts;\r\n    }\r\n    else if (e instanceof Tuple) {\r\n        if (e.elts.length === 0) {\r\n            throw syntaxError(\"can't assign to ()\", n.range);\r\n        }\r\n        e.ctx = ctx;\r\n        s = e.elts;\r\n    }\r\n    else if (e instanceof Lambda) {\r\n        exprName = \"lambda\";\r\n    }\r\n    else if (e instanceof Call) {\r\n        exprName = \"function call\";\r\n    }\r\n    else if (e instanceof BoolOp) {\r\n        exprName = \"operator\";\r\n    }\r\n    else {\r\n        switch (e.constructor) {\r\n            case BoolOp:\r\n            case BinOp:\r\n            case UnaryOp:\r\n                exprName = \"operator\";\r\n                break;\r\n            case GeneratorExp:\r\n                exprName = \"generator expression\";\r\n                break;\r\n            case Yield:\r\n                exprName = \"yield expression\";\r\n                break;\r\n            case ListComp:\r\n                exprName = \"list comprehension\";\r\n                break;\r\n            case Dict:\r\n            case Num:\r\n            case Str:\r\n                exprName = \"literal\";\r\n                break;\r\n            case Compare:\r\n                exprName = \"comparison expression\";\r\n                break;\r\n            case IfExp:\r\n                exprName = \"conditional expression\";\r\n                break;\r\n            default: {\r\n                throw new Error(\"unhandled expression in assignment\");\r\n            }\r\n        }\r\n    }\r\n    if (exprName) {\r\n        throw syntaxError(\"can't \" + (ctx === Store ? \"assign to\" : \"delete\") + \" \" + exprName, n.range);\r\n    }\r\n    if (s) {\r\n        for (var _i = 0, s_1 = s; _i < s_1.length; _i++) {\r\n            var e_1 = s_1[_i];\r\n            setContext(c, e_1, ctx, n);\r\n        }\r\n    }\r\n}\r\nvar operatorMap = {};\r\n(function () {\r\n    operatorMap[TOK.T_VBAR] = BitOr;\r\n    assert(operatorMap[TOK.T_VBAR] !== undefined, \"\" + TOK.T_VBAR);\r\n    // assert(operatorMap[TOK.T_VBAR] === BitOr, `${TOK.T_VBAR}`);\r\n    operatorMap[TOK.T_VBAR] = BitOr;\r\n    operatorMap[TOK.T_CIRCUMFLEX] = BitXor;\r\n    operatorMap[TOK.T_AMPER] = BitAnd;\r\n    operatorMap[TOK.T_LEFTSHIFT] = LShift;\r\n    operatorMap[TOK.T_RIGHTSHIFT] = RShift;\r\n    operatorMap[TOK.T_PLUS] = Add;\r\n    operatorMap[TOK.T_MINUS] = Sub;\r\n    operatorMap[TOK.T_STAR] = Mult;\r\n    operatorMap[TOK.T_SLASH] = Div;\r\n    operatorMap[TOK.T_DOUBLESLASH] = FloorDiv;\r\n    operatorMap[TOK.T_PERCENT] = Mod;\r\n}());\r\nfunction getOperator(n) {\r\n    assert(operatorMap[n.type] !== undefined, \"\" + n.type);\r\n    return { op: operatorMap[n.type], range: n.range };\r\n}\r\nfunction astForCompOp(c, n) {\r\n    // comp_op: '<'|'>'|'=='|'>='|'<='|'<>'|'!='|'in'|'not' 'in'|'is' |'is' 'not'\r\n    REQ(n, SYM.comp_op);\r\n    if (NCH(n) === 1) {\r\n        n = CHILD(n, 0);\r\n        switch (n.type) {\r\n            case TOK.T_LESS: return Lt;\r\n            case TOK.T_GREATER: return Gt;\r\n            case TOK.T_EQEQUAL: return Eq;\r\n            case TOK.T_LESSEQUAL: return LtE;\r\n            case TOK.T_GREATEREQUAL: return GtE;\r\n            case TOK.T_NOTEQUAL: return NotEq;\r\n            case TOK.T_NAME:\r\n                if (n.value === \"in\")\r\n                    return In;\r\n                if (n.value === \"is\")\r\n                    return Is;\r\n        }\r\n    }\r\n    else if (NCH(n) === 2) {\r\n        if (CHILD(n, 0).type === TOK.T_NAME) {\r\n            if (CHILD(n, 1).value === \"in\")\r\n                return NotIn;\r\n            if (CHILD(n, 0).value === \"is\")\r\n                return IsNot;\r\n        }\r\n    }\r\n    throw new Error(\"invalid comp_op\");\r\n}\r\nfunction seqForTestlist(c, n) {\r\n    /* testlist: test (',' test)* [','] */\r\n    assert(n.type === SYM.testlist ||\r\n        n.type === SYM.listmaker ||\r\n        n.type === SYM.testlist_gexp ||\r\n        n.type === SYM.testlist_safe ||\r\n        n.type === SYM.testlist1);\r\n    var seq = [];\r\n    for (var i = 0; i < NCH(n); i += 2) {\r\n        assert(CHILD(n, i).type === SYM.IfExpr || CHILD(n, i).type === SYM.old_test);\r\n        seq[i / 2] = astForExpr(c, CHILD(n, i));\r\n    }\r\n    return seq;\r\n}\r\nfunction astForSuite(c, n) {\r\n    /* suite: simple_stmt | NEWLINE INDENT stmt+ DEDENT */\r\n    REQ(n, SYM.suite);\r\n    var seq = [];\r\n    var pos = 0;\r\n    var ch;\r\n    if (CHILD(n, 0).type === SYM.simple_stmt) {\r\n        n = CHILD(n, 0);\r\n        /* simple_stmt always ends with an NEWLINE and may have a trailing\r\n            * SEMI. */\r\n        var end = NCH(n) - 1;\r\n        if (CHILD(n, end - 1).type === TOK.T_SEMI) {\r\n            end -= 1;\r\n        }\r\n        // by 2 to skip\r\n        for (var i = 0; i < end; i += 2) {\r\n            seq[pos++] = astForStmt(c, CHILD(n, i));\r\n        }\r\n    }\r\n    else {\r\n        for (var i = 2; i < NCH(n) - 1; ++i) {\r\n            ch = CHILD(n, i);\r\n            REQ(ch, SYM.stmt);\r\n            var num = numStmts(ch);\r\n            if (num === 1) {\r\n                // small_stmt or compound_stmt w/ only 1 child\r\n                seq[pos++] = astForStmt(c, ch);\r\n            }\r\n            else {\r\n                ch = CHILD(ch, 0);\r\n                REQ(ch, SYM.simple_stmt);\r\n                for (var j = 0; j < NCH(ch); j += 2) {\r\n                    if (NCH(CHILD(ch, j)) === 0) {\r\n                        assert(j + 1 === NCH(ch));\r\n                        break;\r\n                    }\r\n                    seq[pos++] = astForStmt(c, CHILD(ch, j));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    assert(pos === numStmts(n));\r\n    return seq;\r\n}\r\nfunction astForExceptClause(c, exc, body) {\r\n    /* except_clause: 'except' [test [(',' | 'as') test]] */\r\n    REQ(exc, SYM.except_clause);\r\n    REQ(body, SYM.suite);\r\n    if (NCH(exc) === 1) {\r\n        return new ExceptHandler(null, null, astForSuite(c, body), exc.range);\r\n    }\r\n    else if (NCH(exc) === 2)\r\n        return new ExceptHandler(astForExpr(c, CHILD(exc, 1)), null, astForSuite(c, body), exc.range);\r\n    else if (NCH(exc) === 4) {\r\n        var e = astForExpr(c, CHILD(exc, 3));\r\n        setContext(c, e, Store, CHILD(exc, 3));\r\n        return new ExceptHandler(astForExpr(c, CHILD(exc, 1)), e, astForSuite(c, body), exc.range);\r\n    }\r\n    else {\r\n        throw new Error(\"wrong number of children for except clause\");\r\n    }\r\n}\r\nfunction astForTryStmt(c, n) {\r\n    var nc = NCH(n);\r\n    var nexcept = (nc - 3) / 3;\r\n    var orelse = [];\r\n    var finally_ = null;\r\n    REQ(n, SYM.try_stmt);\r\n    var body = astForSuite(c, CHILD(n, 2));\r\n    if (CHILD(n, nc - 3).type === TOK.T_NAME) {\r\n        if (CHILD(n, nc - 3).value === \"finally\") {\r\n            if (nc >= 9 && CHILD(n, nc - 6).type === TOK.T_NAME) {\r\n                /* we can assume it's an \"else\",\r\n                    because nc >= 9 for try-else-finally and\r\n                    it would otherwise have a type of except_clause */\r\n                orelse = astForSuite(c, CHILD(n, nc - 4));\r\n                nexcept--;\r\n            }\r\n            finally_ = astForSuite(c, CHILD(n, nc - 1));\r\n            nexcept--;\r\n        }\r\n        else {\r\n            /* we can assume it's an \"else\",\r\n                otherwise it would have a type of except_clause */\r\n            orelse = astForSuite(c, CHILD(n, nc - 1));\r\n            nexcept--;\r\n        }\r\n    }\r\n    else if (CHILD(n, nc - 3).type !== SYM.except_clause) {\r\n        throw syntaxError(\"malformed 'try' statement\", n.range);\r\n    }\r\n    if (nexcept > 0) {\r\n        var handlers = [];\r\n        for (var i = 0; i < nexcept; ++i) {\r\n            handlers[i] = astForExceptClause(c, CHILD(n, 3 + i * 3), CHILD(n, 5 + i * 3));\r\n        }\r\n        var exceptSt = new TryExcept(body, handlers, orelse, n.range);\r\n        if (!finally_)\r\n            return exceptSt;\r\n        /* if a 'finally' is present too, we nest the TryExcept within a\r\n            TryFinally to emulate try ... except ... finally */\r\n        body = [exceptSt];\r\n    }\r\n    assert(finally_ !== null);\r\n    return new TryFinally(body, finally_, n.range);\r\n}\r\nfunction astForDottedName(c, n) {\r\n    REQ(n, SYM.dotted_name);\r\n    var child = CHILD(n, 0);\r\n    var id = new RangeAnnotated(child.value, child.range);\r\n    var e = new Name(id, Load, n.range);\r\n    for (var i = 2; i < NCH(n); i += 2) {\r\n        var child_1 = CHILD(n, i);\r\n        id = new RangeAnnotated(child_1.value, child_1.range);\r\n        e = new Attribute(e, id, Load, n.range);\r\n    }\r\n    return e;\r\n}\r\nfunction astForDecorator(c, n) {\r\n    /* decorator: '@' dotted_name [ '(' [arglist] ')' ] NEWLINE */\r\n    REQ(n, SYM.decorator);\r\n    REQ(CHILD(n, 0), TOK.T_AT);\r\n    REQ(CHILD(n, NCH(n) - 1), TOK.T_NEWLINE);\r\n    var nameExpr = astForDottedName(c, CHILD(n, 1));\r\n    if (NCH(n) === 3)\r\n        return nameExpr;\r\n    else if (NCH(n) === 5)\r\n        return new Call(nameExpr, [], [], null, null);\r\n    else\r\n        return astForCall(c, CHILD(n, 3), nameExpr);\r\n}\r\nfunction astForDecorators(c, n) {\r\n    REQ(n, SYM.decorators);\r\n    var decoratorSeq = [];\r\n    for (var i = 0; i < NCH(n); ++i) {\r\n        decoratorSeq[i] = astForDecorator(c, CHILD(n, i));\r\n    }\r\n    return decoratorSeq;\r\n}\r\nfunction astForDecorated(c, n) {\r\n    REQ(n, SYM.decorated);\r\n    var decoratorSeq = astForDecorators(c, CHILD(n, 0));\r\n    assert(CHILD(n, 1).type === SYM.funcdef || CHILD(n, 1).type === SYM.classdef);\r\n    var thing = null;\r\n    if (CHILD(n, 1).type === SYM.funcdef) {\r\n        thing = astForFuncdef(c, CHILD(n, 1), decoratorSeq);\r\n    }\r\n    else if (CHILD(n, 1).type === SYM.classdef) {\r\n        thing = astForClassdef(c, CHILD(n, 1), decoratorSeq);\r\n    }\r\n    else {\r\n        throw new Error(\"astForDecorated\");\r\n    }\r\n    if (thing) {\r\n        // FIXME: Pass into functions above?\r\n        // thing.range = n.range;\r\n    }\r\n    return thing;\r\n}\r\nfunction astForWithVar(c, n) {\r\n    REQ(n, SYM.with_var);\r\n    return astForExpr(c, CHILD(n, 1));\r\n}\r\nfunction astForWithStmt(c, n) {\r\n    /* with_stmt: 'with' test [ with_var ] ':' suite */\r\n    var suiteIndex = 3; // skip with, test, :\r\n    assert(n.type === SYM.with_stmt);\r\n    var contextExpr = astForExpr(c, CHILD(n, 1));\r\n    var optionalVars;\r\n    if (CHILD(n, 2).type === SYM.with_var) {\r\n        optionalVars = astForWithVar(c, CHILD(n, 2));\r\n        setContext(c, optionalVars, Store, n);\r\n        suiteIndex = 4;\r\n    }\r\n    return new WithStatement(contextExpr, optionalVars, astForSuite(c, CHILD(n, suiteIndex)), n.range);\r\n}\r\nfunction astForExecStmt(c, n) {\r\n    var globals = null;\r\n    var locals = null;\r\n    var nchildren = NCH(n);\r\n    assert(nchildren === 2 || nchildren === 4 || nchildren === 6);\r\n    /* exec_stmt: 'exec' expr ['in' test [',' test]] */\r\n    REQ(n, SYM.exec_stmt);\r\n    var expr1 = astForExpr(c, CHILD(n, 1));\r\n    if (nchildren >= 4) {\r\n        globals = astForExpr(c, CHILD(n, 3));\r\n    }\r\n    if (nchildren === 6) {\r\n        locals = astForExpr(c, CHILD(n, 5));\r\n    }\r\n    return new Exec(expr1, globals, locals, n.range);\r\n}\r\nfunction astForIfStmt(c, n) {\r\n    /* if_stmt: 'if' test ':' suite ('elif' test ':' suite)*\r\n        ['else' ':' suite]\r\n    */\r\n    REQ(n, SYM.if_stmt);\r\n    if (NCH(n) === 4)\r\n        return new IfStatement(astForExpr(c, CHILD(n, 1)), astForSuite(c, CHILD(n, 3)), [], n.range);\r\n    var s = CHILD(n, 4).value;\r\n    var decider = s.charAt(2); // elSe or elIf\r\n    if (decider === 's') {\r\n        return new IfStatement(astForExpr(c, CHILD(n, 1)), astForSuite(c, CHILD(n, 3)), astForSuite(c, CHILD(n, 6)), n.range);\r\n    }\r\n    else if (decider === 'i') {\r\n        var nElif = NCH(n) - 4;\r\n        var hasElse = false;\r\n        var orelse = [];\r\n        /* must reference the child nElif+1 since 'else' token is third, not\r\n            * fourth child from the end. */\r\n        if (CHILD(n, nElif + 1).type === TOK.T_NAME && CHILD(n, nElif + 1).value.charAt(2) === 's') {\r\n            hasElse = true;\r\n            nElif -= 3;\r\n        }\r\n        nElif /= 4;\r\n        if (hasElse) {\r\n            orelse = [\r\n                new IfStatement(astForExpr(c, CHILD(n, NCH(n) - 6)), astForSuite(c, CHILD(n, NCH(n) - 4)), astForSuite(c, CHILD(n, NCH(n) - 1)), CHILD(n, NCH(n) - 6).range)\r\n            ];\r\n            nElif--;\r\n        }\r\n        for (var i = 0; i < nElif; ++i) {\r\n            var off = 5 + (nElif - i - 1) * 4;\r\n            orelse = [\r\n                new IfStatement(astForExpr(c, CHILD(n, off)), astForSuite(c, CHILD(n, off + 2)), orelse, CHILD(n, off).range)\r\n            ];\r\n        }\r\n        return new IfStatement(astForExpr(c, CHILD(n, 1)), astForSuite(c, CHILD(n, 3)), orelse, n.range);\r\n    }\r\n    throw new Error(\"unexpected token in 'if' statement\");\r\n}\r\nfunction astForExprlist(c, n, context) {\r\n    REQ(n, SYM.ExprList);\r\n    var seq = [];\r\n    for (var i = 0; i < NCH(n); i += 2) {\r\n        var e = astForExpr(c, CHILD(n, i));\r\n        seq[i / 2] = e;\r\n        if (context)\r\n            setContext(c, e, context, CHILD(n, i));\r\n    }\r\n    return seq;\r\n}\r\nfunction astForDelStmt(c, n) {\r\n    REQ(n, SYM.del_stmt);\r\n    return new DeleteStatement(astForExprlist(c, CHILD(n, 1), Del), n.range);\r\n}\r\nfunction astForGlobalStmt(c, n) {\r\n    REQ(n, SYM.GlobalStmt);\r\n    var s = [];\r\n    for (var i = 1; i < NCH(n); i += 2) {\r\n        s[(i - 1) / 2] = strobj(CHILD(n, i).value);\r\n    }\r\n    return new Global(s, n.range);\r\n}\r\nfunction astForNonLocalStmt(c, n) {\r\n    REQ(n, SYM.NonLocalStmt);\r\n    var s = [];\r\n    for (var i = 1; i < NCH(n); i += 2) {\r\n        s[(i - 1) / 2] = strobj(CHILD(n, i).value);\r\n    }\r\n    return new NonLocal(s, n.range);\r\n}\r\nfunction astForAssertStmt(c, n) {\r\n    /* assert_stmt: 'assert' test [',' test] */\r\n    REQ(n, SYM.assert_stmt);\r\n    if (NCH(n) === 2) {\r\n        return new Assert(astForExpr(c, CHILD(n, 1)), null, n.range);\r\n    }\r\n    else if (NCH(n) === 4) {\r\n        return new Assert(astForExpr(c, CHILD(n, 1)), astForExpr(c, CHILD(n, 3)), n.range);\r\n    }\r\n    throw new Error(\"improper number of parts to assert stmt\");\r\n}\r\nfunction aliasForImportName(c, n) {\r\n    /*\r\n        ImportSpecifier: NAME ['as' NAME]\r\n        dotted_as_name: dotted_name ['as' NAME]\r\n        dotted_name: NAME ('.' NAME)*\r\n    */\r\n    loop: while (true) {\r\n        switch (n.type) {\r\n            case SYM.ImportSpecifier: {\r\n                var str = null;\r\n                var nameNode = CHILD(n, 0);\r\n                var name_1 = strobj(nameNode.value);\r\n                var nameRange = nameNode.range;\r\n                if (NCH(n) === 3) {\r\n                    str = CHILD(n, 2).value;\r\n                }\r\n                return new Alias(new RangeAnnotated(name_1, nameRange), str == null ? null : strobj(str));\r\n            }\r\n            case SYM.dotted_as_name:\r\n                if (NCH(n) === 1) {\r\n                    n = CHILD(n, 0);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    var a = aliasForImportName(c, CHILD(n, 0));\r\n                    assert(!a.asname);\r\n                    a.asname = strobj(CHILD(n, 2).value);\r\n                    return a;\r\n                }\r\n            case SYM.dotted_name:\r\n                if (NCH(n) === 1) {\r\n                    var nameNode = CHILD(n, 0);\r\n                    var name_2 = strobj(nameNode.value);\r\n                    var nameRange = nameNode.range;\r\n                    return new Alias(new RangeAnnotated(name_2, nameRange), null);\r\n                }\r\n                else {\r\n                    // create a string of the form a.b.c\r\n                    var str = '';\r\n                    for (var i = 0; i < NCH(n); i += 2) {\r\n                        str += CHILD(n, i).value + \".\";\r\n                    }\r\n                    return new Alias(new RangeAnnotated(str.substr(0, str.length - 1), null), null);\r\n                }\r\n            case TOK.T_STAR: {\r\n                return new Alias(new RangeAnnotated(\"*\", n.range), null);\r\n            }\r\n            case TOK.T_NAME: {\r\n                // Temporary.\r\n                return new Alias(new RangeAnnotated(n.value, n.range), null);\r\n            }\r\n            default: {\r\n                throw syntaxError(\"unexpected import name \" + grammarName(n.type), n.range);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction parseModuleSpecifier(c, moduleSpecifierNode) {\r\n    REQ(moduleSpecifierNode, SYM.ModuleSpecifier);\r\n    var N = NCH(moduleSpecifierNode);\r\n    var ret = \"\";\r\n    var range;\r\n    for (var i = 0; i < N; ++i) {\r\n        var child = CHILD(moduleSpecifierNode, i);\r\n        ret = ret + parsestr(c, child.value);\r\n        range = child.range;\r\n    }\r\n    return { value: ret, range: range };\r\n}\r\nfunction astForImportStmt(c, importStatementNode) {\r\n    REQ(importStatementNode, SYM.import_stmt);\r\n    var nameOrFrom = CHILD(importStatementNode, 0);\r\n    if (nameOrFrom.type === SYM.import_name) {\r\n        var n = CHILD(nameOrFrom, 1);\r\n        REQ(n, SYM.dotted_as_names);\r\n        var aliases = [];\r\n        for (var i = 0; i < NCH(n); i += 2) {\r\n            aliases[i / 2] = aliasForImportName(c, CHILD(n, i));\r\n        }\r\n        return new ImportStatement(aliases, importStatementNode.range);\r\n    }\r\n    else if (nameOrFrom.type === SYM.import_from) {\r\n        // let mod: Alias = null;\r\n        var moduleSpec = void 0;\r\n        var ndots = 0;\r\n        var nchildren = void 0;\r\n        var idx = void 0;\r\n        for (idx = 1; idx < NCH(nameOrFrom); ++idx) {\r\n            var child = CHILD(nameOrFrom, idx);\r\n            var childType = child.type;\r\n            if (childType === SYM.dotted_name) {\r\n                // This should be dead code since we support ECMAScript 2015 modules.\r\n                throw syntaxError(\"unknown import statement \" + grammarName(childType) + \".\", child.range);\r\n                // mod = aliasForImportName(c, child);\r\n                // idx++;\r\n                // break;\r\n            }\r\n            else if (childType === SYM.ModuleSpecifier) {\r\n                moduleSpec = parseModuleSpecifier(c, child);\r\n                break;\r\n            }\r\n            else if (childType !== TOK.T_DOT) {\r\n                // Let's be more specific...\r\n                throw syntaxError(\"unknown import statement \" + grammarName(childType) + \".\", child.range);\r\n                // break;\r\n            }\r\n            ndots++;\r\n        }\r\n        ++idx; // skip the import keyword\r\n        var n = nameOrFrom;\r\n        switch (CHILD(nameOrFrom, idx).type) {\r\n            case TOK.T_STAR: {\r\n                // from ... import\r\n                n = CHILD(nameOrFrom, idx);\r\n                nchildren = 1;\r\n                break;\r\n            }\r\n            case TOK.T_LPAR: {\r\n                // from ... import (x, y, z)\r\n                n = CHILD(n, idx + 1);\r\n                nchildren = NCH(n);\r\n                break;\r\n            }\r\n            case SYM.ImportList: {\r\n                // from ... import x, y, z\r\n                n = CHILD(n, idx);\r\n                nchildren = NCH(n);\r\n                if (nchildren % 2 === 0) {\r\n                    throw syntaxError(\"trailing comma not allowed without surrounding parentheses\", n.range);\r\n                }\r\n            }\r\n        }\r\n        var aliases = [];\r\n        if (n.type === TOK.T_STAR) {\r\n            aliases[0] = aliasForImportName(c, n);\r\n        }\r\n        else {\r\n            REQ(n, SYM.import_from);\r\n            var importListNode = CHILD(n, FIND(n, SYM.ImportList));\r\n            astForImportList(c, importListNode, aliases);\r\n        }\r\n        // moduleName = mod ? mod.name : moduleName;\r\n        assert(typeof moduleSpec.value === 'string');\r\n        return new ImportFrom(new RangeAnnotated(moduleSpec.value, moduleSpec.range), aliases, ndots, importStatementNode.range);\r\n    }\r\n    else {\r\n        throw syntaxError(\"unknown import statement \" + grammarName(nameOrFrom.type) + \".\", nameOrFrom.range);\r\n    }\r\n}\r\nfunction astForImportList(c, importListNode, aliases) {\r\n    REQ(importListNode, SYM.ImportList);\r\n    var N = NCH(importListNode);\r\n    for (var i = 0; i < N; i++) {\r\n        var child = CHILD(importListNode, i);\r\n        if (child.type === SYM.ImportSpecifier) {\r\n            aliases.push(aliasForImportName(c, child));\r\n        }\r\n    }\r\n}\r\nfunction astForTestlistGexp(c, n) {\r\n    assert(n.type === SYM.testlist_gexp || n.type === SYM.argument);\r\n    if (NCH(n) > 1 && CHILD(n, 1).type === SYM.gen_for)\r\n        return astForGenexp(c, n);\r\n    return astForTestlist(c, n);\r\n}\r\nfunction astForListcomp(c, n) {\r\n    function countListFors(c, n) {\r\n        var nfors = 0;\r\n        var ch = CHILD(n, 1);\r\n        count_list_for: while (true) {\r\n            nfors++;\r\n            REQ(ch, SYM.list_for);\r\n            if (NCH(ch) === 5)\r\n                ch = CHILD(ch, 4);\r\n            else\r\n                return nfors;\r\n            count_list_iter: while (true) {\r\n                REQ(ch, SYM.list_iter);\r\n                ch = CHILD(ch, 0);\r\n                if (ch.type === SYM.list_for)\r\n                    continue count_list_for;\r\n                else if (ch.type === SYM.list_if) {\r\n                    if (NCH(ch) === 3) {\r\n                        ch = CHILD(ch, 2);\r\n                        continue count_list_iter;\r\n                    }\r\n                    else\r\n                        return nfors;\r\n                }\r\n                break;\r\n            }\r\n            // FIXME: What does a break at the end of a function do?\r\n            break;\r\n        }\r\n        throw new Error(\"TODO: Should this be returning void 0?\");\r\n    }\r\n    function countListIfs(c, n) {\r\n        var nifs = 0;\r\n        while (true) {\r\n            REQ(n, SYM.list_iter);\r\n            if (CHILD(n, 0).type === SYM.list_for)\r\n                return nifs;\r\n            n = CHILD(n, 0);\r\n            REQ(n, SYM.list_if);\r\n            nifs++;\r\n            if (NCH(n) === 2)\r\n                return nifs;\r\n            n = CHILD(n, 2);\r\n        }\r\n    }\r\n    REQ(n, SYM.listmaker);\r\n    assert(NCH(n) > 1);\r\n    var elt = astForExpr(c, CHILD(n, 0));\r\n    var nfors = countListFors(c, n);\r\n    var listcomps = [];\r\n    var ch = CHILD(n, 1);\r\n    for (var i = 0; i < nfors; ++i) {\r\n        REQ(ch, SYM.list_for);\r\n        var forch = CHILD(ch, 1);\r\n        var t = astForExprlist(c, forch, Store);\r\n        var expression = astForTestlist(c, CHILD(ch, 3));\r\n        var lc = void 0;\r\n        if (NCH(forch) === 1)\r\n            lc = new Comprehension(t[0], expression, []);\r\n        else\r\n            lc = new Comprehension(new Tuple(t, Store, ch.range), expression, []);\r\n        if (NCH(ch) === 5) {\r\n            ch = CHILD(ch, 4);\r\n            var nifs = countListIfs(c, ch);\r\n            var ifs = [];\r\n            for (var j = 0; j < nifs; ++j) {\r\n                REQ(ch, SYM.list_iter);\r\n                ch = CHILD(ch, 0);\r\n                REQ(ch, SYM.list_if);\r\n                ifs[j] = astForExpr(c, CHILD(ch, 1));\r\n                if (NCH(ch) === 3)\r\n                    ch = CHILD(ch, 2);\r\n            }\r\n            if (ch.type === SYM.list_iter)\r\n                ch = CHILD(ch, 0);\r\n            lc.ifs = ifs;\r\n        }\r\n        listcomps[i] = lc;\r\n    }\r\n    return new ListComp(elt, listcomps, n.range);\r\n}\r\nfunction astForUnaryExpr(c, n) {\r\n    if (CHILD(n, 0).type === TOK.T_MINUS && NCH(n) === 2) {\r\n        var pfactor = CHILD(n, 1);\r\n        if (pfactor.type === SYM.UnaryExpr && NCH(pfactor) === 1) {\r\n            var ppower = CHILD(pfactor, 0);\r\n            if (ppower.type === SYM.PowerExpr && NCH(ppower) === 1) {\r\n                var patom = CHILD(ppower, 0);\r\n                if (patom.type === SYM.AtomExpr) {\r\n                    var pnum = CHILD(patom, 0);\r\n                    if (pnum.type === TOK.T_NUMBER) {\r\n                        pnum.value = \"-\" + pnum.value;\r\n                        return astForAtomExpr(c, patom);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    var expression = astForExpr(c, CHILD(n, 1));\r\n    switch (CHILD(n, 0).type) {\r\n        case TOK.T_PLUS: return new UnaryOp(UAdd, expression, n.range);\r\n        case TOK.T_MINUS: return new UnaryOp(USub, expression, n.range);\r\n        case TOK.T_TILDE: return new UnaryOp(Invert, expression, n.range);\r\n    }\r\n    throw new Error(\"unhandled UnaryExpr\");\r\n}\r\nfunction astForForStmt(c, n) {\r\n    var seq = [];\r\n    REQ(n, SYM.for_stmt);\r\n    if (NCH(n) === 9) {\r\n        seq = astForSuite(c, CHILD(n, 8));\r\n    }\r\n    var nodeTarget = CHILD(n, 1);\r\n    var _target = astForExprlist(c, nodeTarget, Store);\r\n    var target;\r\n    if (NCH(nodeTarget) === 1)\r\n        target = _target[0];\r\n    else\r\n        target = new Tuple(_target, Store, n.range);\r\n    return new ForStatement(target, astForTestlist(c, CHILD(n, 3)), astForSuite(c, CHILD(n, 5)), seq, n.range);\r\n}\r\nfunction astForCall(c, n, func) {\r\n    /*\r\n        arglist: (argument ',')* (argument [',']| '*' test [',' '**' test]\r\n                | '**' test)\r\n        argument: [test '='] test [gen_for]        # Really [keyword '='] test\r\n    */\r\n    REQ(n, SYM.arglist);\r\n    var nargs = 0;\r\n    var nkeywords = 0;\r\n    var ngens = 0;\r\n    for (var i = 0; i < NCH(n); ++i) {\r\n        var ch = CHILD(n, i);\r\n        if (ch.type === SYM.argument) {\r\n            if (NCH(ch) === 1)\r\n                nargs++;\r\n            else if (CHILD(ch, 1).type === SYM.gen_for)\r\n                ngens++;\r\n            else\r\n                nkeywords++;\r\n        }\r\n    }\r\n    if (ngens > 1 || (ngens && (nargs || nkeywords)))\r\n        throw syntaxError(\"Generator expression must be parenthesized if not sole argument\", n.range);\r\n    if (nargs + nkeywords + ngens > 255)\r\n        throw syntaxError(\"more than 255 arguments\", n.range);\r\n    var args = [];\r\n    var keywords = [];\r\n    nargs = 0;\r\n    nkeywords = 0;\r\n    var vararg = null;\r\n    var kwarg = null;\r\n    for (var i = 0; i < NCH(n); ++i) {\r\n        var ch = CHILD(n, i);\r\n        if (ch.type === SYM.argument) {\r\n            if (NCH(ch) === 1) {\r\n                if (nkeywords)\r\n                    throw syntaxError(\"non-keyword arg after keyword arg\", n.range);\r\n                if (vararg)\r\n                    throw syntaxError(\"only named arguments may follow *expression\", n.range);\r\n                args[nargs++] = astForExpr(c, CHILD(ch, 0));\r\n            }\r\n            else if (CHILD(ch, 1).type === SYM.gen_for)\r\n                args[nargs++] = astForGenexp(c, ch);\r\n            else {\r\n                var e = astForExpr(c, CHILD(ch, 0));\r\n                if (e.constructor === Lambda)\r\n                    throw syntaxError(\"lambda cannot contain assignment\", n.range);\r\n                else if (e.constructor !== Name)\r\n                    throw syntaxError(\"keyword can't be an expression\", n.range);\r\n                var key = e.id;\r\n                forbiddenCheck(c, CHILD(ch, 0), key.value, n.range);\r\n                for (var k = 0; k < nkeywords; ++k) {\r\n                    var tmp = keywords[k].arg;\r\n                    if (tmp === key.value)\r\n                        throw syntaxError(\"keyword argument repeated\", n.range);\r\n                }\r\n                keywords[nkeywords++] = new Keyword(key.value, astForExpr(c, CHILD(ch, 2)));\r\n            }\r\n        }\r\n        else if (ch.type === TOK.T_STAR)\r\n            vararg = astForExpr(c, CHILD(n, ++i));\r\n        else if (ch.type === TOK.T_DOUBLESTAR)\r\n            kwarg = astForExpr(c, CHILD(n, ++i));\r\n    }\r\n    return new Call(func, args, keywords, vararg, kwarg);\r\n}\r\nfunction astForTrailer(c, node, leftExpr) {\r\n    /* trailer: '(' [arglist] ')' | '[' subscriptlist ']' | '.' NAME\r\n        subscriptlist: subscript (',' subscript)* [',']\r\n        subscript: '.' '.' '.' | test | [test] ':' [test] [sliceop]\r\n        */\r\n    var n = node;\r\n    var childZero = CHILD(n, 0);\r\n    var childOne = CHILD(n, 1);\r\n    var childTwo = CHILD(n, 2);\r\n    REQ(n, SYM.trailer);\r\n    if (childZero.type === TOK.T_LPAR) {\r\n        if (NCH(n) === 2) {\r\n            return new Call(leftExpr, [], [], null, null);\r\n        }\r\n        else {\r\n            return astForCall(c, childOne, leftExpr);\r\n        }\r\n    }\r\n    else if (childZero.type === TOK.T_DOT) {\r\n        return new Attribute(leftExpr, new RangeAnnotated(childOne.value, childOne.range), Load, n.range);\r\n    }\r\n    else {\r\n        REQ(childZero, TOK.T_LSQB);\r\n        REQ(childTwo, TOK.T_RSQB);\r\n        var n_1 = childOne;\r\n        if (NCH(n_1) === 1)\r\n            return new Subscript(leftExpr, astForSlice(c, CHILD(n_1, 0)), Load, n_1.range);\r\n        else {\r\n            /* The grammar is ambiguous here. The ambiguity is resolved\r\n                by treating the sequence as a tuple literal if there are\r\n                no slice features.\r\n            */\r\n            var simple = true;\r\n            var slices = [];\r\n            for (var j = 0; j < NCH(n_1); j += 2) {\r\n                var slc = astForSlice(c, CHILD(n_1, j));\r\n                if (slc.constructor !== Index) {\r\n                    simple = false;\r\n                }\r\n                slices[j / 2] = slc;\r\n            }\r\n            if (!simple) {\r\n                return new Subscript(leftExpr, new ExtSlice(slices), Load, n_1.range);\r\n            }\r\n            var elts = [];\r\n            for (var j = 0; j < slices.length; ++j) {\r\n                var slc = slices[j];\r\n                if (slc instanceof Index) {\r\n                    assert(slc.value !== null && slc.value !== undefined);\r\n                    elts[j] = slc.value;\r\n                }\r\n                else {\r\n                    assert(slc instanceof Index);\r\n                }\r\n            }\r\n            var e = new Tuple(elts, Load, n_1.range);\r\n            return new Subscript(leftExpr, new Index(e), Load, n_1.range);\r\n        }\r\n    }\r\n}\r\nfunction astForFlowStmt(c, n) {\r\n    REQ(n, SYM.flow_stmt);\r\n    var ch = CHILD(n, 0);\r\n    switch (ch.type) {\r\n        case SYM.break_stmt: return new BreakStatement(n.range);\r\n        case SYM.continue_stmt: return new ContinueStatement(n.range);\r\n        case SYM.yield_stmt:\r\n            return new ExpressionStatement(astForExpr(c, CHILD(ch, 0)), n.range);\r\n        case SYM.return_stmt:\r\n            if (NCH(ch) === 1)\r\n                return new ReturnStatement(null, n.range);\r\n            else\r\n                return new ReturnStatement(astForTestlist(c, CHILD(ch, 1)), n.range);\r\n        case SYM.raise_stmt: {\r\n            if (NCH(ch) === 1)\r\n                return new Raise(null, null, null, n.range);\r\n            else if (NCH(ch) === 2)\r\n                return new Raise(astForExpr(c, CHILD(ch, 1)), null, null, n.range);\r\n            else if (NCH(ch) === 4)\r\n                return new Raise(astForExpr(c, CHILD(ch, 1)), astForExpr(c, CHILD(ch, 3)), null, n.range);\r\n            else if (NCH(ch) === 6)\r\n                return new Raise(astForExpr(c, CHILD(ch, 1)), astForExpr(c, CHILD(ch, 3)), astForExpr(c, CHILD(ch, 5)), n.range);\r\n            else {\r\n                throw new Error(\"unhandled flow statement\");\r\n            }\r\n        }\r\n        default: {\r\n            throw new Error(\"unexpected flow_stmt\");\r\n        }\r\n    }\r\n}\r\nfunction astForArguments(c, n) {\r\n    /* parameters: '(' [varargslist] ')'\r\n        varargslist: (fpdef ['=' test] ',')* ('*' NAME [',' '**' NAME]\r\n            | '**' NAME) | fpdef ['=' test] (',' fpdef ['=' test])* [',']\r\n    */\r\n    var ch;\r\n    var vararg = null;\r\n    var kwarg = null;\r\n    if (n.type === SYM.parameters) {\r\n        if (NCH(n) === 2)\r\n            return new Arguments([], null, null, []);\r\n        n = CHILD(n, 1);\r\n    }\r\n    REQ(n, SYM.varargslist);\r\n    var args = [];\r\n    var defaults = [];\r\n    /* fpdef: NAME | '(' fplist ')'\r\n        fplist: fpdef (',' fpdef)* [',']\r\n    */\r\n    var foundDefault = false;\r\n    var i = 0;\r\n    var j = 0; // index for defaults\r\n    var k = 0; // index for args\r\n    while (i < NCH(n)) {\r\n        ch = CHILD(n, i);\r\n        switch (ch.type) {\r\n            case SYM.fpdef:\r\n                var complexArgs = 0;\r\n                var parenthesized = false;\r\n                handle_fpdef: while (true) {\r\n                    if (i + 1 < NCH(n) && CHILD(n, i + 1).type === TOK.T_EQUAL) {\r\n                        defaults[j++] = astForExpr(c, CHILD(n, i + 2));\r\n                        i += 2;\r\n                        foundDefault = true;\r\n                    }\r\n                    else if (foundDefault) {\r\n                        /* def f((x)=4): pass should raise an error.\r\n                            def f((x, (y))): pass will just incur the tuple unpacking warning. */\r\n                        if (parenthesized && !complexArgs)\r\n                            throw syntaxError(\"parenthesized arg with default\", n.range);\r\n                        throw syntaxError(\"non-default argument follows default argument\", n.range);\r\n                    }\r\n                    if (NCH(ch) === 3) {\r\n                        ch = CHILD(ch, 1);\r\n                        // def foo((x)): is not complex, special case.\r\n                        if (NCH(ch) !== 1) {\r\n                            throw syntaxError(\"tuple parameter unpacking has been removed\", n.range);\r\n                        }\r\n                        else {\r\n                            /* def foo((x)): setup for checking NAME below. */\r\n                            /* Loop because there can be many parens and tuple\r\n                                unpacking mixed in. */\r\n                            parenthesized = true;\r\n                            ch = CHILD(ch, 0);\r\n                            assert(ch.type === SYM.fpdef);\r\n                            continue handle_fpdef;\r\n                        }\r\n                    }\r\n                    var childZero = CHILD(ch, 0);\r\n                    if (childZero.type === TOK.T_NAME) {\r\n                        forbiddenCheck(c, n, childZero.value, n.range);\r\n                        var id = new RangeAnnotated(childZero.value, childZero.range);\r\n                        args[k++] = new Name(id, Param, ch.range);\r\n                    }\r\n                    i += 2;\r\n                    if (parenthesized)\r\n                        throw syntaxError(\"parenthesized argument names are invalid\", n.range);\r\n                    break;\r\n                }\r\n                break;\r\n            case TOK.T_STAR:\r\n                forbiddenCheck(c, CHILD(n, i + 1), CHILD(n, i + 1).value, n.range);\r\n                vararg = strobj(CHILD(n, i + 1).value);\r\n                i += 3;\r\n                break;\r\n            case TOK.T_DOUBLESTAR:\r\n                forbiddenCheck(c, CHILD(n, i + 1), CHILD(n, i + 1).value, n.range);\r\n                kwarg = strobj(CHILD(n, i + 1).value);\r\n                i += 3;\r\n                break;\r\n            default: {\r\n                throw new Error(\"unexpected node in varargslist\");\r\n            }\r\n        }\r\n    }\r\n    return new Arguments(args, vararg, kwarg, defaults);\r\n}\r\nfunction astForFuncdef(c, n, decoratorSeq) {\r\n    /**\r\n     * funcdef: ['export'] def' NAME parameters ['->' IfExpr] ':' suite\r\n     */\r\n    REQ(n, SYM.funcdef);\r\n    var numberOfChildren = NCH(n);\r\n    var ch1;\r\n    var name;\r\n    var args;\r\n    // Name and args are 1 node further if 'export' exists\r\n    if (numberOfChildren !== 8 && numberOfChildren !== 6) {\r\n        ch1 = CHILD(n, 1);\r\n        name = strobj(ch1.value);\r\n        forbiddenCheck(c, ch1, name, n.range);\r\n        args = astForArguments(c, CHILD(n, 2));\r\n    }\r\n    else {\r\n        ch1 = CHILD(n, 2);\r\n        name = strobj(ch1.value);\r\n        forbiddenCheck(c, ch1, name, n.range);\r\n        args = astForArguments(c, CHILD(n, 3));\r\n    }\r\n    // suite is either 4, 6 or 7, depending on whether functype exists\r\n    var body;\r\n    var returnType;\r\n    // Neither Export nor FuncType exist\r\n    if (numberOfChildren === 5) {\r\n        body = astForSuite(c, CHILD(n, 4));\r\n        returnType = null;\r\n    }\r\n    else if (numberOfChildren === 6) {\r\n        body = astForSuite(c, CHILD(n, 5));\r\n        returnType = null;\r\n    }\r\n    else if (numberOfChildren === 7) {\r\n        returnType = astForExpr(c, CHILD(n, 4));\r\n        body = astForSuite(c, CHILD(n, 6));\r\n    }\r\n    else if (numberOfChildren === 8) {\r\n        returnType = astForExpr(c, CHILD(n, 5));\r\n        body = astForSuite(c, CHILD(n, 7));\r\n    }\r\n    else {\r\n        fail(\"Was expecting 5, 7 or 8 children, received \" + numberOfChildren + \" children\");\r\n    }\r\n    return new FunctionDef(new RangeAnnotated(name, ch1.range), args, body, returnType, decoratorSeq, n.range);\r\n}\r\nfunction astForClassBases(c, n) {\r\n    var numberOfChildren = NCH(n);\r\n    assert(numberOfChildren > 0);\r\n    REQ(n, SYM.testlist);\r\n    if (numberOfChildren === 1) {\r\n        return [astForExpr(c, CHILD(n, 0))];\r\n    }\r\n    return seqForTestlist(c, n);\r\n}\r\nfunction astForClassdef(c, node, decoratorSeq) {\r\n    /**\r\n     * ['export'] 'class' NAME ['(' [testlist] ')'] ':' suite\r\n     */\r\n    var n = node;\r\n    var numberOfChildren = NCH(n);\r\n    REQ(n, SYM.classdef);\r\n    var nameNode;\r\n    var className;\r\n    var nameRange;\r\n    if (numberOfChildren !== 5 && numberOfChildren !== 8) {\r\n        if (numberOfChildren !== 7 || CHILD(n, 4).type !== TOK.T_RPAR) {\r\n            nameNode = CHILD(n, 1);\r\n            forbiddenCheck(c, n, nameNode.value, n.range);\r\n            className = strobj(nameNode.value);\r\n            nameRange = nameNode.range;\r\n        }\r\n    }\r\n    else {\r\n        nameNode = CHILD(n, 2);\r\n        forbiddenCheck(c, n, nameNode.value, n.range);\r\n        className = strobj(nameNode.value);\r\n        nameRange = nameNode.range;\r\n    }\r\n    // If grammar looks like 'class NAME : suite'\r\n    if (numberOfChildren === 4) {\r\n        return new ClassDef(new RangeAnnotated(className, nameRange), [], astForSuite(c, CHILD(n, 3)), decoratorSeq, n.range);\r\n    }\r\n    // If grammar looks like 'export class NAME : suite'\r\n    if (numberOfChildren === 5) {\r\n        // temp\r\n    }\r\n    // If grammar looks like 'export class NAME '(' ')' : suite'\r\n    if (numberOfChildren === 7 && CHILD(n, 3).type !== TOK.T_RPAR) {\r\n        // temp\r\n    }\r\n    // If grammar looks like 'export class NAME '(' testlist ')' : suite '\r\n    if (numberOfChildren === 8) {\r\n        // temp\r\n    }\r\n    var c3 = CHILD(n, 3);\r\n    // If grammar looks like 'class NAME '(' ')' : suite'\r\n    if (c3.type === TOK.T_RPAR) {\r\n        return new ClassDef(new RangeAnnotated(className, nameRange), [], astForSuite(c, CHILD(n, 5)), decoratorSeq, n.range);\r\n    }\r\n    // Otherwise grammar looks like 'class NAME '(' testlist ')' : suite'\r\n    // ClassBases are 'testlist'\r\n    var bases = astForClassBases(c, c3);\r\n    var s = astForSuite(c, CHILD(n, 6));\r\n    return new ClassDef(new RangeAnnotated(className, nameRange), bases, s, decoratorSeq, n.range);\r\n}\r\nfunction astForLambdef(c, n) {\r\n    var args;\r\n    var expression;\r\n    if (NCH(n) === 3) {\r\n        args = new Arguments([], null, null, []);\r\n        expression = astForExpr(c, CHILD(n, 2));\r\n    }\r\n    else {\r\n        args = astForArguments(c, CHILD(n, 1));\r\n        expression = astForExpr(c, CHILD(n, 3));\r\n    }\r\n    return new Lambda(args, expression, n.range);\r\n}\r\nfunction astForGenexp(c, n) {\r\n    /* testlist_gexp: test ( gen_for | (',' test)* [','] )\r\n        argument: [test '='] test [gen_for]       # Really [keyword '='] test */\r\n    assert(n.type === SYM.testlist_gexp || n.type === SYM.argument);\r\n    assert(NCH(n) > 1);\r\n    function countGenFors(c, n) {\r\n        var nfors = 0;\r\n        var ch = CHILD(n, 1);\r\n        count_gen_for: while (true) {\r\n            nfors++;\r\n            REQ(ch, SYM.gen_for);\r\n            if (NCH(ch) === 5)\r\n                ch = CHILD(ch, 4);\r\n            else\r\n                return nfors;\r\n            count_gen_iter: while (true) {\r\n                REQ(ch, SYM.gen_iter);\r\n                ch = CHILD(ch, 0);\r\n                if (ch.type === SYM.gen_for)\r\n                    continue count_gen_for;\r\n                else if (ch.type === SYM.gen_if) {\r\n                    if (NCH(ch) === 3) {\r\n                        ch = CHILD(ch, 2);\r\n                        continue count_gen_iter;\r\n                    }\r\n                    else\r\n                        return nfors;\r\n                }\r\n                break;\r\n            }\r\n            break;\r\n        }\r\n        throw new Error(\"logic error in countGenFors\");\r\n    }\r\n    function countGenIfs(c, n) {\r\n        var nifs = 0;\r\n        while (true) {\r\n            REQ(n, SYM.gen_iter);\r\n            if (CHILD(n, 0).type === SYM.gen_for)\r\n                return nifs;\r\n            n = CHILD(n, 0);\r\n            REQ(n, SYM.gen_if);\r\n            nifs++;\r\n            if (NCH(n) === 2)\r\n                return nifs;\r\n            n = CHILD(n, 2);\r\n        }\r\n    }\r\n    var elt = astForExpr(c, CHILD(n, 0));\r\n    var nfors = countGenFors(c, n);\r\n    var genexps = [];\r\n    var ch = CHILD(n, 1);\r\n    for (var i = 0; i < nfors; ++i) {\r\n        REQ(ch, SYM.gen_for);\r\n        var forch = CHILD(ch, 1);\r\n        var t = astForExprlist(c, forch, Store);\r\n        var expression = astForExpr(c, CHILD(ch, 3));\r\n        var ge = void 0;\r\n        if (NCH(forch) === 1)\r\n            ge = new Comprehension(t[0], expression, []);\r\n        else\r\n            ge = new Comprehension(new Tuple(t, Store, ch.range), expression, []);\r\n        if (NCH(ch) === 5) {\r\n            ch = CHILD(ch, 4);\r\n            var nifs = countGenIfs(c, ch);\r\n            var ifs = [];\r\n            for (var j = 0; j < nifs; ++j) {\r\n                REQ(ch, SYM.gen_iter);\r\n                ch = CHILD(ch, 0);\r\n                REQ(ch, SYM.gen_if);\r\n                expression = astForExpr(c, CHILD(ch, 1));\r\n                ifs[j] = expression;\r\n                if (NCH(ch) === 3)\r\n                    ch = CHILD(ch, 2);\r\n            }\r\n            if (ch.type === SYM.gen_iter)\r\n                ch = CHILD(ch, 0);\r\n            ge.ifs = ifs;\r\n        }\r\n        genexps[i] = ge;\r\n    }\r\n    return new GeneratorExp(elt, genexps, n.range);\r\n}\r\nfunction astForWhileStmt(c, n) {\r\n    /* while_stmt: 'while' test ':' suite ['else' ':' suite] */\r\n    REQ(n, SYM.while_stmt);\r\n    if (NCH(n) === 4)\r\n        return new WhileStatement(astForExpr(c, CHILD(n, 1)), astForSuite(c, CHILD(n, 3)), [], n.range);\r\n    else if (NCH(n) === 7)\r\n        return new WhileStatement(astForExpr(c, CHILD(n, 1)), astForSuite(c, CHILD(n, 3)), astForSuite(c, CHILD(n, 6)), n.range);\r\n    throw new Error(\"wrong number of tokens for 'while' stmt\");\r\n}\r\nfunction astForAugassign(c, n) {\r\n    REQ(n, SYM.augassign);\r\n    n = CHILD(n, 0);\r\n    switch (n.value.charAt(0)) {\r\n        case '+': return Add;\r\n        case '-': return Sub;\r\n        case '/': {\r\n            if (n.value.charAt(1) === '/') {\r\n                return FloorDiv;\r\n            }\r\n            else {\r\n                return Div;\r\n            }\r\n        }\r\n        case '%': return Mod;\r\n        case '<': return LShift;\r\n        case '>': return RShift;\r\n        case '&': return BitAnd;\r\n        case '^': return BitXor;\r\n        case '|': return BitOr;\r\n        case '*': {\r\n            if (n.value.charAt(1) === '*') {\r\n                return Pow;\r\n            }\r\n            else {\r\n                return Mult;\r\n            }\r\n        }\r\n        default: {\r\n            throw new Error(\"invalid augassign\");\r\n        }\r\n    }\r\n}\r\nfunction astForBinop(c, n) {\r\n    /* Must account for a sequence of expressions.\r\n        How should A op B op C by represented?\r\n        BinOp(BinOp(A, op, B), op, C).\r\n    */\r\n    var result = new BinOp(astForExpr(c, CHILD(n, 0)), getOperator(CHILD(n, 1)), astForExpr(c, CHILD(n, 2)), n.range);\r\n    var nops = (NCH(n) - 1) / 2;\r\n    for (var i = 1; i < nops; ++i) {\r\n        var nextOper = CHILD(n, i * 2 + 1);\r\n        var tmp = astForExpr(c, CHILD(n, i * 2 + 2));\r\n        result = new BinOp(result, getOperator(nextOper), tmp, nextOper.range);\r\n    }\r\n    return result;\r\n}\r\nfunction astForTestlist(c, n) {\r\n    /* testlist_gexp: test (',' test)* [','] */\r\n    /* testlist: test (',' test)* [','] */\r\n    /* testlist_safe: test (',' test)+ [','] */\r\n    /* testlist1: test (',' test)* */\r\n    assert(NCH(n) > 0);\r\n    if (n.type === SYM.testlist_gexp) {\r\n        if (NCH(n) > 1) {\r\n            assert(CHILD(n, 1).type !== SYM.gen_for);\r\n        }\r\n    }\r\n    else {\r\n        assert(n.type === SYM.testlist || n.type === SYM.testlist_safe || n.type === SYM.testlist1);\r\n    }\r\n    if (NCH(n) === 1) {\r\n        return astForExpr(c, CHILD(n, 0));\r\n    }\r\n    else {\r\n        return new Tuple(seqForTestlist(c, n), Load, n.range);\r\n    }\r\n}\r\nfunction astForExprStmt(c, node) {\r\n    // Prevent assignment.\r\n    var n = node;\r\n    REQ(n, SYM.ExprStmt);\r\n    if (NCH(n) === 1) {\r\n        return new ExpressionStatement(astForTestlist(c, CHILD(n, 0)), n.range);\r\n    }\r\n    else if (CHILD(n, 1).type === SYM.augassign) {\r\n        var ch = CHILD(n, 0);\r\n        var expr1 = astForTestlist(c, ch);\r\n        switch (expr1.constructor) {\r\n            case GeneratorExp: throw syntaxError(\"augmented assignment to generator expression not possible\", n.range);\r\n            case Yield: throw syntaxError(\"augmented assignment to yield expression not possible\", n.range);\r\n            case Name: {\r\n                var varName = expr1.id;\r\n                forbiddenCheck(c, ch, varName.value, n.range);\r\n                break;\r\n            }\r\n            case Attribute:\r\n            case Subscript:\r\n                break;\r\n            default:\r\n                throw syntaxError(\"illegal expression for augmented assignment\", n.range);\r\n        }\r\n        setContext(c, expr1, Store, ch);\r\n        ch = CHILD(n, 2);\r\n        var expr2 = void 0;\r\n        if (ch.type === SYM.testlist)\r\n            expr2 = astForTestlist(c, ch);\r\n        else\r\n            expr2 = astForExpr(c, ch);\r\n        return new AugAssign(expr1, astForAugassign(c, CHILD(n, 1)), expr2, n.range);\r\n    }\r\n    else {\r\n        // normal assignment\r\n        var eq = CHILD(n, 1);\r\n        REQ(eq, TOK.T_EQUAL);\r\n        var targets = [];\r\n        var N = NCH(n);\r\n        for (var i = 0; i < N - 2; i += 2) {\r\n            var ch = CHILD(n, i);\r\n            if (ch.type === SYM.YieldExpr)\r\n                throw syntaxError(\"assignment to yield expression not possible\", n.range);\r\n            var e = astForTestlist(c, ch);\r\n            setContext(c, e, Store, CHILD(n, i));\r\n            targets[i / 2] = e;\r\n        }\r\n        var value = CHILD(n, N - 1);\r\n        var expression = void 0;\r\n        if (value.type === SYM.testlist)\r\n            expression = astForTestlist(c, value);\r\n        else\r\n            expression = astForExpr(c, value);\r\n        return new Assign(targets, expression, n.range, eq.range);\r\n    }\r\n}\r\nfunction astForIfexpr(c, n) {\r\n    assert(NCH(n) === 5);\r\n    return new IfExp(astForExpr(c, CHILD(n, 2)), astForExpr(c, CHILD(n, 0)), astForExpr(c, CHILD(n, 4)), n.range);\r\n}\r\n// escape() was deprecated in JavaScript 1.5. Use encodeURI or encodeURIComponent instead.\r\nfunction escape(s) {\r\n    return encodeURIComponent(s);\r\n}\r\n/**\r\n * s is a python-style string literal, including quote characters and u/r/b\r\n * prefixes. Returns decoded string object.\r\n */\r\nfunction parsestr(c, s) {\r\n    // const encodeUtf8 = function(s) { return unescape(encodeURIComponent(s)); };\r\n    var decodeUtf8 = function (s) { return decodeURIComponent(escape(s)); };\r\n    var decodeEscape = function (s, quote) {\r\n        var len = s.length;\r\n        var ret = '';\r\n        for (var i = 0; i < len; ++i) {\r\n            var c_1 = s.charAt(i);\r\n            if (c_1 === '\\\\') {\r\n                ++i;\r\n                c_1 = s.charAt(i);\r\n                if (c_1 === 'n')\r\n                    ret += \"\\n\";\r\n                else if (c_1 === '\\\\')\r\n                    ret += \"\\\\\";\r\n                else if (c_1 === 't')\r\n                    ret += \"\\t\";\r\n                else if (c_1 === 'r')\r\n                    ret += \"\\r\";\r\n                else if (c_1 === 'b')\r\n                    ret += \"\\b\";\r\n                else if (c_1 === 'f')\r\n                    ret += \"\\f\";\r\n                else if (c_1 === 'v')\r\n                    ret += \"\\v\";\r\n                else if (c_1 === '0')\r\n                    ret += \"\\0\";\r\n                else if (c_1 === '\"')\r\n                    ret += '\"';\r\n                else if (c_1 === '\\'')\r\n                    ret += '\\'';\r\n                else if (c_1 === '\\n') { }\r\n                else if (c_1 === 'x') {\r\n                    var d0 = s.charAt(++i);\r\n                    var d1 = s.charAt(++i);\r\n                    ret += String.fromCharCode(parseInt(d0 + d1, 16));\r\n                }\r\n                else if (c_1 === 'u' || c_1 === 'U') {\r\n                    var d0 = s.charAt(++i);\r\n                    var d1 = s.charAt(++i);\r\n                    var d2 = s.charAt(++i);\r\n                    var d3 = s.charAt(++i);\r\n                    ret += String.fromCharCode(parseInt(d0 + d1, 16), parseInt(d2 + d3, 16));\r\n                }\r\n                else {\r\n                    // Leave it alone\r\n                    ret += \"\\\\\" + c_1;\r\n                }\r\n            }\r\n            else {\r\n                ret += c_1;\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    var quote = s.charAt(0);\r\n    var rawmode = false;\r\n    if (quote === 'u' || quote === 'U') {\r\n        s = s.substr(1);\r\n        quote = s.charAt(0);\r\n    }\r\n    else if (quote === 'r' || quote === 'R') {\r\n        s = s.substr(1);\r\n        quote = s.charAt(0);\r\n        rawmode = true;\r\n    }\r\n    assert(quote !== 'b' && quote !== 'B', \"todo; haven't done b'' strings yet\");\r\n    assert(quote === \"'\" || quote === '\"' && s.charAt(s.length - 1) === quote);\r\n    s = s.substr(1, s.length - 2);\r\n    if (s.length >= 4 && s.charAt(0) === quote && s.charAt(1) === quote) {\r\n        assert(s.charAt(s.length - 1) === quote && s.charAt(s.length - 2) === quote);\r\n        s = s.substr(2, s.length - 4);\r\n    }\r\n    if (rawmode || s.indexOf('\\\\') === -1) {\r\n        return strobj(decodeUtf8(s));\r\n    }\r\n    return strobj(decodeEscape(s, quote));\r\n}\r\n/**\r\n *\r\n */\r\nfunction parsestrplus(c, n) {\r\n    REQ(CHILD(n, 0), TOK.T_STRING);\r\n    var ret = \"\";\r\n    for (var i = 0; i < NCH(n); ++i) {\r\n        var child = CHILD(n, i);\r\n        try {\r\n            ret = ret + parsestr(c, child.value);\r\n        }\r\n        catch (x) {\r\n            throw syntaxError(\"invalid string (possibly contains a unicode character)\", child.range);\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction parsenumber(c, s, range) {\r\n    var endChar = s.charAt(s.length - 1);\r\n    if (endChar === 'j' || endChar === 'J') {\r\n        throw syntaxError(\"complex numbers are currently unsupported\", range);\r\n    }\r\n    if (s.indexOf('.') !== -1) {\r\n        return floatAST(s);\r\n    }\r\n    // Handle integers of various bases\r\n    var tmp = s;\r\n    var value;\r\n    var radix = 10;\r\n    var neg = false;\r\n    if (s.charAt(0) === '-') {\r\n        tmp = s.substr(1);\r\n        neg = true;\r\n    }\r\n    if (tmp.charAt(0) === '0' && (tmp.charAt(1) === 'x' || tmp.charAt(1) === 'X')) {\r\n        // Hex\r\n        tmp = tmp.substring(2);\r\n        value = parseInt(tmp, 16);\r\n        radix = 16;\r\n    }\r\n    else if ((s.indexOf('e') !== -1) || (s.indexOf('E') !== -1)) {\r\n        // Float with exponent (needed to make sure e/E wasn't hex first)\r\n        return floatAST(s);\r\n    }\r\n    else if (tmp.charAt(0) === '0' && (tmp.charAt(1) === 'b' || tmp.charAt(1) === 'B')) {\r\n        // Binary\r\n        tmp = tmp.substring(2);\r\n        value = parseInt(tmp, 2);\r\n        radix = 2;\r\n    }\r\n    else if (tmp.charAt(0) === '0') {\r\n        if (tmp === \"0\") {\r\n            // Zero\r\n            value = 0;\r\n        }\r\n        else {\r\n            // Octal (Leading zero, but not actually zero)\r\n            if (endChar === 'l' || endChar === 'L') {\r\n                return longAST(s.substr(0, s.length - 1), 8);\r\n            }\r\n            else {\r\n                radix = 8;\r\n                tmp = tmp.substring(1);\r\n                if ((tmp.charAt(0) === 'o') || (tmp.charAt(0) === 'O')) {\r\n                    tmp = tmp.substring(1);\r\n                }\r\n                value = parseInt(tmp, 8);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // Decimal\r\n        if (endChar === 'l' || endChar === 'L') {\r\n            return longAST(s.substr(0, s.length - 1), radix);\r\n        }\r\n        else {\r\n            value = parseInt(tmp, radix);\r\n        }\r\n    }\r\n    // Convert to long\r\n    if (value > LONG_THRESHOLD && Math.floor(value) === value && (s.indexOf('e') === -1 && s.indexOf('E') === -1)) {\r\n        // TODO: Does radix zero make sense?\r\n        return longAST(s, 0);\r\n    }\r\n    if (endChar === 'l' || endChar === 'L') {\r\n        return longAST(s.substr(0, s.length - 1), radix);\r\n    }\r\n    else {\r\n        if (neg) {\r\n            return intAST(-value);\r\n        }\r\n        else {\r\n            return intAST(value);\r\n        }\r\n    }\r\n}\r\nfunction astForSlice(c, node) {\r\n    var n = node;\r\n    REQ(n, SYM.subscript);\r\n    var ch = CHILD(n, 0);\r\n    var lower = null;\r\n    var upper = null;\r\n    var step = null;\r\n    if (ch.type === TOK.T_DOT) {\r\n        return new Ellipsis();\r\n    }\r\n    if (NCH(n) === 1 && ch.type === SYM.IfExpr) {\r\n        return new Index(astForExpr(c, ch));\r\n    }\r\n    if (ch.type === SYM.IfExpr) {\r\n        lower = astForExpr(c, ch);\r\n    }\r\n    if (ch.type === TOK.T_COLON) {\r\n        if (NCH(n) > 1) {\r\n            var n2 = CHILD(n, 1);\r\n            if (n2.type === SYM.IfExpr)\r\n                upper = astForExpr(c, n2);\r\n        }\r\n    }\r\n    else if (NCH(n) > 2) {\r\n        var n2 = CHILD(n, 2);\r\n        if (n2.type === SYM.IfExpr) {\r\n            upper = astForExpr(c, n2);\r\n        }\r\n    }\r\n    ch = CHILD(n, NCH(n) - 1);\r\n    if (ch.type === SYM.sliceop) {\r\n        if (NCH(ch) === 1) {\r\n            ch = CHILD(ch, 0);\r\n            step = new Name(new RangeAnnotated(\"None\", null), Load, ch.range);\r\n        }\r\n        else {\r\n            ch = CHILD(ch, 1);\r\n            if (ch.type === SYM.IfExpr)\r\n                step = astForExpr(c, ch);\r\n        }\r\n    }\r\n    return new Slice(lower, upper, step);\r\n}\r\nfunction astForAtomExpr(c, n) {\r\n    var c0 = CHILD(n, 0);\r\n    switch (c0.type) {\r\n        case TOK.T_NAME:\r\n            // All names start in Load context, but may be changed later\r\n            return new Name(new RangeAnnotated(c0.value, c0.range), Load, n.range);\r\n        case TOK.T_STRING: {\r\n            // FIXME: Owing to the way that Python allows string concatenation, this is imprecise.\r\n            return new Str(new RangeAnnotated(parsestrplus(c, n), n.range));\r\n        }\r\n        case TOK.T_NUMBER: {\r\n            return new Num(new RangeAnnotated(parsenumber(c, c0.value, c0.range), n.range));\r\n        }\r\n        case TOK.T_LPAR: {\r\n            var c1 = CHILD(n, 1);\r\n            if (c1.type === TOK.T_RPAR) {\r\n                return new Tuple([], Load, n.range);\r\n            }\r\n            if (c1.type === SYM.YieldExpr) {\r\n                return astForExpr(c, c1);\r\n            }\r\n            if (NCH(c1) > 1 && CHILD(c1, 1).type === SYM.gen_for) {\r\n                return astForGenexp(c, c1);\r\n            }\r\n            return astForTestlistGexp(c, c1);\r\n        }\r\n        case TOK.T_LSQB: {\r\n            var c1 = CHILD(n, 1);\r\n            if (c1.type === TOK.T_RSQB)\r\n                return new List([], Load, n.range);\r\n            REQ(c1, SYM.listmaker);\r\n            if (NCH(c1) === 1 || CHILD(c1, 1).type === TOK.T_COMMA)\r\n                return new List(seqForTestlist(c, c1), Load, n.range);\r\n            else\r\n                return astForListcomp(c, c1);\r\n        }\r\n        case TOK.T_LBRACE: {\r\n            /* dictmaker: test ':' test (',' test ':' test)* [','] */\r\n            var c1 = CHILD(n, 1);\r\n            var N = NCH(c1);\r\n            // var size = Math.floor((NCH(ch) + 1) / 4); // + 1 for no trailing comma case\r\n            var keys = [];\r\n            var values = [];\r\n            for (var i = 0; i < N; i += 4) {\r\n                keys[i / 4] = astForExpr(c, CHILD(c1, i));\r\n                values[i / 4] = astForExpr(c, CHILD(c1, i + 2));\r\n            }\r\n            return new Dict(keys, values, n.range);\r\n        }\r\n        case TOK.T_BACKQUOTE: {\r\n            throw syntaxError(\"backquote not supported, use repr()\", n.range);\r\n        }\r\n        default: {\r\n            throw new Error(\"unhandled atom '\" + grammarName(c0.type) + \"'\");\r\n        }\r\n    }\r\n}\r\nfunction astForPowerExpr(c, node) {\r\n    var n = node;\r\n    REQ(n, SYM.PowerExpr);\r\n    var N = NCH(n);\r\n    var NminusOne = N - 1;\r\n    var e = astForAtomExpr(c, CHILD(n, 0));\r\n    if (N === 1)\r\n        return e;\r\n    for (var i = 1; i < N; ++i) {\r\n        var ch = CHILD(n, i);\r\n        if (ch.type !== SYM.trailer) {\r\n            break;\r\n        }\r\n        e = astForTrailer(c, ch, e);\r\n    }\r\n    if (CHILD(n, NminusOne).type === SYM.UnaryExpr) {\r\n        var f = astForExpr(c, CHILD(n, NminusOne));\r\n        return new BinOp(e, { op: Pow, range: null }, f, n.range);\r\n    }\r\n    else {\r\n        return e;\r\n    }\r\n}\r\nfunction astForExpr(c, n) {\r\n    LOOP: while (true) {\r\n        switch (n.type) {\r\n            case SYM.IfExpr:\r\n            case SYM.old_test:\r\n                if (CHILD(n, 0).type === SYM.LambdaExpr || CHILD(n, 0).type === SYM.old_LambdaExpr)\r\n                    return astForLambdef(c, CHILD(n, 0));\r\n                else if (NCH(n) > 1)\r\n                    return astForIfexpr(c, n);\r\n            // fallthrough\r\n            case SYM.OrExpr:\r\n            case SYM.AndExpr:\r\n                if (NCH(n) === 1) {\r\n                    n = CHILD(n, 0);\r\n                    continue LOOP;\r\n                }\r\n                var seq = [];\r\n                for (var i = 0; i < NCH(n); i += 2) {\r\n                    seq[i / 2] = astForExpr(c, CHILD(n, i));\r\n                }\r\n                if (CHILD(n, 1).value === \"and\") {\r\n                    return new BoolOp(And, seq, n.range);\r\n                }\r\n                assert(CHILD(n, 1).value === \"or\");\r\n                return new BoolOp(Or, seq, n.range);\r\n            case SYM.NotExpr:\r\n                if (NCH(n) === 1) {\r\n                    n = CHILD(n, 0);\r\n                    continue LOOP;\r\n                }\r\n                else {\r\n                    return new UnaryOp(Not, astForExpr(c, CHILD(n, 1)), n.range);\r\n                }\r\n            case SYM.ComparisonExpr:\r\n                if (NCH(n) === 1) {\r\n                    n = CHILD(n, 0);\r\n                    continue LOOP;\r\n                }\r\n                else {\r\n                    var ops = [];\r\n                    var cmps = [];\r\n                    for (var i = 1; i < NCH(n); i += 2) {\r\n                        ops[(i - 1) / 2] = astForCompOp(c, CHILD(n, i));\r\n                        cmps[(i - 1) / 2] = astForExpr(c, CHILD(n, i + 1));\r\n                    }\r\n                    return new Compare(astForExpr(c, CHILD(n, 0)), ops, cmps, n.range);\r\n                }\r\n            case SYM.ArithmeticExpr:\r\n            case SYM.GeometricExpr:\r\n            case SYM.ShiftExpr:\r\n            case SYM.BitwiseOrExpr:\r\n            case SYM.BitwiseXorExpr:\r\n            case SYM.BitwiseAndExpr:\r\n                if (NCH(n) === 1) {\r\n                    n = CHILD(n, 0);\r\n                    continue LOOP;\r\n                }\r\n                return astForBinop(c, n);\r\n            case SYM.YieldExpr:\r\n                var exp = null;\r\n                if (NCH(n) === 2) {\r\n                    exp = astForTestlist(c, CHILD(n, 1));\r\n                }\r\n                return new Yield(exp, n.range);\r\n            case SYM.UnaryExpr:\r\n                if (NCH(n) === 1) {\r\n                    n = CHILD(n, 0);\r\n                    continue LOOP;\r\n                }\r\n                return astForUnaryExpr(c, n);\r\n            case SYM.PowerExpr:\r\n                return astForPowerExpr(c, n);\r\n            default: {\r\n                throw new Error(\"unhandled expr\" /*, \"n.type: %d\", n.type*/);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction astForPrintStmt(c, n) {\r\n    var start = 1;\r\n    var dest = null;\r\n    REQ(n, SYM.print_stmt);\r\n    if (NCH(n) >= 2 && CHILD(n, 1).type === TOK.T_RIGHTSHIFT) {\r\n        dest = astForExpr(c, CHILD(n, 2));\r\n        start = 4;\r\n    }\r\n    var seq = [];\r\n    for (var i = start, j = 0; i < NCH(n); i += 2, ++j) {\r\n        seq[j] = astForExpr(c, CHILD(n, i));\r\n    }\r\n    var nl = (CHILD(n, NCH(n) - 1)).type === TOK.T_COMMA ? false : true;\r\n    return new Print(dest, seq, nl, n.range);\r\n}\r\nfunction astForStmt(c, n) {\r\n    if (n.type === SYM.stmt) {\r\n        assert(NCH(n) === 1);\r\n        n = CHILD(n, 0);\r\n    }\r\n    if (n.type === SYM.simple_stmt) {\r\n        assert(numStmts(n) === 1);\r\n        n = CHILD(n, 0);\r\n    }\r\n    if (n.type === SYM.small_stmt) {\r\n        REQ(n, SYM.small_stmt);\r\n        n = CHILD(n, 0);\r\n        switch (n.type) {\r\n            case SYM.ExprStmt: return astForExprStmt(c, n);\r\n            case SYM.print_stmt: return astForPrintStmt(c, n);\r\n            case SYM.del_stmt: return astForDelStmt(c, n);\r\n            case SYM.pass_stmt: return new Pass(n.range);\r\n            case SYM.flow_stmt: return astForFlowStmt(c, n);\r\n            case SYM.import_stmt: return astForImportStmt(c, n);\r\n            case SYM.GlobalStmt: return astForGlobalStmt(c, n);\r\n            case SYM.NonLocalStmt: return astForNonLocalStmt(c, n);\r\n            case SYM.exec_stmt: return astForExecStmt(c, n);\r\n            case SYM.assert_stmt: return astForAssertStmt(c, n);\r\n            default: {\r\n                throw new Error(\"unhandled small_stmt\");\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        var ch = CHILD(n, 0);\r\n        REQ(n, SYM.compound_stmt);\r\n        switch (ch.type) {\r\n            case SYM.if_stmt: return astForIfStmt(c, ch);\r\n            case SYM.while_stmt: return astForWhileStmt(c, ch);\r\n            case SYM.for_stmt: return astForForStmt(c, ch);\r\n            case SYM.try_stmt: return astForTryStmt(c, ch);\r\n            case SYM.with_stmt: return astForWithStmt(c, ch);\r\n            case SYM.funcdef: return astForFuncdef(c, ch, []);\r\n            case SYM.classdef: return astForClassdef(c, ch, []);\r\n            case SYM.decorated: return astForDecorated(c, ch);\r\n            default: {\r\n                throw new Error(\"unhandled compound_stmt\");\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function astFromExpression(n) {\r\n    var c = new Compiling(\"utf-8\");\r\n    return astForExpr(c, n);\r\n}\r\nexport function astFromParse(n) {\r\n    var c = new Compiling(\"utf-8\");\r\n    var stmts = [];\r\n    var k = 0;\r\n    for (var i = 0; i < NCH(n) - 1; ++i) {\r\n        var ch = CHILD(n, i);\r\n        if (n.type === TOK.T_NEWLINE)\r\n            continue;\r\n        REQ(ch, SYM.stmt);\r\n        var num = numStmts(ch);\r\n        if (num === 1) {\r\n            stmts[k++] = astForStmt(c, ch);\r\n        }\r\n        else {\r\n            ch = CHILD(ch, 0);\r\n            REQ(ch, SYM.simple_stmt);\r\n            for (var j = 0; j < num; ++j) {\r\n                stmts[k++] = astForStmt(c, CHILD(ch, j * 2));\r\n            }\r\n        }\r\n    }\r\n    return stmts;\r\n    /*\r\n    switch (n.type) {\r\n        case SYM.file_input:\r\n        case SYM.eval_input: {\r\n            throw new Error(\"todo;\");\r\n        }\r\n        case SYM.single_input: {\r\n            throw new Error(\"todo;\");\r\n        }\r\n        default: {\r\n            throw new Error(\"todo;\");\r\n        }\r\n    }\r\n    */\r\n}\r\nexport function astDump(node) {\r\n    var _format = function (node) {\r\n        if (node === null) {\r\n            return \"None\";\r\n        }\r\n        else if (node['prototype'] && node['prototype']._astname !== undefined && node['prototype']._isenum) {\r\n            // TODO: Replace the _isenum classes with real TypeScript enum.\r\n            // TODO: Why do we have the parens?\r\n            return node['prototype']._astname + \"()\";\r\n        }\r\n        else if (node['_astname'] !== undefined) {\r\n            var fields = [];\r\n            for (var i = 0; i < node['_fields'].length; i += 2) {\r\n                var a = node['_fields'][i]; // field name\r\n                var b = node['_fields'][i + 1](node); // field getter func\r\n                fields.push([a, _format(b)]);\r\n            }\r\n            var attrs = [];\r\n            for (var i = 0; i < fields.length; ++i) {\r\n                var field = fields[i];\r\n                attrs.push(field[0] + \"=\" + field[1].replace(/^\\s+/, ''));\r\n            }\r\n            var fieldstr = attrs.join(',');\r\n            return node['_astname'] + \"(\" + fieldstr + \")\";\r\n        }\r\n        else if (Array.isArray(node)) {\r\n            var elems = [];\r\n            for (var i = 0; i < node.length; ++i) {\r\n                var x = node[i];\r\n                elems.push(_format(x));\r\n            }\r\n            var elemsstr = elems.join(',');\r\n            return \"[\" + elemsstr.replace(/^\\s+/, '') + \"]\";\r\n        }\r\n        else {\r\n            var ret = void 0;\r\n            if (node === true)\r\n                ret = \"True\";\r\n            else if (node === false)\r\n                ret = \"False\";\r\n            else\r\n                ret = \"\" + node;\r\n            return ret;\r\n        }\r\n    };\r\n    return _format(node);\r\n}\r\n","/**\r\n * @param s\r\n */\r\nexport function floatAST(s) {\r\n    var thing = {\r\n        text: s,\r\n        value: parseFloat(s),\r\n        isFloat: function () { return true; },\r\n        isInt: function () { return false; },\r\n        isLong: function () { return false; },\r\n        toString: function () { return s; }\r\n    };\r\n    return thing;\r\n}\r\n/**\r\n * @param n\r\n */\r\nexport function intAST(n) {\r\n    var thing = {\r\n        value: n,\r\n        isFloat: function () { return false; },\r\n        isInt: function () { return true; },\r\n        isLong: function () { return false; },\r\n        toString: function () { return '' + n; }\r\n    };\r\n    return thing;\r\n}\r\n/**\r\n * @param {string} s\r\n */\r\nexport function longAST(s, radix) {\r\n    var thing = {\r\n        text: s,\r\n        radix: radix,\r\n        isFloat: function () { return false; },\r\n        isInt: function () { return false; },\r\n        isLong: function () { return true; },\r\n        toString: function () { return s; }\r\n    };\r\n    return thing;\r\n}\r\n","import * as tslib_1 from \"tslib\";\r\n//\r\n// This module is at the bottom.\r\n// It should only import modules that don't introduce circularity.\r\n//\r\nimport { assert } from '../common/asserts';\r\nvar Load = (function () {\r\n    function Load() {\r\n    }\r\n    return Load;\r\n}());\r\nexport { Load };\r\nvar Store = (function () {\r\n    function Store() {\r\n    }\r\n    return Store;\r\n}());\r\nexport { Store };\r\nvar Del = (function () {\r\n    function Del() {\r\n    }\r\n    return Del;\r\n}());\r\nexport { Del };\r\nvar AugLoad = (function () {\r\n    function AugLoad() {\r\n    }\r\n    return AugLoad;\r\n}());\r\nexport { AugLoad };\r\nvar AugStore = (function () {\r\n    function AugStore() {\r\n    }\r\n    return AugStore;\r\n}());\r\nexport { AugStore };\r\nvar Param = (function () {\r\n    function Param() {\r\n    }\r\n    return Param;\r\n}());\r\nexport { Param };\r\nvar And = (function () {\r\n    function And() {\r\n    }\r\n    return And;\r\n}());\r\nexport { And };\r\nvar Or = (function () {\r\n    function Or() {\r\n    }\r\n    return Or;\r\n}());\r\nexport { Or };\r\nvar Add = (function () {\r\n    function Add() {\r\n    }\r\n    return Add;\r\n}());\r\nexport { Add };\r\nvar Sub = (function () {\r\n    function Sub() {\r\n    }\r\n    return Sub;\r\n}());\r\nexport { Sub };\r\nvar Mult = (function () {\r\n    function Mult() {\r\n    }\r\n    return Mult;\r\n}());\r\nexport { Mult };\r\nvar Div = (function () {\r\n    function Div() {\r\n    }\r\n    return Div;\r\n}());\r\nexport { Div };\r\nvar Mod = (function () {\r\n    function Mod() {\r\n    }\r\n    return Mod;\r\n}());\r\nexport { Mod };\r\nvar Pow = (function () {\r\n    function Pow() {\r\n    }\r\n    return Pow;\r\n}());\r\nexport { Pow };\r\nvar LShift = (function () {\r\n    function LShift() {\r\n    }\r\n    return LShift;\r\n}());\r\nexport { LShift };\r\nvar RShift = (function () {\r\n    function RShift() {\r\n    }\r\n    return RShift;\r\n}());\r\nexport { RShift };\r\nvar BitOr = (function () {\r\n    function BitOr() {\r\n    }\r\n    return BitOr;\r\n}());\r\nexport { BitOr };\r\nvar BitXor = (function () {\r\n    function BitXor() {\r\n    }\r\n    return BitXor;\r\n}());\r\nexport { BitXor };\r\nvar BitAnd = (function () {\r\n    function BitAnd() {\r\n    }\r\n    return BitAnd;\r\n}());\r\nexport { BitAnd };\r\nvar FloorDiv = (function () {\r\n    function FloorDiv() {\r\n    }\r\n    return FloorDiv;\r\n}());\r\nexport { FloorDiv };\r\nvar Invert = (function () {\r\n    function Invert() {\r\n    }\r\n    return Invert;\r\n}());\r\nexport { Invert };\r\nvar Not = (function () {\r\n    function Not() {\r\n    }\r\n    return Not;\r\n}());\r\nexport { Not };\r\nvar UAdd = (function () {\r\n    function UAdd() {\r\n    }\r\n    return UAdd;\r\n}());\r\nexport { UAdd };\r\nvar USub = (function () {\r\n    function USub() {\r\n    }\r\n    return USub;\r\n}());\r\nexport { USub };\r\nvar Eq = (function () {\r\n    function Eq() {\r\n    }\r\n    return Eq;\r\n}());\r\nexport { Eq };\r\nvar NotEq = (function () {\r\n    function NotEq() {\r\n    }\r\n    return NotEq;\r\n}());\r\nexport { NotEq };\r\nvar Lt = (function () {\r\n    function Lt() {\r\n    }\r\n    return Lt;\r\n}());\r\nexport { Lt };\r\nvar LtE = (function () {\r\n    function LtE() {\r\n    }\r\n    return LtE;\r\n}());\r\nexport { LtE };\r\nvar Gt = (function () {\r\n    function Gt() {\r\n    }\r\n    return Gt;\r\n}());\r\nexport { Gt };\r\nvar GtE = (function () {\r\n    function GtE() {\r\n    }\r\n    return GtE;\r\n}());\r\nexport { GtE };\r\nvar Is = (function () {\r\n    function Is() {\r\n    }\r\n    return Is;\r\n}());\r\nexport { Is };\r\nvar IsNot = (function () {\r\n    function IsNot() {\r\n    }\r\n    return IsNot;\r\n}());\r\nexport { IsNot };\r\nvar In = (function () {\r\n    function In() {\r\n    }\r\n    return In;\r\n}());\r\nexport { In };\r\nvar NotIn = (function () {\r\n    function NotIn() {\r\n    }\r\n    return NotIn;\r\n}());\r\nexport { NotIn };\r\nvar RangeAnnotated = (function () {\r\n    function RangeAnnotated(value, range) {\r\n        this.value = value;\r\n        this.range = range;\r\n        assert(typeof value !== 'undefined', \"value must be defined.\");\r\n    }\r\n    return RangeAnnotated;\r\n}());\r\nexport { RangeAnnotated };\r\nvar Expression = (function () {\r\n    function Expression() {\r\n        // Do noting yet.\r\n    }\r\n    Expression.prototype.accept = function (visitor) {\r\n        // accept must be implemented by derived classes.\r\n        throw new Error(\"\\\"Expression.accept\\\" is not implemented.\");\r\n    };\r\n    return Expression;\r\n}());\r\nexport { Expression };\r\nvar Statement = (function () {\r\n    function Statement() {\r\n    }\r\n    Statement.prototype.accept = function (visitor) {\r\n        // accept must be implemented by derived classes.\r\n        throw new Error(\"\\\"Statement.accept\\\" is not implemented.\");\r\n    };\r\n    return Statement;\r\n}());\r\nexport { Statement };\r\nvar IterationStatement = (function (_super) {\r\n    tslib_1.__extends(IterationStatement, _super);\r\n    function IterationStatement() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return IterationStatement;\r\n}(Statement));\r\nexport { IterationStatement };\r\nvar Module = (function () {\r\n    function Module(body) {\r\n        this.body = body;\r\n    }\r\n    Module.prototype.accept = function (visitor) {\r\n        visitor.module(this);\r\n    };\r\n    return Module;\r\n}());\r\nexport { Module };\r\nvar Interactive = (function () {\r\n    function Interactive(body) {\r\n        this.body = body;\r\n    }\r\n    return Interactive;\r\n}());\r\nexport { Interactive };\r\nvar UnaryExpression = (function (_super) {\r\n    tslib_1.__extends(UnaryExpression, _super);\r\n    function UnaryExpression() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return UnaryExpression;\r\n}(Expression));\r\nexport { UnaryExpression };\r\nvar Suite = (function () {\r\n    function Suite(body) {\r\n        this.body = body;\r\n    }\r\n    return Suite;\r\n}());\r\nexport { Suite };\r\nvar FunctionDef = (function (_super) {\r\n    tslib_1.__extends(FunctionDef, _super);\r\n    function FunctionDef(name, args, body, returnType, decorator_list, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.name = name;\r\n        _this.args = args;\r\n        _this.body = body;\r\n        _this.decorator_list = decorator_list;\r\n        _this.returnType = returnType;\r\n        return _this;\r\n    }\r\n    FunctionDef.prototype.accept = function (visitor) {\r\n        visitor.functionDef(this);\r\n    };\r\n    return FunctionDef;\r\n}(Statement));\r\nexport { FunctionDef };\r\nvar ClassDef = (function (_super) {\r\n    tslib_1.__extends(ClassDef, _super);\r\n    function ClassDef(name, bases, body, decorator_list, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.name = name;\r\n        _this.bases = bases;\r\n        _this.body = body;\r\n        _this.decorator_list = decorator_list;\r\n        return _this;\r\n    }\r\n    ClassDef.prototype.accept = function (visitor) {\r\n        visitor.classDef(this);\r\n    };\r\n    return ClassDef;\r\n}(Statement));\r\nexport { ClassDef };\r\nvar ReturnStatement = (function (_super) {\r\n    tslib_1.__extends(ReturnStatement, _super);\r\n    function ReturnStatement(value, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.value = value;\r\n        return _this;\r\n    }\r\n    ReturnStatement.prototype.accept = function (visitor) {\r\n        visitor.returnStatement(this);\r\n    };\r\n    return ReturnStatement;\r\n}(Statement));\r\nexport { ReturnStatement };\r\nvar DeleteStatement = (function (_super) {\r\n    tslib_1.__extends(DeleteStatement, _super);\r\n    function DeleteStatement(targets, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.targets = targets;\r\n        return _this;\r\n    }\r\n    return DeleteStatement;\r\n}(Statement));\r\nexport { DeleteStatement };\r\nvar Assign = (function (_super) {\r\n    tslib_1.__extends(Assign, _super);\r\n    function Assign(targets, value, range, eqRange) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.eqRange = eqRange;\r\n        _this.targets = targets;\r\n        _this.value = value;\r\n        return _this;\r\n    }\r\n    Assign.prototype.accept = function (visitor) {\r\n        visitor.assign(this);\r\n    };\r\n    return Assign;\r\n}(Statement));\r\nexport { Assign };\r\nvar AugAssign = (function (_super) {\r\n    tslib_1.__extends(AugAssign, _super);\r\n    function AugAssign(target, op, value, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.target = target;\r\n        _this.op = op;\r\n        _this.value = value;\r\n        return _this;\r\n    }\r\n    return AugAssign;\r\n}(Statement));\r\nexport { AugAssign };\r\nvar Print = (function (_super) {\r\n    tslib_1.__extends(Print, _super);\r\n    function Print(dest, values, nl, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.dest = dest;\r\n        _this.values = values;\r\n        _this.nl = nl;\r\n        return _this;\r\n    }\r\n    Print.prototype.accept = function (visitor) {\r\n        visitor.print(this);\r\n    };\r\n    return Print;\r\n}(Statement));\r\nexport { Print };\r\nvar ForStatement = (function (_super) {\r\n    tslib_1.__extends(ForStatement, _super);\r\n    function ForStatement(target, iter, body, orelse, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.target = target;\r\n        _this.iter = iter;\r\n        _this.body = body;\r\n        _this.orelse = orelse;\r\n        return _this;\r\n    }\r\n    return ForStatement;\r\n}(IterationStatement));\r\nexport { ForStatement };\r\nvar WhileStatement = (function (_super) {\r\n    tslib_1.__extends(WhileStatement, _super);\r\n    function WhileStatement(test, body, orelse, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.test = test;\r\n        _this.body = body;\r\n        _this.orelse = orelse;\r\n        return _this;\r\n    }\r\n    return WhileStatement;\r\n}(IterationStatement));\r\nexport { WhileStatement };\r\nvar IfStatement = (function (_super) {\r\n    tslib_1.__extends(IfStatement, _super);\r\n    function IfStatement(test, consequent, alternate, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.test = test;\r\n        _this.consequent = consequent;\r\n        _this.alternate = alternate;\r\n        return _this;\r\n    }\r\n    IfStatement.prototype.accept = function (visitor) {\r\n        visitor.ifStatement(this);\r\n    };\r\n    return IfStatement;\r\n}(Statement));\r\nexport { IfStatement };\r\nvar WithStatement = (function (_super) {\r\n    tslib_1.__extends(WithStatement, _super);\r\n    function WithStatement(context_expr, optional_vars, body, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.context_expr = context_expr;\r\n        _this.optional_vars = optional_vars;\r\n        _this.body = body;\r\n        return _this;\r\n    }\r\n    return WithStatement;\r\n}(Statement));\r\nexport { WithStatement };\r\nvar Raise = (function (_super) {\r\n    tslib_1.__extends(Raise, _super);\r\n    function Raise(type, inst, tback, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.type = type;\r\n        _this.inst = inst;\r\n        _this.tback = tback;\r\n        return _this;\r\n    }\r\n    return Raise;\r\n}(Statement));\r\nexport { Raise };\r\nvar TryExcept = (function (_super) {\r\n    tslib_1.__extends(TryExcept, _super);\r\n    function TryExcept(body, handlers, orelse, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.body = body;\r\n        _this.handlers = handlers;\r\n        _this.orelse = orelse;\r\n        return _this;\r\n    }\r\n    return TryExcept;\r\n}(Statement));\r\nexport { TryExcept };\r\nvar TryFinally = (function (_super) {\r\n    tslib_1.__extends(TryFinally, _super);\r\n    function TryFinally(body, finalbody, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.body = body;\r\n        _this.finalbody = finalbody;\r\n        return _this;\r\n    }\r\n    return TryFinally;\r\n}(Statement));\r\nexport { TryFinally };\r\nvar Assert = (function (_super) {\r\n    tslib_1.__extends(Assert, _super);\r\n    function Assert(test, msg, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.test = test;\r\n        _this.msg = msg;\r\n        return _this;\r\n    }\r\n    return Assert;\r\n}(Statement));\r\nexport { Assert };\r\nvar ImportStatement = (function (_super) {\r\n    tslib_1.__extends(ImportStatement, _super);\r\n    function ImportStatement(names, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.names = names;\r\n        return _this;\r\n    }\r\n    return ImportStatement;\r\n}(Statement));\r\nexport { ImportStatement };\r\nvar ImportFrom = (function (_super) {\r\n    tslib_1.__extends(ImportFrom, _super);\r\n    function ImportFrom(module, names, level, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        assert(typeof module.value === 'string', \"module must be a string.\");\r\n        assert(Array.isArray(names), \"names must be an Array.\");\r\n        _this.module = module;\r\n        _this.names = names;\r\n        _this.level = level;\r\n        return _this;\r\n    }\r\n    ImportFrom.prototype.accept = function (visitor) {\r\n        visitor.importFrom(this);\r\n    };\r\n    return ImportFrom;\r\n}(Statement));\r\nexport { ImportFrom };\r\nvar Exec = (function (_super) {\r\n    tslib_1.__extends(Exec, _super);\r\n    function Exec(body, globals, locals, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.body = body;\r\n        _this.globals = globals;\r\n        _this.locals = locals;\r\n        return _this;\r\n    }\r\n    return Exec;\r\n}(Statement));\r\nexport { Exec };\r\nvar Global = (function (_super) {\r\n    tslib_1.__extends(Global, _super);\r\n    function Global(names, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.names = names;\r\n        return _this;\r\n    }\r\n    return Global;\r\n}(Statement));\r\nexport { Global };\r\nvar NonLocal = (function (_super) {\r\n    tslib_1.__extends(NonLocal, _super);\r\n    function NonLocal(names, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.names = names;\r\n        return _this;\r\n    }\r\n    return NonLocal;\r\n}(Statement));\r\nexport { NonLocal };\r\nvar ExpressionStatement = (function (_super) {\r\n    tslib_1.__extends(ExpressionStatement, _super);\r\n    function ExpressionStatement(value, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.value = value;\r\n        return _this;\r\n    }\r\n    ExpressionStatement.prototype.accept = function (visitor) {\r\n        visitor.expressionStatement(this);\r\n    };\r\n    return ExpressionStatement;\r\n}(Statement));\r\nexport { ExpressionStatement };\r\nvar Pass = (function (_super) {\r\n    tslib_1.__extends(Pass, _super);\r\n    function Pass(range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        return _this;\r\n    }\r\n    return Pass;\r\n}(Statement));\r\nexport { Pass };\r\nvar BreakStatement = (function (_super) {\r\n    tslib_1.__extends(BreakStatement, _super);\r\n    function BreakStatement(range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        return _this;\r\n    }\r\n    return BreakStatement;\r\n}(Statement));\r\nexport { BreakStatement };\r\nvar ContinueStatement = (function (_super) {\r\n    tslib_1.__extends(ContinueStatement, _super);\r\n    function ContinueStatement(range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        return _this;\r\n    }\r\n    return ContinueStatement;\r\n}(Statement));\r\nexport { ContinueStatement };\r\nvar BoolOp = (function (_super) {\r\n    tslib_1.__extends(BoolOp, _super);\r\n    function BoolOp(op, values, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.op = op;\r\n        _this.values = values;\r\n        return _this;\r\n    }\r\n    return BoolOp;\r\n}(Expression));\r\nexport { BoolOp };\r\nvar BinOp = (function (_super) {\r\n    tslib_1.__extends(BinOp, _super);\r\n    function BinOp(lhs, ops, rhs, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.lhs = lhs;\r\n        _this.op = ops.op;\r\n        _this.opRange = ops.range;\r\n        _this.rhs = rhs;\r\n        return _this;\r\n    }\r\n    BinOp.prototype.accept = function (visitor) {\r\n        visitor.binOp(this);\r\n    };\r\n    return BinOp;\r\n}(Expression));\r\nexport { BinOp };\r\nvar UnaryOp = (function (_super) {\r\n    tslib_1.__extends(UnaryOp, _super);\r\n    function UnaryOp(op, operand, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.op = op;\r\n        _this.operand = operand;\r\n        return _this;\r\n    }\r\n    return UnaryOp;\r\n}(Expression));\r\nexport { UnaryOp };\r\nvar Lambda = (function (_super) {\r\n    tslib_1.__extends(Lambda, _super);\r\n    function Lambda(args, body, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.args = args;\r\n        _this.body = body;\r\n        return _this;\r\n    }\r\n    return Lambda;\r\n}(Expression));\r\nexport { Lambda };\r\nvar IfExp = (function (_super) {\r\n    tslib_1.__extends(IfExp, _super);\r\n    function IfExp(test, body, orelse, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.test = test;\r\n        _this.body = body;\r\n        _this.orelse = orelse;\r\n        return _this;\r\n    }\r\n    return IfExp;\r\n}(Expression));\r\nexport { IfExp };\r\nvar Dict = (function (_super) {\r\n    tslib_1.__extends(Dict, _super);\r\n    function Dict(keys, values, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.keys = keys;\r\n        _this.values = values;\r\n        return _this;\r\n    }\r\n    Dict.prototype.accept = function (visitor) {\r\n        visitor.dict(this);\r\n    };\r\n    return Dict;\r\n}(Expression));\r\nexport { Dict };\r\nvar ListComp = (function (_super) {\r\n    tslib_1.__extends(ListComp, _super);\r\n    function ListComp(elt, generators, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.elt = elt;\r\n        _this.generators = generators;\r\n        return _this;\r\n    }\r\n    return ListComp;\r\n}(Expression));\r\nexport { ListComp };\r\nvar GeneratorExp = (function (_super) {\r\n    tslib_1.__extends(GeneratorExp, _super);\r\n    function GeneratorExp(elt, generators, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.elt = elt;\r\n        _this.generators = generators;\r\n        return _this;\r\n    }\r\n    return GeneratorExp;\r\n}(Expression));\r\nexport { GeneratorExp };\r\nvar Yield = (function (_super) {\r\n    tslib_1.__extends(Yield, _super);\r\n    function Yield(value, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.value = value;\r\n        return _this;\r\n    }\r\n    return Yield;\r\n}(Expression));\r\nexport { Yield };\r\nvar Compare = (function (_super) {\r\n    tslib_1.__extends(Compare, _super);\r\n    function Compare(left, ops, comparators, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.left = left;\r\n        for (var _i = 0, ops_1 = ops; _i < ops_1.length; _i++) {\r\n            var op = ops_1[_i];\r\n            switch (op) {\r\n                case Eq: {\r\n                    break;\r\n                }\r\n                case NotEq: {\r\n                    break;\r\n                }\r\n                case Gt: {\r\n                    break;\r\n                }\r\n                case GtE: {\r\n                    break;\r\n                }\r\n                case Lt: {\r\n                    break;\r\n                }\r\n                case LtE: {\r\n                    break;\r\n                }\r\n                case In: {\r\n                    break;\r\n                }\r\n                case NotIn: {\r\n                    break;\r\n                }\r\n                case Is: {\r\n                    break;\r\n                }\r\n                case IsNot: {\r\n                    break;\r\n                }\r\n                default: {\r\n                    throw new Error(\"ops must only contain CompareOperator(s) but contains \" + op);\r\n                }\r\n            }\r\n        }\r\n        _this.ops = ops;\r\n        _this.comparators = comparators;\r\n        return _this;\r\n    }\r\n    Compare.prototype.accept = function (visitor) {\r\n        visitor.compareExpression(this);\r\n    };\r\n    return Compare;\r\n}(Expression));\r\nexport { Compare };\r\nvar Call = (function (_super) {\r\n    tslib_1.__extends(Call, _super);\r\n    function Call(func, args, keywords, starargs, kwargs) {\r\n        var _this = _super.call(this) || this;\r\n        _this.func = func;\r\n        _this.args = args;\r\n        _this.keywords = keywords;\r\n        _this.starargs = starargs;\r\n        _this.kwargs = kwargs;\r\n        return _this;\r\n    }\r\n    Call.prototype.accept = function (visitor) {\r\n        visitor.callExpression(this);\r\n    };\r\n    return Call;\r\n}(Expression));\r\nexport { Call };\r\nvar Num = (function (_super) {\r\n    tslib_1.__extends(Num, _super);\r\n    function Num(n) {\r\n        var _this = _super.call(this) || this;\r\n        _this.n = n;\r\n        return _this;\r\n    }\r\n    Num.prototype.accept = function (visitor) {\r\n        visitor.num(this);\r\n    };\r\n    return Num;\r\n}(Expression));\r\nexport { Num };\r\nvar Str = (function (_super) {\r\n    tslib_1.__extends(Str, _super);\r\n    function Str(s) {\r\n        var _this = _super.call(this) || this;\r\n        _this.s = s;\r\n        return _this;\r\n    }\r\n    Str.prototype.accept = function (visitor) {\r\n        visitor.str(this);\r\n    };\r\n    return Str;\r\n}(Expression));\r\nexport { Str };\r\nvar Attribute = (function (_super) {\r\n    tslib_1.__extends(Attribute, _super);\r\n    function Attribute(value, attr, ctx, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.value = value;\r\n        _this.attr = attr;\r\n        _this.ctx = ctx;\r\n        return _this;\r\n    }\r\n    Attribute.prototype.accept = function (visitor) {\r\n        visitor.attribute(this);\r\n    };\r\n    return Attribute;\r\n}(Expression));\r\nexport { Attribute };\r\nvar Subscript = (function (_super) {\r\n    tslib_1.__extends(Subscript, _super);\r\n    function Subscript(value, slice, ctx, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.value = value;\r\n        _this.slice = slice;\r\n        _this.ctx = ctx;\r\n        return _this;\r\n    }\r\n    return Subscript;\r\n}(Expression));\r\nexport { Subscript };\r\nvar Name = (function (_super) {\r\n    tslib_1.__extends(Name, _super);\r\n    function Name(id, ctx, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.id = id;\r\n        _this.ctx = ctx;\r\n        return _this;\r\n    }\r\n    Name.prototype.accept = function (visitor) {\r\n        visitor.name(this);\r\n    };\r\n    return Name;\r\n}(Expression));\r\nexport { Name };\r\nvar List = (function (_super) {\r\n    tslib_1.__extends(List, _super);\r\n    function List(elts, ctx, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.elts = elts;\r\n        _this.ctx = ctx;\r\n        return _this;\r\n    }\r\n    List.prototype.accept = function (visitor) {\r\n        visitor.list(this);\r\n    };\r\n    return List;\r\n}(Expression));\r\nexport { List };\r\nvar Tuple = (function (_super) {\r\n    tslib_1.__extends(Tuple, _super);\r\n    function Tuple(elts, ctx, range) {\r\n        var _this = _super.call(this) || this;\r\n        _this.range = range;\r\n        _this.elts = elts;\r\n        _this.ctx = ctx;\r\n        return _this;\r\n    }\r\n    return Tuple;\r\n}(Expression));\r\nexport { Tuple };\r\nvar Ellipsis = (function () {\r\n    function Ellipsis() {\r\n        // Do nothing yet.\r\n    }\r\n    return Ellipsis;\r\n}());\r\nexport { Ellipsis };\r\nvar Slice = (function () {\r\n    function Slice(lower, upper, step) {\r\n        this.lower = lower;\r\n        this.upper = upper;\r\n        this.step = step;\r\n    }\r\n    return Slice;\r\n}());\r\nexport { Slice };\r\nvar ExtSlice = (function () {\r\n    function ExtSlice(dims) {\r\n        this.dims = dims;\r\n    }\r\n    return ExtSlice;\r\n}());\r\nexport { ExtSlice };\r\nvar Index = (function () {\r\n    function Index(value) {\r\n        this.value = value;\r\n    }\r\n    return Index;\r\n}());\r\nexport { Index };\r\nvar Comprehension = (function () {\r\n    function Comprehension(target, iter, ifs, range) {\r\n        this.range = range;\r\n        this.target = target;\r\n        this.iter = iter;\r\n        this.ifs = ifs;\r\n    }\r\n    return Comprehension;\r\n}());\r\nexport { Comprehension };\r\nvar ExceptHandler = (function () {\r\n    function ExceptHandler(type, name, body, range) {\r\n        this.range = range;\r\n        this.type = type;\r\n        this.name = name;\r\n        this.body = body;\r\n    }\r\n    return ExceptHandler;\r\n}());\r\nexport { ExceptHandler };\r\nvar Arguments = (function () {\r\n    function Arguments(args, vararg, kwarg, defaults) {\r\n        this.args = args;\r\n        this.vararg = vararg;\r\n        this.kwarg = kwarg;\r\n        this.defaults = defaults;\r\n    }\r\n    return Arguments;\r\n}());\r\nexport { Arguments };\r\nvar Keyword = (function () {\r\n    function Keyword(arg, value) {\r\n        this.arg = arg;\r\n        this.value = value;\r\n    }\r\n    return Keyword;\r\n}());\r\nexport { Keyword };\r\nvar Alias = (function () {\r\n    function Alias(name, asname) {\r\n        assert(typeof name.value === 'string');\r\n        assert(typeof asname === 'string' || asname === null);\r\n        this.name = name;\r\n        this.asname = asname;\r\n    }\r\n    Alias.prototype.toString = function () {\r\n        return this.name.value + \" as \" + this.asname;\r\n    };\r\n    return Alias;\r\n}());\r\nexport { Alias };\r\nModule.prototype['_astname'] = 'Module';\r\nModule.prototype['_fields'] = [\r\n    'body', function (n) { return n.body; }\r\n];\r\nInteractive.prototype['_astname'] = 'Interactive';\r\nInteractive.prototype['_fields'] = [\r\n    'body', function (n) { return n.body; }\r\n];\r\nExpression.prototype['_astname'] = 'Expression';\r\nExpression.prototype['_fields'] = [\r\n    'body', function (n) {\r\n        // TOD: Expression is abstract so we should not be here?\r\n        return void 0;\r\n    }\r\n];\r\nSuite.prototype['_astname'] = 'Suite';\r\nSuite.prototype['_fields'] = [\r\n    'body', function (n) { return n.body; }\r\n];\r\nFunctionDef.prototype['_astname'] = 'FunctionDef';\r\nFunctionDef.prototype['_fields'] = [\r\n    'name', function (n) { return n.name.value; },\r\n    'args', function (n) { return n.args; },\r\n    'body', function (n) { return n.body; },\r\n    'returnType', function (n) { return n.returnType; },\r\n    'decorator_list', function (n) { return n.decorator_list; }\r\n];\r\nClassDef.prototype['_astname'] = 'ClassDef';\r\nClassDef.prototype['_fields'] = [\r\n    'name', function (n) { return n.name.value; },\r\n    'bases', function (n) { return n.bases; },\r\n    'body', function (n) { return n.body; },\r\n    'decorator_list', function (n) { return n.decorator_list; }\r\n];\r\nReturnStatement.prototype['_astname'] = 'ReturnStatement';\r\nReturnStatement.prototype['_fields'] = [\r\n    'value', function (n) { return n.value; }\r\n];\r\nDeleteStatement.prototype['_astname'] = 'DeleteStatement';\r\nDeleteStatement.prototype['_fields'] = [\r\n    'targets', function (n) { return n.targets; }\r\n];\r\nAssign.prototype['_astname'] = 'Assign';\r\nAssign.prototype['_fields'] = [\r\n    'targets', function (n) { return n.targets; },\r\n    'value', function (n) { return n.value; }\r\n];\r\nAugAssign.prototype['_astname'] = 'AugAssign';\r\nAugAssign.prototype['_fields'] = [\r\n    'target', function (n) { return n.target; },\r\n    'op', function (n) { return n.op; },\r\n    'value', function (n) { return n.value; }\r\n];\r\nPrint.prototype['_astname'] = 'Print';\r\nPrint.prototype['_fields'] = [\r\n    'dest', function (n) { return n.dest; },\r\n    'values', function (n) { return n.values; },\r\n    'nl', function (n) { return n.nl; }\r\n];\r\nForStatement.prototype['_astname'] = 'ForStatement';\r\nForStatement.prototype['_fields'] = [\r\n    'target', function (n) { return n.target; },\r\n    'iter', function (n) { return n.iter; },\r\n    'body', function (n) { return n.body; },\r\n    'orelse', function (n) { return n.orelse; }\r\n];\r\nWhileStatement.prototype['_astname'] = 'WhileStatement';\r\nWhileStatement.prototype['_fields'] = [\r\n    'test', function (n) { return n.test; },\r\n    'body', function (n) { return n.body; },\r\n    'orelse', function (n) { return n.orelse; }\r\n];\r\nIfStatement.prototype['_astname'] = 'IfStatement';\r\nIfStatement.prototype['_fields'] = [\r\n    'test', function (n) { return n.test; },\r\n    'consequent', function (n) { return n.consequent; },\r\n    'alternate', function (n) { return n.alternate; }\r\n];\r\nWithStatement.prototype['_astname'] = 'WithStatement';\r\nWithStatement.prototype['_fields'] = [\r\n    'context_expr', function (n) { return n.context_expr; },\r\n    'optional_vars', function (n) { return n.optional_vars; },\r\n    'body', function (n) { return n.body; }\r\n];\r\nRaise.prototype['_astname'] = 'Raise';\r\nRaise.prototype['_fields'] = [\r\n    'type', function (n) { return n.type; },\r\n    'inst', function (n) { return n.inst; },\r\n    'tback', function (n) { return n.tback; }\r\n];\r\nTryExcept.prototype['_astname'] = 'TryExcept';\r\nTryExcept.prototype['_fields'] = [\r\n    'body', function (n) { return n.body; },\r\n    'handlers', function (n) { return n.handlers; },\r\n    'orelse', function (n) { return n.orelse; }\r\n];\r\nTryFinally.prototype['_astname'] = 'TryFinally';\r\nTryFinally.prototype['_fields'] = [\r\n    'body', function (n) { return n.body; },\r\n    'finalbody', function (n) { return n.finalbody; }\r\n];\r\nAssert.prototype['_astname'] = 'Assert';\r\nAssert.prototype['_fields'] = [\r\n    'test', function (n) { return n.test; },\r\n    'msg', function (n) { return n.msg; }\r\n];\r\nImportStatement.prototype['_astname'] = 'Import';\r\nImportStatement.prototype['_fields'] = [\r\n    'names', function (n) { return n.names; }\r\n];\r\nImportFrom.prototype['_astname'] = 'ImportFrom';\r\nImportFrom.prototype['_fields'] = [\r\n    'module', function (n) { return n.module.value; },\r\n    'names', function (n) { return n.names; },\r\n    'level', function (n) { return n.level; }\r\n];\r\nExec.prototype['_astname'] = 'Exec';\r\nExec.prototype['_fields'] = [\r\n    'body', function (n) { return n.body; },\r\n    'globals', function (n) { return n.globals; },\r\n    'locals', function (n) { return n.locals; }\r\n];\r\nGlobal.prototype['_astname'] = 'Global';\r\nGlobal.prototype['_fields'] = [\r\n    'names', function (n) { return n.names; }\r\n];\r\nNonLocal.prototype['_astname'] = 'NonLocal';\r\nNonLocal.prototype['_fields'] = [\r\n    'names', function (n) { return n.names; }\r\n];\r\nExpressionStatement.prototype['_astname'] = 'ExpressionStatement';\r\nExpressionStatement.prototype['_fields'] = [\r\n    'value', function (n) { return n.value; }\r\n];\r\nPass.prototype['_astname'] = 'Pass';\r\nPass.prototype['_fields'] = [];\r\nBreakStatement.prototype['_astname'] = 'BreakStatement';\r\nBreakStatement.prototype['_fields'] = [];\r\nContinueStatement.prototype['_astname'] = 'ContinueStatement';\r\nContinueStatement.prototype['_fields'] = [];\r\nBoolOp.prototype['_astname'] = 'BoolOp';\r\nBoolOp.prototype['_fields'] = [\r\n    'op', function (n) { return n.op; },\r\n    'values', function (n) { return n.values; }\r\n];\r\nBinOp.prototype['_astname'] = 'BinOp';\r\nBinOp.prototype['_fields'] = [\r\n    'lhs', function (n) { return n.lhs; },\r\n    'op', function (n) { return n.op; },\r\n    'rhs', function (n) { return n.rhs; }\r\n];\r\nUnaryOp.prototype['_astname'] = 'UnaryOp';\r\nUnaryOp.prototype['_fields'] = [\r\n    'op', function (n) { return n.op; },\r\n    'operand', function (n) { return n.operand; }\r\n];\r\nLambda.prototype['_astname'] = 'Lambda';\r\nLambda.prototype['_fields'] = [\r\n    'args', function (n) { return n.args; },\r\n    'body', function (n) { return n.body; }\r\n];\r\nIfExp.prototype['_astname'] = 'IfExp';\r\nIfExp.prototype['_fields'] = [\r\n    'test', function (n) { return n.test; },\r\n    'body', function (n) { return n.body; },\r\n    'orelse', function (n) { return n.orelse; }\r\n];\r\nDict.prototype['_astname'] = 'Dict';\r\nDict.prototype['_fields'] = [\r\n    'keys', function (n) { return n.keys; },\r\n    'values', function (n) { return n.values; }\r\n];\r\nListComp.prototype['_astname'] = 'ListComp';\r\nListComp.prototype['_fields'] = [\r\n    'elt', function (n) { return n.elt; },\r\n    'generators', function (n) { return n.generators; }\r\n];\r\nGeneratorExp.prototype['_astname'] = 'GeneratorExp';\r\nGeneratorExp.prototype['_fields'] = [\r\n    'elt', function (n) { return n.elt; },\r\n    'generators', function (n) { return n.generators; }\r\n];\r\nYield.prototype['_astname'] = 'Yield';\r\nYield.prototype['_fields'] = [\r\n    'value', function (n) { return n.value; }\r\n];\r\nCompare.prototype['_astname'] = 'Compare';\r\nCompare.prototype['_fields'] = [\r\n    'left', function (n) { return n.left; },\r\n    'ops', function (n) { return n.ops; },\r\n    'comparators', function (n) { return n.comparators; }\r\n];\r\nCall.prototype['_astname'] = 'Call';\r\nCall.prototype['_fields'] = [\r\n    'func', function (n) { return n.func; },\r\n    'args', function (n) { return n.args; },\r\n    'keywords', function (n) { return n.keywords; },\r\n    'starargs', function (n) { return n.starargs; },\r\n    'kwargs', function (n) { return n.kwargs; }\r\n];\r\nNum.prototype['_astname'] = 'Num';\r\nNum.prototype['_fields'] = [\r\n    'n', function (n) { return n.n.value; }\r\n];\r\nStr.prototype['_astname'] = 'Str';\r\nStr.prototype['_fields'] = [\r\n    's', function (n) { return n.s.value; }\r\n];\r\nAttribute.prototype['_astname'] = 'Attribute';\r\nAttribute.prototype['_fields'] = [\r\n    'value', function (n) { return n.value; },\r\n    'attr', function (n) { return n.attr.value; },\r\n    'ctx', function (n) { return n.ctx; }\r\n];\r\nSubscript.prototype['_astname'] = 'Subscript';\r\nSubscript.prototype['_fields'] = [\r\n    'value', function (n) { return n.value; },\r\n    'slice', function (n) { return n.slice; },\r\n    'ctx', function (n) { return n.ctx; }\r\n];\r\nName.prototype['_astname'] = 'Name';\r\nName.prototype['_fields'] = [\r\n    'id', function (n) { return n.id.value; },\r\n    'ctx', function (n) { return n.ctx; }\r\n];\r\nList.prototype['_astname'] = 'List';\r\nList.prototype['_fields'] = [\r\n    'elts', function (n) { return n.elts; },\r\n    'ctx', function (n) { return n.ctx; }\r\n];\r\nTuple.prototype['_astname'] = 'Tuple';\r\nTuple.prototype['_fields'] = [\r\n    'elts', function (n) { return n.elts; },\r\n    'ctx', function (n) { return n.ctx; }\r\n];\r\nLoad.prototype['_astname'] = 'Load';\r\nLoad.prototype['_isenum'] = true;\r\nStore.prototype['_astname'] = 'Store';\r\nStore.prototype['_isenum'] = true;\r\nDel.prototype['_astname'] = 'Del';\r\nDel.prototype['_isenum'] = true;\r\nAugLoad.prototype['_astname'] = 'AugLoad';\r\nAugLoad.prototype['_isenum'] = true;\r\nAugStore.prototype['_astname'] = 'AugStore';\r\nAugStore.prototype['_isenum'] = true;\r\nParam.prototype['_astname'] = 'Param';\r\nParam.prototype['_isenum'] = true;\r\nEllipsis.prototype['_astname'] = 'Ellipsis';\r\nEllipsis.prototype['_fields'] = [];\r\nSlice.prototype['_astname'] = 'Slice';\r\nSlice.prototype['_fields'] = [\r\n    'lower', function (n) { return n.lower; },\r\n    'upper', function (n) { return n.upper; },\r\n    'step', function (n) { return n.step; }\r\n];\r\nExtSlice.prototype['_astname'] = 'ExtSlice';\r\nExtSlice.prototype['_fields'] = [\r\n    'dims', function (n) { return n.dims; }\r\n];\r\nIndex.prototype['_astname'] = 'Index';\r\nIndex.prototype['_fields'] = [\r\n    'value', function (n) { return n.value; }\r\n];\r\nAnd.prototype['_astname'] = 'And';\r\nAnd.prototype['_isenum'] = true;\r\nOr.prototype['_astname'] = 'Or';\r\nOr.prototype['_isenum'] = true;\r\nAdd.prototype['_astname'] = 'Add';\r\nAdd.prototype['_isenum'] = true;\r\nSub.prototype['_astname'] = 'Sub';\r\nSub.prototype['_isenum'] = true;\r\nMult.prototype['_astname'] = 'Mult';\r\nMult.prototype['_isenum'] = true;\r\nDiv.prototype['_astname'] = 'Div';\r\nDiv.prototype['_isenum'] = true;\r\nMod.prototype['_astname'] = 'Mod';\r\nMod.prototype['_isenum'] = true;\r\nPow.prototype['_astname'] = 'Pow';\r\nPow.prototype['_isenum'] = true;\r\nLShift.prototype['_astname'] = 'LShift';\r\nLShift.prototype['_isenum'] = true;\r\nRShift.prototype['_astname'] = 'RShift';\r\nRShift.prototype['_isenum'] = true;\r\nBitOr.prototype['_astname'] = 'BitOr';\r\nBitOr.prototype['_isenum'] = true;\r\nBitXor.prototype['_astname'] = 'BitXor';\r\nBitXor.prototype['_isenum'] = true;\r\nBitAnd.prototype['_astname'] = 'BitAnd';\r\nBitAnd.prototype['_isenum'] = true;\r\nFloorDiv.prototype['_astname'] = 'FloorDiv';\r\nFloorDiv.prototype['_isenum'] = true;\r\nInvert.prototype['_astname'] = 'Invert';\r\nInvert.prototype['_isenum'] = true;\r\nNot.prototype['_astname'] = 'Not';\r\nNot.prototype['_isenum'] = true;\r\nUAdd.prototype['_astname'] = 'UAdd';\r\nUAdd.prototype['_isenum'] = true;\r\nUSub.prototype['_astname'] = 'USub';\r\nUSub.prototype['_isenum'] = true;\r\nEq.prototype['_astname'] = 'Eq';\r\nEq.prototype['_isenum'] = true;\r\nNotEq.prototype['_astname'] = 'NotEq';\r\nNotEq.prototype['_isenum'] = true;\r\nLt.prototype['_astname'] = 'Lt';\r\nLt.prototype['_isenum'] = true;\r\nLtE.prototype['_astname'] = 'LtE';\r\nLtE.prototype['_isenum'] = true;\r\nGt.prototype['_astname'] = 'Gt';\r\nGt.prototype['_isenum'] = true;\r\nGtE.prototype['_astname'] = 'GtE';\r\nGtE.prototype['_isenum'] = true;\r\nIs.prototype['_astname'] = 'Is';\r\nIs.prototype['_isenum'] = true;\r\nIsNot.prototype['_astname'] = 'IsNot';\r\nIsNot.prototype['_isenum'] = true;\r\nIn.prototype['_astname'] = 'In';\r\nIn.prototype['_isenum'] = true;\r\nNotIn.prototype['_astname'] = 'NotIn';\r\nNotIn.prototype['_isenum'] = true;\r\nComprehension.prototype['_astname'] = 'Comprehension';\r\nComprehension.prototype['_fields'] = [\r\n    'target', function (n) { return n.target; },\r\n    'iter', function (n) { return n.iter; },\r\n    'ifs', function (n) { return n.ifs; }\r\n];\r\nExceptHandler.prototype['_astname'] = 'ExceptHandler';\r\nExceptHandler.prototype['_fields'] = [\r\n    'type', function (n) { return n.type; },\r\n    'name', function (n) { return n.name; },\r\n    'body', function (n) { return n.body; }\r\n];\r\nArguments.prototype['_astname'] = 'Arguments';\r\nArguments.prototype['_fields'] = [\r\n    'args', function (n) { return n.args; },\r\n    'vararg', function (n) { return n.vararg; },\r\n    'kwarg', function (n) { return n.kwarg; },\r\n    'defaults', function (n) { return n.defaults; }\r\n];\r\nKeyword.prototype['_astname'] = 'Keyword';\r\nKeyword.prototype['_fields'] = [\r\n    'arg', function (n) { return n.arg; },\r\n    'value', function (n) { return n.value; }\r\n];\r\nAlias.prototype['_astname'] = 'Alias';\r\nAlias.prototype['_fields'] = [\r\n    'name', function (n) { return n.name.value; },\r\n    'asname', function (n) { return n.asname; }\r\n];\r\n","import { IDX_DFABT_DFA, IDX_DFABT_BEGIN_TOKENS } from './tables';\r\nimport { ARC_SYMBOL_LABEL, ARC_TO_STATE, OpMap, ParseTables } from './tables';\r\nimport { assert } from '../common/asserts';\r\nimport { Tokenizer } from './Tokenizer';\r\nimport { Tokens } from './Tokens';\r\nimport { tokenNames } from './tokenNames';\r\nimport { grammarName } from './grammarName';\r\nimport { parseError } from '../common/syntaxError';\r\nimport { Position } from '../common/Position';\r\nimport { Range } from '../common/Range';\r\nimport { splitSourceTextIntoLines } from './splitSourceTextIntoLines';\r\n// Dereference certain tokens for performance.\r\nvar T_COMMENT = Tokens.T_COMMENT;\r\nvar T_ENDMARKER = Tokens.T_ENDMARKER;\r\nvar T_NAME = Tokens.T_NAME;\r\nvar T_NL = Tokens.T_NL;\r\nvar T_NT_OFFSET = Tokens.T_NT_OFFSET;\r\nvar T_OP = Tokens.T_OP;\r\n// low level parser to a concrete syntax tree, derived from cpython's lib2to3\r\n// TODO: The parser does not report whitespace nodes.\r\n// It would be nice if there were an ignoreWhitespace option.\r\nvar Parser = (function () {\r\n    /**\r\n     *\r\n     */\r\n    function Parser(grammar) {\r\n        this.stack = [];\r\n        this.used_names = {};\r\n        this.grammar = grammar;\r\n    }\r\n    Parser.prototype.setup = function (start) {\r\n        start = start || this.grammar.start;\r\n        var newnode = {\r\n            type: start,\r\n            range: null,\r\n            value: null,\r\n            children: []\r\n        };\r\n        var stackentry = {\r\n            dfa: this.grammar.dfas[start][IDX_DFABT_DFA],\r\n            beginTokens: this.grammar.dfas[start][IDX_DFABT_BEGIN_TOKENS],\r\n            stateId: 0,\r\n            node: newnode\r\n        };\r\n        this.stack.push(stackentry);\r\n    };\r\n    /**\r\n     * Add a token; return true if we're done.\r\n     * @param type\r\n     * @param value\r\n     * @param context [start, end, line]\r\n     */\r\n    Parser.prototype.addtoken = function (type, value, begin, end, line) {\r\n        /**\r\n         * The symbol for the token being added.\r\n         */\r\n        var tokenSymbol = this.classify(type, value, begin, end, line);\r\n        /**\r\n         * Local variable for performance.\r\n         */\r\n        var stack = this.stack;\r\n        // More local variables for performance.\r\n        var g = this.grammar;\r\n        var dfas = g.dfas;\r\n        var labels = g.labels;\r\n        // This code is very performance sensitive.\r\n        OUTERWHILE: while (true) {\r\n            var stackTop = stack[stack.length - 1];\r\n            var dfa = stackTop.dfa;\r\n            // This is not being used. Why?\r\n            // let first = tp.dfa[DFA_SECOND];\r\n            var arcs = dfa[stackTop.stateId];\r\n            // look for a to-state with this label\r\n            for (var _i = 0, arcs_1 = arcs; _i < arcs_1.length; _i++) {\r\n                var arc = arcs_1[_i];\r\n                var arcSymbol = arc[ARC_SYMBOL_LABEL];\r\n                var newState = arc[ARC_TO_STATE];\r\n                var t = labels[arcSymbol][0];\r\n                // const v = labels[arcSymbol][1];\r\n                // console.lg(`t => ${t}, v => ${v}`);\r\n                if (tokenSymbol === arcSymbol) {\r\n                    this.shiftToken(type, value, newState, begin, end, line);\r\n                    // pop while we are in an accept-only state\r\n                    var stateId = newState;\r\n                    /**\r\n                     * Temporary variable to save a few CPU cycles.\r\n                     */\r\n                    var statesOfState = dfa[stateId];\r\n                    while (statesOfState.length === 1 && statesOfState[0][ARC_SYMBOL_LABEL] === 0 && statesOfState[0][ARC_TO_STATE] === stateId) {\r\n                        this.popNonTerminal();\r\n                        // Much of the time we won't be done so cache the stack length.\r\n                        var stackLength = stack.length;\r\n                        if (stackLength === 0) {\r\n                            // done!\r\n                            return true;\r\n                        }\r\n                        else {\r\n                            stackTop = stack[stackLength - 1];\r\n                            stateId = stackTop.stateId;\r\n                            dfa = stackTop.dfa;\r\n                            // first = stackTop.beginTokens;\r\n                            // first = top.dfa[1];\r\n                            statesOfState = dfa[stateId];\r\n                        }\r\n                    }\r\n                    // done with this token\r\n                    return false;\r\n                }\r\n                else if (isNonTerminal(t)) {\r\n                    var dfabt = dfas[t];\r\n                    var dfa_1 = dfabt[IDX_DFABT_DFA];\r\n                    var beginTokens = dfabt[IDX_DFABT_BEGIN_TOKENS];\r\n                    if (beginTokens.hasOwnProperty(tokenSymbol)) {\r\n                        this.pushNonTerminal(t, dfa_1, beginTokens, newState, begin, end, line);\r\n                        continue OUTERWHILE;\r\n                    }\r\n                }\r\n            }\r\n            // We've exhaused all the arcs for the for the state.\r\n            if (existsTransition(arcs, [T_ENDMARKER, stackTop.stateId])) {\r\n                // an accepting state, pop it and try something else\r\n                this.popNonTerminal();\r\n                if (stack.length === 0) {\r\n                    throw parseError(\"too much input\");\r\n                }\r\n            }\r\n            else {\r\n                var found = grammarName(stackTop.stateId);\r\n                // FIXME:\r\n                throw parseError(\"Unexpected \" + found + \" at \" + JSON.stringify([begin[0], begin[1] + 1]), begin, end);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Turn a token into a symbol (something that labels an arc in the DFA).\r\n     * The context is only used for error reporting.\r\n     * @param type\r\n     * @param value\r\n     * @param context [begin, end, line]\r\n     */\r\n    Parser.prototype.classify = function (type, value, begin, end, line) {\r\n        // Assertion commented out for efficiency.\r\n        assertTerminal(type);\r\n        var g = this.grammar;\r\n        if (type === T_NAME) {\r\n            this.used_names[value] = true;\r\n            var keywordToSymbol = g.keywords;\r\n            if (keywordToSymbol.hasOwnProperty(value)) {\r\n                var ilabel_1 = keywordToSymbol[value];\r\n                // assert(typeof ilabel === 'number', \"How can it not be?\");\r\n                return ilabel_1;\r\n            }\r\n        }\r\n        var tokenToSymbol = g.tokens;\r\n        var ilabel;\r\n        if (tokenToSymbol.hasOwnProperty(type)) {\r\n            ilabel = tokenToSymbol[type];\r\n        }\r\n        if (!ilabel) {\r\n            console.log(\"ilabel = \" + ilabel + \", type = \" + type + \", value = \" + value + \", begin = \" + JSON.stringify(begin) + \", end = \" + JSON.stringify(end));\r\n            throw parseError(\"bad token\", begin, end);\r\n        }\r\n        return ilabel;\r\n    };\r\n    /**\r\n     * Shifting a token (terminal).\r\n     * 1. A new node is created representing the token.\r\n     * 2. The new node is added as a child to the topmost node on the stack.\r\n     * 3. The state of the topmost element on the stack is updated to be the new state.\r\n     */\r\n    Parser.prototype.shiftToken = function (type, value, newState, begin, end, line) {\r\n        // assertTerminal(type);\r\n        // Local variable for efficiency.\r\n        var stack = this.stack;\r\n        /**\r\n         * The topmost element in the stack is affected by shifting a token.\r\n         */\r\n        var stackTop = stack[stack.length - 1];\r\n        var node = stackTop.node;\r\n        var newnode = {\r\n            type: type,\r\n            value: value,\r\n            range: new Range(new Position(begin[0], begin[1]), new Position(end[0], end[1])),\r\n            children: null\r\n        };\r\n        if (newnode && node.children) {\r\n            node.children.push(newnode);\r\n        }\r\n        stackTop.stateId = newState;\r\n    };\r\n    /**\r\n     * Push a non-terminal symbol onto the stack as a new node.\r\n     * 1. Update the state of the topmost element on the stack to be newState.\r\n     * 2. Push a new element onto the stack corresponding to the symbol.\r\n     * The new stack elements uses the newDfa and has state 0.\r\n     */\r\n    Parser.prototype.pushNonTerminal = function (type, dfa, beginTokens, newState, begin, end, line) {\r\n        // Based on how this function is called, there is really no need for this assertion.\r\n        // Retain it for now while it is not the performance bottleneck.\r\n        // assertNonTerminal(type);\r\n        // Local variable for efficiency.\r\n        var stack = this.stack;\r\n        var stackTop = stack[stack.length - 1];\r\n        stackTop.stateId = newState;\r\n        var beginPos = begin ? new Position(begin[0], begin[1]) : null;\r\n        var endPos = end ? new Position(end[0], end[1]) : null;\r\n        var newnode = { type: type, value: null, range: new Range(beginPos, endPos), children: [] };\r\n        // TODO: Is there a symbolic constant for the zero state?\r\n        stack.push({ dfa: dfa, beginTokens: beginTokens, stateId: 0, node: newnode });\r\n    };\r\n    /**\r\n     * Pop a nonterminal.\r\n     * Popping an element from the stack causes the node to be added to the children of the new top element.\r\n     * The exception is when the stack becomes empty, in which case the node becomes the root node.\r\n     */\r\n    Parser.prototype.popNonTerminal = function () {\r\n        // Local variable for efficiency.\r\n        var stack = this.stack;\r\n        var poppedElement = stack.pop();\r\n        if (poppedElement) {\r\n            var poppedNode = poppedElement.node;\r\n            // Remove this assertion only when it becomes a performance issue.\r\n            // assertNonTerminal(poppedNode.type);\r\n            if (poppedNode) {\r\n                /**\r\n                 * The length of the stack following the pop operation.\r\n                 */\r\n                var N = stack.length;\r\n                if (N !== 0) {\r\n                    var node = stack[N - 1].node;\r\n                    var children = node.children;\r\n                    if (children) {\r\n                        children.push(poppedNode);\r\n                    }\r\n                }\r\n                else {\r\n                    // If the length of the stack following the pop is zero then the popped element becomes the root node.\r\n                    this.rootNode = poppedNode;\r\n                    poppedNode.used_names = this.used_names;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return Parser;\r\n}());\r\n/**\r\n * FIXME: This is O(N). Can we do better?\r\n * Finds the specified\r\n * @param a An array of arrays where each element is an array of two integers.\r\n * @param obj An array containing two integers.\r\n */\r\nfunction existsTransition(arcs, obj) {\r\n    var i = arcs.length;\r\n    while (i--) {\r\n        var arc = arcs[i];\r\n        if (arc[ARC_SYMBOL_LABEL] === obj[ARC_SYMBOL_LABEL] && arc[ARC_TO_STATE] === obj[ARC_TO_STATE]) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * parser for interactive input. returns a function that should be called with\r\n * lines of input as they are entered. the function will return false\r\n * until the input is complete, when it will return the rootnode of the parse.\r\n *\r\n * @param style root of parse tree (optional)\r\n */\r\nfunction makeParser(sourceKind) {\r\n    if (sourceKind === undefined)\r\n        sourceKind = SourceKind.File;\r\n    // FIXME: Would be nice to get this typing locked down. Why does Grammar not match ParseTables?\r\n    var p = new Parser(ParseTables);\r\n    // TODO: Can we do this over the symbolic constants?\r\n    switch (sourceKind) {\r\n        case SourceKind.File: {\r\n            p.setup(ParseTables.sym.file_input);\r\n            break;\r\n        }\r\n        case SourceKind.Eval: {\r\n            p.setup(ParseTables.sym.eval_input);\r\n            break;\r\n        }\r\n        case SourceKind.Single: {\r\n            p.setup(ParseTables.sym.single_input);\r\n            break;\r\n        }\r\n        default: {\r\n            throw new Error(\"SourceKind must be one of File, Eval, or Single.\");\r\n        }\r\n    }\r\n    var lineno = 1;\r\n    var column = 0;\r\n    var prefix = \"\";\r\n    var tokenizer = new Tokenizer(sourceKind === SourceKind.Single, function tokenizerCallback(type, value, start, end, line) {\r\n        // var s_lineno = start[0];\r\n        // var s_column = start[1];\r\n        /*\r\n        if (s_lineno !== lineno && s_column !== column)\r\n        {\r\n            // todo; update prefix and line/col\r\n        }\r\n        */\r\n        if (type === T_COMMENT || type === T_NL) {\r\n            prefix += value;\r\n            lineno = end[0];\r\n            column = end[1];\r\n            if (value[value.length - 1] === \"\\n\") {\r\n                lineno += 1;\r\n                column = 0;\r\n            }\r\n            return undefined;\r\n        }\r\n        if (type === T_OP) {\r\n            type = OpMap[value];\r\n        }\r\n        // FIXME: We're creating an array object here for every token.\r\n        if (p.addtoken(type, value, start, end, line)) {\r\n            return true;\r\n        }\r\n        return undefined;\r\n    });\r\n    return function parseFunc(line) {\r\n        var ret = tokenizer.generateTokens(line);\r\n        if (ret) {\r\n            if (ret !== \"done\") {\r\n                throw parseError(\"incomplete input\");\r\n            }\r\n            return p.rootNode;\r\n        }\r\n        return false;\r\n    };\r\n}\r\n/**\r\n * Determines the starting point in the grammar for parsing the source.\r\n */\r\nexport var SourceKind;\r\n(function (SourceKind) {\r\n    /**\r\n     * Suitable for a module.\r\n     */\r\n    SourceKind[SourceKind[\"File\"] = 0] = \"File\";\r\n    /**\r\n     * Suitable for execution.\r\n     */\r\n    SourceKind[SourceKind[\"Eval\"] = 1] = \"Eval\";\r\n    /**\r\n     * Suitable for a REPL.\r\n     */\r\n    SourceKind[SourceKind[\"Single\"] = 2] = \"Single\";\r\n})(SourceKind || (SourceKind = {}));\r\nexport function parse(sourceText, sourceKind) {\r\n    if (sourceKind === void 0) { sourceKind = SourceKind.File; }\r\n    var parser = makeParser(sourceKind);\r\n    var lines = splitSourceTextIntoLines(sourceText);\r\n    // FIXME: Mixing the types this way is awkward for the consumer.\r\n    var ret = false;\r\n    for (var _i = 0, lines_1 = lines; _i < lines_1.length; _i++) {\r\n        var line = lines_1[_i];\r\n        ret = parser(line);\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Concrete Syntax Tree\r\n */\r\nexport function cstDump(parseTree) {\r\n    function parseTreeDump(n, indent) {\r\n        var ret = \"\";\r\n        if (isNonTerminal(n.type)) {\r\n            ret += indent + ParseTables.number2symbol[n.type] + \"\\n\";\r\n            if (n.children) {\r\n                for (var i = 0; i < n.children.length; ++i) {\r\n                    ret += parseTreeDump(n.children[i], \"  \" + indent);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            ret += indent + tokenNames[n.type] + \": \" + n.value + \"\\n\";\r\n        }\r\n        return ret;\r\n    }\r\n    return parseTreeDump(parseTree, \"\");\r\n}\r\n/**\r\n * Terminal symbols hsould be less than T_NT_OFFSET.\r\n * NT_OFFSET means non-terminal offset.\r\n */\r\nfunction assertTerminal(type) {\r\n    assert(type < T_NT_OFFSET, \"terminal symbols should be less than T_NT_OFFSET\");\r\n}\r\n/*\r\nfunction assertNonTerminal(type: number): void {\r\n    assert(isNonTerminal(type), \"non terminal symbols should be greater than or equal to T_NT_OFFSET\");\r\n}\r\n*/\r\nfunction isNonTerminal(type) {\r\n    return type >= T_NT_OFFSET;\r\n}\r\n","import { IDXLAST } from '../common/tree';\r\n/**\r\n * Prepare the source text into lines to feed to the `generateTokens` method of the tokenizer.\r\n */\r\nexport function splitSourceTextIntoLines(sourceText) {\r\n    var lines = [];\r\n    // Why do we normalize the sourceText in this manner?\r\n    if (sourceText.substr(IDXLAST(sourceText), 1) !== \"\\n\") {\r\n        sourceText += \"\\n\";\r\n    }\r\n    // Splitting this way will create a final line that is the zero-length string.\r\n    var pieces = sourceText.split(\"\\n\");\r\n    var N = pieces.length;\r\n    for (var i = 0; i < N; ++i) {\r\n        // We're adding back newline characters for all but the last line.\r\n        var line = pieces[i] + ((i === IDXLAST(pieces)) ? \"\" : \"\\n\");\r\n        lines.push(line);\r\n    }\r\n    return lines;\r\n}\r\n","import { assert } from './asserts';\r\n/**\r\n * Returns the number of children in the specified node.\r\n * Returns n.children.length\r\n */\r\nexport function NCH(n) {\r\n    assert(n !== undefined);\r\n    if (Array.isArray(n.children)) {\r\n        return n.children.length;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\nexport function CHILD(n, i) {\r\n    assert(i !== undefined && i >= 0);\r\n    return CHILDREN(n)[i];\r\n}\r\nexport function FIND(n, type) {\r\n    assert(type !== undefined);\r\n    var children = CHILDREN(n);\r\n    var N = children.length;\r\n    for (var i = 0; i < N; i++) {\r\n        var child = children[i];\r\n        if (child.type === type) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nexport function CHILDREN(n) {\r\n    assert(n !== undefined);\r\n    if (n.children) {\r\n        return n.children;\r\n    }\r\n    else {\r\n        throw new Error(\"node does not have any children\");\r\n    }\r\n}\r\nexport function IDXLAST(xs) {\r\n    return xs.length - 1;\r\n}\r\n/**\r\n * Returns the terminal nodes of the tree.\r\n */\r\nexport function TERMS(n) {\r\n    var childLength = NCH(n);\r\n    if (childLength === 0) {\r\n        return [n];\r\n    }\r\n    else {\r\n        var terminals = [];\r\n        for (var _i = 0, _a = CHILDREN(n); _i < _a.length; _i++) {\r\n            var child = _a[_i];\r\n            for (var _b = 0, _c = TERMS(child); _b < _c.length; _b++) {\r\n                var t = _c[_b];\r\n                terminals.push(t);\r\n            }\r\n        }\r\n        return terminals;\r\n    }\r\n}\r\n","import { assert } from './asserts';\r\nvar Range = (function () {\r\n    /**\r\n     *\r\n     */\r\n    function Range(begin, end) {\r\n        assert(begin, \"begin must be defined\");\r\n        assert(end, \"end must be defined\");\r\n        this.begin = begin;\r\n        this.end = end;\r\n    }\r\n    Range.prototype.toString = function () {\r\n        return this.begin + \" to \" + this.end;\r\n    };\r\n    return Range;\r\n}());\r\nexport { Range };\r\n","var Position = (function () {\r\n    /**\r\n     *\r\n     */\r\n    function Position(line, column) {\r\n        this.line = line;\r\n        this.column = column;\r\n    }\r\n    Position.prototype.toString = function () {\r\n        return \"[\" + this.line + \", \" + this.column + \"]\";\r\n    };\r\n    return Position;\r\n}());\r\nexport { Position };\r\nexport function positionComparator(a, b) {\r\n    if (a.line < b.line) {\r\n        return -1;\r\n    }\r\n    else if (a.line > b.line) {\r\n        return 1;\r\n    }\r\n    else {\r\n        if (a.column < b.column) {\r\n            return -1;\r\n        }\r\n        else if (a.column > b.column) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n}\r\n","import * as tslib_1 from \"tslib\";\r\nimport { assert } from './asserts';\r\nimport { isDef, isNumber, isString } from './base';\r\n/**\r\n * @param message\r\n * @param lineNumber\r\n */\r\nexport function syntaxError(message, range) {\r\n    assert(isString(message), \"message must be a string\");\r\n    if (isDef(range)) {\r\n        assert(isNumber(range.begin.line), \"lineNumber must be a number\");\r\n    }\r\n    var e = new SyntaxError(message /*, fileName*/);\r\n    if (typeof range.begin.line === 'number') {\r\n        e['lineNumber'] = range.begin.line;\r\n    }\r\n    return e;\r\n}\r\nvar ParseError = (function (_super) {\r\n    tslib_1.__extends(ParseError, _super);\r\n    function ParseError(message) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.name = 'ParseError';\r\n        return _this;\r\n    }\r\n    return ParseError;\r\n}(SyntaxError));\r\nexport { ParseError };\r\n/**\r\n * @param message\r\n * @param begin\r\n * @param end\r\n */\r\nexport function parseError(message, begin, end) {\r\n    var e = new ParseError(message);\r\n    // Copying from begin and end is important because they change for each token.\r\n    // Notice that the Line is 1-based, but that row is 0-based.\r\n    // Both column and Column are 0-based.\r\n    if (Array.isArray(begin)) {\r\n        e.begin = { row: begin[0] - 1, column: begin[1] };\r\n    }\r\n    if (Array.isArray(end)) {\r\n        e.end = { row: end[0] - 1, column: end[1] };\r\n    }\r\n    return e;\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}","import { ParseTables } from './tables';\r\nimport { tokenNames } from './tokenNames';\r\nexport function grammarName(type) {\r\n    var tokenName = tokenNames[type];\r\n    if (tokenName) {\r\n        return tokenName;\r\n    }\r\n    else {\r\n        return ParseTables.number2symbol[type];\r\n    }\r\n}\r\n","import { Tokens } from './Tokens';\r\n/**\r\n * Decodes of the tokens.\r\n * A mapping from the token number (symbol) to its human-readable name.\r\n */\r\nexport var tokenNames = {};\r\ntokenNames[Tokens.T_AMPER] = 'T_AMPER';\r\ntokenNames[Tokens.T_AMPEREQUAL] = 'T_AMPEREQUAL';\r\ntokenNames[Tokens.T_AT] = 'T_AT';\r\ntokenNames[Tokens.T_BACKQUOTE] = 'T_BACKQUOTE';\r\ntokenNames[Tokens.T_CIRCUMFLEX] = 'T_CIRCUMFLEX';\r\ntokenNames[Tokens.T_CIRCUMFLEXEQUAL] = 'T_CIRCUMFLEXEQUAL';\r\ntokenNames[Tokens.T_COLON] = 'T_COLON';\r\ntokenNames[Tokens.T_COMMA] = 'T_COMMA';\r\ntokenNames[Tokens.T_COMMENT] = 'T_COMMENT';\r\ntokenNames[Tokens.T_DEDENT] = 'T_DEDENT';\r\ntokenNames[Tokens.T_DOT] = 'T_DOT';\r\ntokenNames[Tokens.T_DOUBLESLASH] = 'T_DOUBLESLASH';\r\ntokenNames[Tokens.T_DOUBLESLASHEQUAL] = 'T_DOUBLESLASHEQUAL';\r\ntokenNames[Tokens.T_DOUBLESTAR] = 'T_DOUBLESTAR';\r\ntokenNames[Tokens.T_DOUBLESTAREQUAL] = 'T_DOUBLESTAREQUAL';\r\ntokenNames[Tokens.T_ENDMARKER] = 'T_ENDMARKER';\r\ntokenNames[Tokens.T_EQEQUAL] = 'T_EQEQUAL';\r\ntokenNames[Tokens.T_EQUAL] = 'T_EQUAL';\r\ntokenNames[Tokens.T_ERRORTOKEN] = 'T_ERRORTOKEN';\r\ntokenNames[Tokens.T_GREATER] = 'T_GREATER';\r\ntokenNames[Tokens.T_GREATEREQUAL] = 'T_GREATEREQUAL';\r\ntokenNames[Tokens.T_INDENT] = 'T_INDENT';\r\ntokenNames[Tokens.T_LBRACE] = 'T_LBRACE';\r\ntokenNames[Tokens.T_LEFTSHIFT] = 'T_LEFTSHIFT';\r\ntokenNames[Tokens.T_LEFTSHIFTEQUAL] = 'T_LEFTSHIFTEQUAL';\r\ntokenNames[Tokens.T_LESS] = 'T_LESS';\r\ntokenNames[Tokens.T_LESSEQUAL] = 'T_LESSEQUAL';\r\ntokenNames[Tokens.T_LPAR] = 'T_LPAR';\r\ntokenNames[Tokens.T_LSQB] = 'T_LSQB';\r\ntokenNames[Tokens.T_MINEQUAL] = 'T_MINEQUAL';\r\ntokenNames[Tokens.T_MINUS] = 'T_MINUS';\r\ntokenNames[Tokens.T_N_TOKENS] = 'T_N_TOKENS';\r\ntokenNames[Tokens.T_NAME] = 'T_NAME';\r\ntokenNames[Tokens.T_NEWLINE] = 'T_NEWLINE';\r\ntokenNames[Tokens.T_NL] = 'T_NL';\r\ntokenNames[Tokens.T_NOTEQUAL] = 'T_NOTEQUAL';\r\ntokenNames[Tokens.T_NT_OFFSET] = 'T_NT_OFFSET';\r\ntokenNames[Tokens.T_NUMBER] = 'T_NUMBER';\r\ntokenNames[Tokens.T_OP] = 'T_OP';\r\ntokenNames[Tokens.T_PERCENT] = 'T_PERCENT';\r\ntokenNames[Tokens.T_PERCENTEQUAL] = 'T_PERCENTEQUAL';\r\ntokenNames[Tokens.T_PLUS] = 'T_PLUS';\r\ntokenNames[Tokens.T_PLUSEQUAL] = 'T_PLUSEQUAL';\r\ntokenNames[Tokens.T_RARROW] = 'T_RARROW';\r\ntokenNames[Tokens.T_RBRACE] = 'T_RBRACE';\r\ntokenNames[Tokens.T_RIGHTSHIFT] = 'T_RIGHTSHIFT';\r\ntokenNames[Tokens.T_RPAR] = 'T_RPAR';\r\ntokenNames[Tokens.T_RSQB] = 'T_RSQB';\r\ntokenNames[Tokens.T_SEMI] = 'T_SEMI';\r\ntokenNames[Tokens.T_SLASH] = 'T_SLASH';\r\ntokenNames[Tokens.T_SLASHEQUAL] = 'T_SLASHEQUAL';\r\ntokenNames[Tokens.T_STAR] = 'T_STAR';\r\ntokenNames[Tokens.T_STAREQUAL] = 'T_STAREQUAL';\r\ntokenNames[Tokens.T_STRING] = 'T_STRING';\r\ntokenNames[Tokens.T_TILDE] = 'T_TILDE';\r\ntokenNames[Tokens.T_VBAR] = 'T_VBAR';\r\ntokenNames[Tokens.T_VBAREQUAL] = 'T_VBAREQUAL';\r\n","import { assert } from '../common/asserts';\r\nimport { TokenError } from '../common/TokenError';\r\nimport { Tokens } from './Tokens';\r\n// Cache a few tokens for performance.\r\nvar T_COMMENT = Tokens.T_COMMENT;\r\nvar T_DEDENT = Tokens.T_DEDENT;\r\nvar T_ENDMARKER = Tokens.T_ENDMARKER;\r\nvar T_ERRORTOKEN = Tokens.T_ERRORTOKEN;\r\nvar T_INDENT = Tokens.T_INDENT;\r\nvar T_NAME = Tokens.T_NAME;\r\nvar T_NEWLINE = Tokens.T_NEWLINE;\r\nvar T_NL = Tokens.T_NL;\r\nvar T_NUMBER = Tokens.T_NUMBER;\r\nvar T_OP = Tokens.T_OP;\r\nvar T_STRING = Tokens.T_STRING;\r\n/* we have to use string and ctor to be able to build patterns up. + on /.../\r\n    * does something strange. */\r\n// const Whitespace = \"[ \\\\f\\\\t]*\";\r\nvar Comment_ = \"#[^\\\\r\\\\n]*\";\r\nvar Ident = \"[a-zA-Z_]\\\\w*\";\r\nvar Binnumber = '0[bB][01]*';\r\nvar Hexnumber = '0[xX][\\\\da-fA-F]*[lL]?';\r\nvar Octnumber = '0[oO]?[0-7]*[lL]?';\r\nvar Decnumber = '[1-9]\\\\d*[lL]?';\r\nvar Intnumber = group(Binnumber, Hexnumber, Octnumber, Decnumber);\r\nvar Exponent = \"[eE][-+]?\\\\d+\";\r\nvar Pointfloat = group(\"\\\\d+\\\\.\\\\d*\", \"\\\\.\\\\d+\") + maybe(Exponent);\r\nvar Expfloat = '\\\\d+' + Exponent;\r\nvar Floatnumber = group(Pointfloat, Expfloat);\r\nvar Imagnumber = group(\"\\\\d+[jJ]\", Floatnumber + \"[jJ]\");\r\nvar Number_ = group(Imagnumber, Floatnumber, Intnumber);\r\n// tail end of ' string\r\nvar Single = \"^[^'\\\\\\\\]*(?:\\\\\\\\.[^'\\\\\\\\]*)*'\";\r\n// tail end of \" string\r\nvar Double_ = '^[^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*\"';\r\n// tail end of ''' string\r\nvar Single3 = \"[^'\\\\\\\\]*(?:(?:\\\\\\\\.|'(?!''))[^'\\\\\\\\]*)*'''\";\r\n// tail end of \"\"\" string\r\nvar Double3 = '[^\"\\\\\\\\]*(?:(?:\\\\\\\\.|\"(?!\"\"))[^\"\\\\\\\\]*)*\"\"\"';\r\nvar Triple = group(\"[ubUB]?[rR]?'''\", '[ubUB]?[rR]?\"\"\"');\r\n// const String_ = group(\"[uU]?[rR]?'[^\\\\n'\\\\\\\\]*(?:\\\\\\\\.[^\\\\n'\\\\\\\\]*)*'\", '[uU]?[rR]?\"[^\\\\n\"\\\\\\\\]*(?:\\\\\\\\.[^\\\\n\"\\\\\\\\]*)*\"');\r\n// Because of leftmost-then-longest match semantics, be sure to put the\r\n// longest operators first (e.g., if = came before ==, == would get\r\n// recognized as two instances of =).\r\nvar Operator = group(\"\\\\*\\\\*=?\", \">>=?\", \"<<=?\", \"<>\", \"!=\", \"//=?\", \"->\", \"[+\\\\-*/%&|^=<>]=?\", \"~\");\r\nvar Bracket = '[\\\\][(){}]';\r\nvar Special = group('\\\\r?\\\\n', '[:;.,`@]');\r\nvar Funny = group(Operator, Bracket, Special);\r\nvar ContStr = group(\"[uUbB]?[rR]?'[^\\\\n'\\\\\\\\]*(?:\\\\\\\\.[^\\\\n'\\\\\\\\]*)*\" +\r\n    group(\"'\", '\\\\\\\\\\\\r?\\\\n'), '[uUbB]?[rR]?\"[^\\\\n\"\\\\\\\\]*(?:\\\\\\\\.[^\\\\n\"\\\\\\\\]*)*' +\r\n    group('\"', '\\\\\\\\\\\\r?\\\\n'));\r\nvar PseudoExtras = group('\\\\\\\\\\\\r?\\\\n', Comment_, Triple);\r\n// Need to prefix with \"^\" as we only want to match what's next\r\nvar PseudoToken = \"^\" + group(PseudoExtras, Number_, Funny, ContStr, Ident);\r\nvar pseudoprog = new RegExp(PseudoToken);\r\nvar single3prog = new RegExp(Single3, \"g\");\r\nvar double3prog = new RegExp(Double3, \"g\");\r\nvar endprogs = {\r\n    \"'\": new RegExp(Single, \"g\"), '\"': new RegExp(Double_, \"g\"),\r\n    \"'''\": single3prog, '\"\"\"': double3prog,\r\n    \"r'''\": single3prog, 'r\"\"\"': double3prog,\r\n    \"u'''\": single3prog, 'u\"\"\"': double3prog,\r\n    \"b'''\": single3prog, 'b\"\"\"': double3prog,\r\n    \"ur'''\": single3prog, 'ur\"\"\"': double3prog,\r\n    \"br'''\": single3prog, 'br\"\"\"': double3prog,\r\n    \"R'''\": single3prog, 'R\"\"\"': double3prog,\r\n    \"U'''\": single3prog, 'U\"\"\"': double3prog,\r\n    \"B'''\": single3prog, 'B\"\"\"': double3prog,\r\n    \"uR'''\": single3prog, 'uR\"\"\"': double3prog,\r\n    \"Ur'''\": single3prog, 'Ur\"\"\"': double3prog,\r\n    \"UR'''\": single3prog, 'UR\"\"\"': double3prog,\r\n    \"bR'''\": single3prog, 'bR\"\"\"': double3prog,\r\n    \"Br'''\": single3prog, 'Br\"\"\"': double3prog,\r\n    \"BR'''\": single3prog, 'BR\"\"\"': double3prog,\r\n    'r': null, 'R': null,\r\n    'u': null, 'U': null,\r\n    'b': null, 'B': null\r\n};\r\nvar triple_quoted = {\r\n    \"'''\": true, '\"\"\"': true,\r\n    \"r'''\": true, 'r\"\"\"': true, \"R'''\": true, 'R\"\"\"': true,\r\n    \"u'''\": true, 'u\"\"\"': true, \"U'''\": true, 'U\"\"\"': true,\r\n    \"b'''\": true, 'b\"\"\"': true, \"B'''\": true, 'B\"\"\"': true,\r\n    \"ur'''\": true, 'ur\"\"\"': true, \"Ur'''\": true, 'Ur\"\"\"': true,\r\n    \"uR'''\": true, 'uR\"\"\"': true, \"UR'''\": true, 'UR\"\"\"': true,\r\n    \"br'''\": true, 'br\"\"\"': true, \"Br'''\": true, 'Br\"\"\"': true,\r\n    \"bR'''\": true, 'bR\"\"\"': true, \"BR'''\": true, 'BR\"\"\"': true\r\n};\r\nvar single_quoted = {\r\n    \"'\": true, '\"': true,\r\n    \"r'\": true, 'r\"': true, \"R'\": true, 'R\"': true,\r\n    \"u'\": true, 'u\"': true, \"U'\": true, 'U\"': true,\r\n    \"b'\": true, 'b\"': true, \"B'\": true, 'B\"': true,\r\n    \"ur'\": true, 'ur\"': true, \"Ur'\": true, 'Ur\"': true,\r\n    \"uR'\": true, 'uR\"': true, \"UR'\": true, 'UR\"': true,\r\n    \"br'\": true, 'br\"': true, \"Br'\": true, 'Br\"': true,\r\n    \"bR'\": true, 'bR\"': true, \"BR'\": true, 'BR\"': true\r\n};\r\nvar tabsize = 8;\r\nvar NAMECHARS = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_';\r\nvar NUMCHARS = '0123456789';\r\n/**\r\n * For performance, let V8 know the size of an array.\r\n * The first element is the line number.\r\n * The line number is 1-based. This is intuitive because it maps to the way we think about line numbers.\r\n * The second element is the column.\r\n * The column is 0-based. This works well because it is the standard index for accessing strings.\r\n */\r\n/**\r\n * The index of the line in the LineColumn array.\r\n */\r\nvar LINE = 0;\r\n/**\r\n * The index of the column in the LineColumn array.\r\n */\r\nvar COLUMN = 1;\r\nexport var Done = 'done';\r\nexport var Failed = 'failed';\r\n/**\r\n * This is a port of tokenize.py by Ka-Ping Yee.\r\n *\r\n * each call to readline should return one line of input as a string, or\r\n * undefined if it's finished.\r\n *\r\n * callback is called for each token with 5 args:\r\n * 1. the token type\r\n * 2. the token string\r\n * 3. [ start_row, start_col ]\r\n * 4. [ end_row, end_col ]\r\n * 5. logical line where the token was found, including continuation lines\r\n *\r\n * callback can return true to abort.\r\n */\r\nvar Tokenizer = (function () {\r\n    /**\r\n     *\r\n     */\r\n    function Tokenizer(interactive, callback) {\r\n        this.callback = callback;\r\n        /**\r\n         * Cache of the beginning of a token.\r\n         * This will change by token so consumers must copy the values out.\r\n         */\r\n        this.begin = [-1, -1];\r\n        /**\r\n         * Cache of the end of a token.\r\n         * This will change by token so consumers must copy the values out.\r\n         */\r\n        this.end = [-1, -1];\r\n        /**\r\n         * The line number. This must be copied into the begin[LINE] and end[LINE] properties.\r\n         */\r\n        this.lnum = 0;\r\n        this.parenlev = 0;\r\n        this.strstart = [-1, -1];\r\n        this.callback = callback;\r\n        this.continued = false;\r\n        this.contstr = '';\r\n        this.needcont = false;\r\n        this.contline = undefined;\r\n        this.indents = [0];\r\n        this.endprog = /.*/;\r\n        this.interactive = interactive;\r\n        this.doneFunc = function doneOrFailed() {\r\n            var begin = this.begin;\r\n            var end = this.end;\r\n            begin[LINE] = end[LINE] = this.lnum;\r\n            begin[COLUMN] = end[COLUMN] = 0;\r\n            var N = this.indents.length;\r\n            for (var i = 1; i < N; ++i) {\r\n                if (callback(T_DEDENT, '', begin, end, '')) {\r\n                    return Done;\r\n                }\r\n            }\r\n            if (callback(T_ENDMARKER, '', begin, end, '')) {\r\n                return Done;\r\n            }\r\n            return Failed;\r\n        };\r\n    }\r\n    /**\r\n     * @param line\r\n     * @return 'done' or 'failed' or true?\r\n     */\r\n    Tokenizer.prototype.generateTokens = function (line) {\r\n        var endmatch;\r\n        var column;\r\n        var endIndex;\r\n        if (!line) {\r\n            line = '';\r\n        }\r\n        this.lnum += 1;\r\n        var pos = 0;\r\n        var max = line.length;\r\n        /**\r\n         * Local variable for performance and brevity.\r\n         */\r\n        var callback = this.callback;\r\n        var begin = this.begin;\r\n        begin[LINE] = this.lnum;\r\n        var end = this.end;\r\n        end[LINE] = this.lnum;\r\n        if (this.contstr.length > 0) {\r\n            if (!line) {\r\n                throw new TokenError(\"EOF in multi-line string\", this.strstart[LINE], this.strstart[COLUMN]);\r\n            }\r\n            this.endprog.lastIndex = 0;\r\n            endmatch = this.endprog.test(line);\r\n            if (endmatch) {\r\n                pos = endIndex = this.endprog.lastIndex;\r\n                end[COLUMN] = endIndex;\r\n                if (callback(T_STRING, this.contstr + line.substring(0, endIndex), this.strstart, end, this.contline + line)) {\r\n                    return Done;\r\n                }\r\n                this.contstr = '';\r\n                this.needcont = false;\r\n                this.contline = undefined;\r\n            }\r\n            else if (this.needcont && line.substring(line.length - 2) !== \"\\\\\\n\" && line.substring(line.length - 3) !== \"\\\\\\r\\n\") {\r\n                // Either contline is a string or the callback must allow undefined.\r\n                assert(typeof this.contline === 'string');\r\n                end[COLUMN] = line.length;\r\n                if (callback(T_ERRORTOKEN, this.contstr + line, this.strstart, end, this.contline)) {\r\n                    return Done;\r\n                }\r\n                this.contstr = '';\r\n                this.contline = undefined;\r\n                return false;\r\n            }\r\n            else {\r\n                this.contstr += line;\r\n                this.contline = this.contline + line;\r\n                return false;\r\n            }\r\n        }\r\n        else if (this.parenlev === 0 && !this.continued) {\r\n            if (!line)\r\n                return this.doneFunc();\r\n            column = 0;\r\n            while (pos < max) {\r\n                var ch = line.charAt(pos);\r\n                if (ch === ' ') {\r\n                    column += 1;\r\n                }\r\n                else if (ch === '\\t') {\r\n                    column = (column / tabsize + 1) * tabsize;\r\n                }\r\n                else if (ch === '\\f') {\r\n                    column = 0;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n                pos = pos + 1;\r\n            }\r\n            if (pos === max)\r\n                return this.doneFunc();\r\n            if (\"#\\r\\n\".indexOf(line.charAt(pos)) !== -1) {\r\n                if (line.charAt(pos) === '#') {\r\n                    var comment_token = rstrip(line.substring(pos), '\\r\\n');\r\n                    var nl_pos = pos + comment_token.length;\r\n                    begin[COLUMN] = pos;\r\n                    end[COLUMN] = nl_pos;\r\n                    if (callback(T_COMMENT, comment_token, begin, end, line)) {\r\n                        return Done;\r\n                    }\r\n                    begin[COLUMN] = nl_pos;\r\n                    end[COLUMN] = line.length;\r\n                    if (callback(T_NL, line.substring(nl_pos), begin, end, line)) {\r\n                        return Done;\r\n                    }\r\n                    return false;\r\n                }\r\n                else {\r\n                    begin[COLUMN] = pos;\r\n                    end[COLUMN] = line.length;\r\n                    if (callback(T_NL, line.substring(pos), begin, end, line)) {\r\n                        return Done;\r\n                    }\r\n                    if (!this.interactive)\r\n                        return false;\r\n                }\r\n            }\r\n            if (column > this.indents[this.indents.length - 1]) {\r\n                this.indents.push(column);\r\n                begin[COLUMN] = 0;\r\n                end[COLUMN] = pos;\r\n                if (callback(T_INDENT, line.substring(0, pos), begin, end, line)) {\r\n                    return Done;\r\n                }\r\n            }\r\n            while (column < this.indents[this.indents.length - 1]) {\r\n                if (!contains(this.indents, column)) {\r\n                    begin[COLUMN] = 0;\r\n                    end[COLUMN] = pos;\r\n                    throw indentationError(\"unindent does not match any outer indentation level\", begin, end, line);\r\n                }\r\n                this.indents.splice(this.indents.length - 1, 1);\r\n                begin[COLUMN] = pos;\r\n                end[COLUMN] = pos;\r\n                if (callback(T_DEDENT, '', begin, end, line)) {\r\n                    return Done;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (!line) {\r\n                throw new TokenError(\"EOF in multi-line statement\", this.lnum, 0);\r\n            }\r\n            this.continued = false;\r\n        }\r\n        while (pos < max) {\r\n            // js regexes don't return any info about matches, other than the\r\n            // content. we'd like to put a \\w+ before pseudomatch, but then we\r\n            // can't get any data\r\n            var capos = line.charAt(pos);\r\n            while (capos === ' ' || capos === '\\f' || capos === '\\t') {\r\n                pos += 1;\r\n                capos = line.charAt(pos);\r\n            }\r\n            pseudoprog.lastIndex = 0;\r\n            var pseudomatch = pseudoprog.exec(line.substring(pos));\r\n            if (pseudomatch) {\r\n                var startIndex = pos;\r\n                endIndex = startIndex + pseudomatch[1].length;\r\n                begin[COLUMN] = startIndex;\r\n                end[COLUMN] = endIndex;\r\n                pos = endIndex;\r\n                var token = line.substring(startIndex, endIndex);\r\n                var initial = line.charAt(startIndex);\r\n                if (NUMCHARS.indexOf(initial) !== -1 || (initial === '.' && token !== '.')) {\r\n                    if (callback(T_NUMBER, token, begin, end, line)) {\r\n                        return Done;\r\n                    }\r\n                }\r\n                else if (initial === '\\r' || initial === '\\n') {\r\n                    var newl = T_NEWLINE;\r\n                    if (this.parenlev > 0)\r\n                        newl = T_NL;\r\n                    if (callback(newl, token, begin, end, line)) {\r\n                        return Done;\r\n                    }\r\n                }\r\n                else if (initial === '#') {\r\n                    if (callback(T_COMMENT, token, begin, end, line)) {\r\n                        return Done;\r\n                    }\r\n                }\r\n                else if (triple_quoted.hasOwnProperty(token)) {\r\n                    this.endprog = endprogs[token];\r\n                    this.endprog.lastIndex = 0;\r\n                    endmatch = this.endprog.test(line.substring(pos));\r\n                    if (endmatch) {\r\n                        pos = this.endprog.lastIndex + pos;\r\n                        var token_1 = line.substring(startIndex, pos);\r\n                        end[COLUMN] = pos;\r\n                        if (callback(T_STRING, token_1, begin, end, line)) {\r\n                            return Done;\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.strstart[LINE] = this.lnum;\r\n                        this.strstart[COLUMN] = startIndex;\r\n                        this.contstr = line.substring(startIndex);\r\n                        this.contline = line;\r\n                        return false;\r\n                    }\r\n                }\r\n                else if (single_quoted.hasOwnProperty(initial) ||\r\n                    single_quoted.hasOwnProperty(token.substring(0, 2)) ||\r\n                    single_quoted.hasOwnProperty(token.substring(0, 3))) {\r\n                    if (token[token.length - 1] === '\\n') {\r\n                        this.endprog = endprogs[initial] || endprogs[token[1]] || endprogs[token[2]];\r\n                        assert(this.endprog instanceof RegExp);\r\n                        this.contstr = line.substring(startIndex);\r\n                        this.needcont = true;\r\n                        this.contline = line;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        if (callback(T_STRING, token, begin, end, line)) {\r\n                            return Done;\r\n                        }\r\n                    }\r\n                }\r\n                else if (NAMECHARS.indexOf(initial) !== -1) {\r\n                    if (callback(T_NAME, token, begin, end, line)) {\r\n                        return Done;\r\n                    }\r\n                }\r\n                else if (initial === '\\\\') {\r\n                    end[COLUMN] = pos;\r\n                    if (callback(T_NL, token, begin, end, line)) {\r\n                        return Done;\r\n                    }\r\n                    this.continued = true;\r\n                }\r\n                else {\r\n                    if ('([{'.indexOf(initial) !== -1) {\r\n                        this.parenlev += 1;\r\n                    }\r\n                    else if (')]}'.indexOf(initial) !== -1) {\r\n                        this.parenlev -= 1;\r\n                    }\r\n                    if (callback(T_OP, token, begin, end, line)) {\r\n                        return Done;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                begin[COLUMN] = pos;\r\n                end[COLUMN] = pos + 1;\r\n                if (callback(T_ERRORTOKEN, line.charAt(pos), begin, end, line)) {\r\n                    return Done;\r\n                }\r\n                pos += 1;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    return Tokenizer;\r\n}());\r\nexport { Tokenizer };\r\nfunction group(x, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\r\n    var args = Array.prototype.slice.call(arguments);\r\n    return '(' + args.join('|') + ')';\r\n}\r\nfunction maybe(x) { return group.apply(null, arguments) + \"?\"; }\r\nfunction contains(a, obj) {\r\n    var i = a.length;\r\n    while (i--) {\r\n        if (a[i] === obj) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction rstrip(input, what) {\r\n    var i;\r\n    for (i = input.length; i > 0; --i) {\r\n        if (what.indexOf(input.charAt(i - 1)) === -1)\r\n            break;\r\n    }\r\n    return input.substring(0, i);\r\n}\r\n/**\r\n * @param message\r\n * @param begin\r\n * @param end\r\n * @param {string|undefined} text\r\n */\r\nfunction indentationError(message, begin, end, text) {\r\n    assert(Array.isArray(begin), \"begin must be an Array\");\r\n    assert(Array.isArray(end), \"end must be an Array\");\r\n    var e = new SyntaxError(message /*, fileName*/);\r\n    e.name = \"IndentationError\";\r\n    if (begin) {\r\n        e['lineNumber'] = begin[LINE];\r\n        e['columnNumber'] = begin[COLUMN];\r\n    }\r\n    return e;\r\n}\r\n","import { assert } from './asserts';\r\nimport { isNumber, isString } from './base';\r\n/**\r\n *\r\n */\r\nvar TokenError = (function () {\r\n    function TokenError(message, lineNumber, columnNumber) {\r\n        assert(isString(message), \"message must be a string\");\r\n        assert(isNumber(lineNumber), \"lineNumber must be a number\");\r\n        assert(isNumber(columnNumber), \"columnNumber must be a number\");\r\n        this.name = \"TokenError\";\r\n        this.message = message;\r\n        this.lineNumber = lineNumber;\r\n        this.columnNumber = columnNumber;\r\n    }\r\n    return TokenError;\r\n}());\r\nexport { TokenError };\r\n","/**\r\n * Null function used for default values of callbacks, etc.\r\n */\r\nexport function nullFunction() { }\r\n/**\r\n * When defining a class Foo with an abstract method bar(), you can do:\r\n * Foo.prototype.bar = base.abstractMethod\r\n *\r\n * Now if a subclass of Foo fails to override bar(), an error will be thrown\r\n * when bar() is invoked.\r\n *\r\n * Note: This does not take the name of the function to override as an argument\r\n * because that would make it more difficult to obfuscate our JavaScript code.\r\n *\r\n * @type {!Function}\r\n * @throws {Error} when invoked to indicate the method should be overridden.\r\n */\r\nexport function abstractMethod() {\r\n    throw Error('unimplemented abstract method');\r\n}\r\n// ==============================================================================\r\n// Language Enhancements\r\n// ==============================================================================\r\n/**\r\n * This is a \"fixed\" version of the typeof operator.  It differs from the typeof\r\n * operator in such a way that null returns 'null' and arrays return 'array'.\r\n * @param {*} value The value to get the type of.\r\n * @return {string} The name of the type.\r\n */\r\nexport function typeOf(value) {\r\n    var s = typeof value;\r\n    if (s === 'object') {\r\n        if (value) {\r\n            // Check these first, so we can avoid calling Object.prototype.toString if\r\n            // possible.\r\n            //\r\n            // IE improperly marshals tyepof across execution contexts, but a\r\n            // cross-context object will still return false for \"instanceof Object\".\r\n            if (value instanceof Array) {\r\n                return 'array';\r\n            }\r\n            else if (value instanceof Object) {\r\n                return s;\r\n            }\r\n            // HACK: In order to use an Object prototype method on the arbitrary\r\n            //   value, the compiler requires the value be cast to type Object,\r\n            //   even though the ECMA spec explicitly allows it.\r\n            var className = Object.prototype.toString.call(\r\n            /** @type {Object} */ (value));\r\n            // In Firefox 3.6, attempting to access iframe window objects' length\r\n            // property throws an NS_ERROR_FAILURE, so we need to special-case it\r\n            // here.\r\n            if (className === '[object Window]') {\r\n                return 'object';\r\n            }\r\n            // We cannot always use constructor == Array or instanceof Array because\r\n            // different frames have different Array objects. In IE6, if the iframe\r\n            // where the array was created is destroyed, the array loses its\r\n            // prototype. Then dereferencing val.splice here throws an exception, so\r\n            // we can't use base.isFunction. Calling typeof directly returns 'unknown'\r\n            // so that will work. In this case, this function will return false and\r\n            // most array functions will still work because the array is still\r\n            // array-like (supports length and []) even though it has lost its\r\n            // prototype.\r\n            // Mark Miller noticed that Object.prototype.toString\r\n            // allows access to the unforgeable [[Class]] property.\r\n            //  15.2.4.2 Object.prototype.toString ( )\r\n            //  When the toString method is called, the following steps are taken:\r\n            //      1. Get the [[Class]] property of this object.\r\n            //      2. Compute a string value by concatenating the three strings\r\n            //         \"[object \", Result(1), and \"]\".\r\n            //      3. Return Result(2).\r\n            // and this behavior survives the destruction of the execution context.\r\n            if ((className === '[object Array]' ||\r\n                // In IE all non value types are wrapped as objects across window\r\n                // boundaries (not iframe though) so we have to do object detection\r\n                // for this edge case.\r\n                typeof value.length === 'number' &&\r\n                    typeof value.splice !== 'undefined' &&\r\n                    typeof value.propertyIsEnumerable !== 'undefined' &&\r\n                    !value.propertyIsEnumerable('splice'))) {\r\n                return 'array';\r\n            }\r\n            // HACK: There is still an array case that fails.\r\n            //     function ArrayImpostor() {}\r\n            //     ArrayImpostor.prototype = [];\r\n            //     var impostor = new ArrayImpostor;\r\n            // this can be fixed by getting rid of the fast path\r\n            // (value instanceof Array) and solely relying on\r\n            // (value && Object.prototype.toString.vall(value) === '[object Array]')\r\n            // but that would require many more function calls and is not warranted\r\n            // unless closure code is receiving objects from untrusted sources.\r\n            // IE in cross-window calls does not correctly marshal the function type\r\n            // (it appears just as an object) so we cannot use just typeof val ==\r\n            // 'function'. However, if the object has a call property, it is a\r\n            // function.\r\n            if ((className === '[object Function]' ||\r\n                typeof value.call !== 'undefined' &&\r\n                    typeof value.propertyIsEnumerable !== 'undefined' &&\r\n                    !value.propertyIsEnumerable('call'))) {\r\n                return 'function';\r\n            }\r\n        }\r\n        else {\r\n            return 'null';\r\n        }\r\n    }\r\n    else if (s === 'function' && typeof value.call === 'undefined') {\r\n        // In Safari typeof nodeList returns 'function', and on Firefox typeof\r\n        // behaves similarly for HTML{Applet,Embed,Object}, Elements and RegExps. We\r\n        // would like to return object for those and we can detect an invalid\r\n        // function by making sure that the function object has a call method.\r\n        return 'object';\r\n    }\r\n    return s;\r\n}\r\n/**\r\n * Returns true if the specified value is not undefined.\r\n * WARNING: Do not use this to test if an object has a property. Use the in\r\n * operator instead.  Additionally, this function assumes that the global\r\n * undefined variable has not been redefined.\r\n * @param {*} val Variable to test.\r\n * @return {boolean} Whether variable is defined.\r\n */\r\nexport function isDef(val) {\r\n    return val !== undefined;\r\n}\r\n/**\r\n * Returns true if the specified value is null.\r\n * @param {*} val Variable to test.\r\n * @return {boolean} Whether variable is null.\r\n */\r\nexport function isNull(val) {\r\n    return val === null;\r\n}\r\n/**\r\n * Returns true if the specified value is defined and not null.\r\n * @param {*} val Variable to test.\r\n * @return {boolean} Whether variable is defined and not null.\r\n */\r\nexport function isDefAndNotNull(val) {\r\n    // Note that undefined == null.\r\n    return val != null;\r\n}\r\n/**\r\n * Returns true if the specified value is an array.\r\n * @param {*} val Variable to test.\r\n * @return {boolean} Whether variable is an array.\r\n */\r\nexport function isArray(val) {\r\n    return typeOf(val) === 'array';\r\n}\r\n/**\r\n * Returns true if the object looks like a Date. To qualify as Date-like the\r\n * value needs to be an object and have a getFullYear() function.\r\n * @param {*} val Variable to test.\r\n * @return {boolean} Whether variable is a like a Date.\r\n */\r\nexport function isDateLike(val) {\r\n    return isObject(val) && typeof val.getFullYear === 'function';\r\n}\r\n/**\r\n * Returns true if the specified value is a string.\r\n * @param {*} val Variable to test.\r\n * @return {boolean} Whether variable is a string.\r\n */\r\nexport function isString(val) {\r\n    return typeof val === 'string';\r\n}\r\n/**\r\n * Returns true if the specified value is a boolean.\r\n * @param {*} val Variable to test.\r\n * @return {boolean} Whether variable is boolean.\r\n */\r\nexport function isBoolean(val) {\r\n    return typeof val === 'boolean';\r\n}\r\n/**\r\n * Returns true if the specified value is a number.\r\n * @param {*} val Variable to test.\r\n * @return {boolean} Whether variable is a number.\r\n */\r\nexport function isNumber(val) {\r\n    return typeof val === 'number';\r\n}\r\n/**\r\n * Returns true if the specified value is a function.\r\n * @param {*} val Variable to test.\r\n * @return {boolean} Whether variable is a function.\r\n */\r\nexport function isFunction(val) {\r\n    return typeOf(val) === 'function';\r\n}\r\n/**\r\n * Returns true if the specified value is an object.  This includes arrays and\r\n * functions.\r\n * @param {*} val Variable to test.\r\n * @return {boolean} Whether variable is an object.\r\n */\r\nexport function isObject(val) {\r\n    var type = typeof val;\r\n    return type === 'object' && val !== null || type === 'function';\r\n    // return Object(val) === val also works, but is slower, especially if val is\r\n    // not an object.\r\n}\r\n","/**\r\n * We're looking for something that is truthy, not just true.\r\n */\r\nexport function assert(condition, message) {\r\n    if (!condition) {\r\n        throw new Error(message);\r\n    }\r\n}\r\nexport function fail(message) {\r\n    assert(false, message);\r\n}\r\n","// DO NOT MODIFY. File automatically generated by pgen/parser/main.py\r\nimport { Tokens } from './Tokens';\r\n/**\r\n * Mapping from operator textual symbols to token symbolic constants.\r\n */\r\nexport var OpMap = {\r\n    \"(\": Tokens.T_LPAR,\r\n    \")\": Tokens.T_RPAR,\r\n    \"[\": Tokens.T_LSQB,\r\n    \"]\": Tokens.T_RSQB,\r\n    \":\": Tokens.T_COLON,\r\n    \",\": Tokens.T_COMMA,\r\n    \";\": Tokens.T_SEMI,\r\n    \"+\": Tokens.T_PLUS,\r\n    \"-\": Tokens.T_MINUS,\r\n    \"*\": Tokens.T_STAR,\r\n    \"/\": Tokens.T_SLASH,\r\n    \"|\": Tokens.T_VBAR,\r\n    \"&\": Tokens.T_AMPER,\r\n    \"<\": Tokens.T_LESS,\r\n    \">\": Tokens.T_GREATER,\r\n    \"=\": Tokens.T_EQUAL,\r\n    \".\": Tokens.T_DOT,\r\n    \"%\": Tokens.T_PERCENT,\r\n    \"`\": Tokens.T_BACKQUOTE,\r\n    \"{\": Tokens.T_LBRACE,\r\n    \"}\": Tokens.T_RBRACE,\r\n    \"@\": Tokens.T_AT,\r\n    \"==\": Tokens.T_EQEQUAL,\r\n    \"!=\": Tokens.T_NOTEQUAL,\r\n    \"<>\": Tokens.T_NOTEQUAL,\r\n    \"<=\": Tokens.T_LESSEQUAL,\r\n    \">=\": Tokens.T_GREATEREQUAL,\r\n    \"~\": Tokens.T_TILDE,\r\n    \"^\": Tokens.T_CIRCUMFLEX,\r\n    \"<<\": Tokens.T_LEFTSHIFT,\r\n    \">>\": Tokens.T_RIGHTSHIFT,\r\n    \"**\": Tokens.T_DOUBLESTAR,\r\n    \"+=\": Tokens.T_PLUSEQUAL,\r\n    \"-=\": Tokens.T_MINEQUAL,\r\n    \"*=\": Tokens.T_STAREQUAL,\r\n    \"/=\": Tokens.T_SLASHEQUAL,\r\n    \"%=\": Tokens.T_PERCENTEQUAL,\r\n    \"&=\": Tokens.T_AMPEREQUAL,\r\n    \"|=\": Tokens.T_VBAREQUAL,\r\n    \"^=\": Tokens.T_CIRCUMFLEXEQUAL,\r\n    \"<<=\": Tokens.T_LEFTSHIFTEQUAL,\r\n    \">>=\": Tokens.T_RIGHTSHIFTEQUAL,\r\n    \"**=\": Tokens.T_DOUBLESTAREQUAL,\r\n    \"//\": Tokens.T_DOUBLESLASH,\r\n    \"//=\": Tokens.T_DOUBLESLASHEQUAL,\r\n    \"->\": Tokens.T_RARROW\r\n};\r\n/**\r\n * An Arc is a pair, represented in an array, consisting a label and a to-state.\r\n */\r\nexport var ARC_SYMBOL_LABEL = 0;\r\nexport var ARC_TO_STATE = 1;\r\n/**\r\n *\r\n */\r\nexport var IDX_DFABT_DFA = 0;\r\nexport var IDX_DFABT_BEGIN_TOKENS = 1;\r\nexport var IDX_LABEL_TOKEN_OR_SYMBOL = 0;\r\nexport var IDX_LABEL_NAME = 1;\r\n/**\r\n *\r\n */\r\nexport var ParseTables = {\r\n    sym: { AndExpr: 257,\r\n        ArithmeticExpr: 258,\r\n        AtomExpr: 259,\r\n        BitwiseAndExpr: 260,\r\n        BitwiseOrExpr: 261,\r\n        BitwiseXorExpr: 262,\r\n        ComparisonExpr: 263,\r\n        ExprList: 264,\r\n        ExprStmt: 265,\r\n        GeometricExpr: 266,\r\n        GlobalStmt: 267,\r\n        IfExpr: 268,\r\n        ImportList: 269,\r\n        ImportSpecifier: 270,\r\n        LambdaExpr: 271,\r\n        ModuleSpecifier: 272,\r\n        NonLocalStmt: 273,\r\n        NotExpr: 274,\r\n        OrExpr: 275,\r\n        PowerExpr: 276,\r\n        ShiftExpr: 277,\r\n        UnaryExpr: 278,\r\n        YieldExpr: 279,\r\n        arglist: 280,\r\n        argument: 281,\r\n        assert_stmt: 282,\r\n        augassign: 283,\r\n        break_stmt: 284,\r\n        classdef: 285,\r\n        comp_op: 286,\r\n        compound_stmt: 287,\r\n        continue_stmt: 288,\r\n        decorated: 289,\r\n        decorator: 290,\r\n        decorators: 291,\r\n        del_stmt: 292,\r\n        dictmaker: 293,\r\n        dotted_as_name: 294,\r\n        dotted_as_names: 295,\r\n        dotted_name: 296,\r\n        encoding_decl: 297,\r\n        eval_input: 298,\r\n        except_clause: 299,\r\n        exec_stmt: 300,\r\n        file_input: 301,\r\n        flow_stmt: 302,\r\n        for_stmt: 303,\r\n        fpdef: 304,\r\n        fplist: 305,\r\n        funcdef: 306,\r\n        gen_for: 307,\r\n        gen_if: 308,\r\n        gen_iter: 309,\r\n        if_stmt: 310,\r\n        import_from: 311,\r\n        import_name: 312,\r\n        import_stmt: 313,\r\n        list_for: 314,\r\n        list_if: 315,\r\n        list_iter: 316,\r\n        listmaker: 317,\r\n        old_LambdaExpr: 318,\r\n        old_test: 319,\r\n        parameters: 320,\r\n        pass_stmt: 321,\r\n        print_stmt: 322,\r\n        raise_stmt: 323,\r\n        return_stmt: 324,\r\n        simple_stmt: 325,\r\n        single_input: 256,\r\n        sliceop: 326,\r\n        small_stmt: 327,\r\n        stmt: 328,\r\n        subscript: 329,\r\n        subscriptlist: 330,\r\n        suite: 331,\r\n        testlist: 332,\r\n        testlist1: 333,\r\n        testlist_gexp: 334,\r\n        testlist_safe: 335,\r\n        trailer: 336,\r\n        try_stmt: 337,\r\n        varargslist: 338,\r\n        while_stmt: 339,\r\n        with_stmt: 340,\r\n        with_var: 341,\r\n        yield_stmt: 342 },\r\n    number2symbol: { 256: 'single_input',\r\n        257: 'AndExpr',\r\n        258: 'ArithmeticExpr',\r\n        259: 'AtomExpr',\r\n        260: 'BitwiseAndExpr',\r\n        261: 'BitwiseOrExpr',\r\n        262: 'BitwiseXorExpr',\r\n        263: 'ComparisonExpr',\r\n        264: 'ExprList',\r\n        265: 'ExprStmt',\r\n        266: 'GeometricExpr',\r\n        267: 'GlobalStmt',\r\n        268: 'IfExpr',\r\n        269: 'ImportList',\r\n        270: 'ImportSpecifier',\r\n        271: 'LambdaExpr',\r\n        272: 'ModuleSpecifier',\r\n        273: 'NonLocalStmt',\r\n        274: 'NotExpr',\r\n        275: 'OrExpr',\r\n        276: 'PowerExpr',\r\n        277: 'ShiftExpr',\r\n        278: 'UnaryExpr',\r\n        279: 'YieldExpr',\r\n        280: 'arglist',\r\n        281: 'argument',\r\n        282: 'assert_stmt',\r\n        283: 'augassign',\r\n        284: 'break_stmt',\r\n        285: 'classdef',\r\n        286: 'comp_op',\r\n        287: 'compound_stmt',\r\n        288: 'continue_stmt',\r\n        289: 'decorated',\r\n        290: 'decorator',\r\n        291: 'decorators',\r\n        292: 'del_stmt',\r\n        293: 'dictmaker',\r\n        294: 'dotted_as_name',\r\n        295: 'dotted_as_names',\r\n        296: 'dotted_name',\r\n        297: 'encoding_decl',\r\n        298: 'eval_input',\r\n        299: 'except_clause',\r\n        300: 'exec_stmt',\r\n        301: 'file_input',\r\n        302: 'flow_stmt',\r\n        303: 'for_stmt',\r\n        304: 'fpdef',\r\n        305: 'fplist',\r\n        306: 'funcdef',\r\n        307: 'gen_for',\r\n        308: 'gen_if',\r\n        309: 'gen_iter',\r\n        310: 'if_stmt',\r\n        311: 'import_from',\r\n        312: 'import_name',\r\n        313: 'import_stmt',\r\n        314: 'list_for',\r\n        315: 'list_if',\r\n        316: 'list_iter',\r\n        317: 'listmaker',\r\n        318: 'old_LambdaExpr',\r\n        319: 'old_test',\r\n        320: 'parameters',\r\n        321: 'pass_stmt',\r\n        322: 'print_stmt',\r\n        323: 'raise_stmt',\r\n        324: 'return_stmt',\r\n        325: 'simple_stmt',\r\n        326: 'sliceop',\r\n        327: 'small_stmt',\r\n        328: 'stmt',\r\n        329: 'subscript',\r\n        330: 'subscriptlist',\r\n        331: 'suite',\r\n        332: 'testlist',\r\n        333: 'testlist1',\r\n        334: 'testlist_gexp',\r\n        335: 'testlist_safe',\r\n        336: 'trailer',\r\n        337: 'try_stmt',\r\n        338: 'varargslist',\r\n        339: 'while_stmt',\r\n        340: 'with_stmt',\r\n        341: 'with_var',\r\n        342: 'yield_stmt' },\r\n    dfas: { 256: [[[[1, 1], [2, 1], [3, 2]], [[0, 1]], [[2, 1]]],\r\n            { 2: 1,\r\n                4: 1,\r\n                5: 1,\r\n                6: 1,\r\n                7: 1,\r\n                8: 1,\r\n                9: 1,\r\n                10: 1,\r\n                11: 1,\r\n                12: 1,\r\n                13: 1,\r\n                14: 1,\r\n                15: 1,\r\n                16: 1,\r\n                17: 1,\r\n                18: 1,\r\n                19: 1,\r\n                20: 1,\r\n                21: 1,\r\n                22: 1,\r\n                23: 1,\r\n                24: 1,\r\n                25: 1,\r\n                26: 1,\r\n                27: 1,\r\n                28: 1,\r\n                29: 1,\r\n                30: 1,\r\n                31: 1,\r\n                32: 1,\r\n                33: 1,\r\n                34: 1,\r\n                35: 1,\r\n                36: 1,\r\n                37: 1 }],\r\n        257: [[[[38, 1]], [[39, 0], [0, 1]]],\r\n            { 6: 1,\r\n                7: 1,\r\n                8: 1,\r\n                9: 1,\r\n                14: 1,\r\n                18: 1,\r\n                21: 1,\r\n                25: 1,\r\n                29: 1,\r\n                32: 1,\r\n                37: 1 }],\r\n        258: [[[[40, 1]], [[25, 0], [37, 0], [0, 1]]],\r\n            { 6: 1, 8: 1, 9: 1, 14: 1, 18: 1, 21: 1, 25: 1, 29: 1, 32: 1, 37: 1 }],\r\n        259: [[[[18, 1], [8, 2], [32, 5], [29, 4], [9, 3], [14, 6], [21, 2]],\r\n                [[18, 1], [0, 1]],\r\n                [[0, 2]],\r\n                [[41, 7], [42, 2]],\r\n                [[43, 2], [44, 8], [45, 8]],\r\n                [[46, 9], [47, 2]],\r\n                [[48, 10]],\r\n                [[42, 2]],\r\n                [[43, 2]],\r\n                [[47, 2]],\r\n                [[14, 2]]],\r\n            { 8: 1, 9: 1, 14: 1, 18: 1, 21: 1, 29: 1, 32: 1 }],\r\n        260: [[[[49, 1]], [[50, 0], [0, 1]]],\r\n            { 6: 1, 8: 1, 9: 1, 14: 1, 18: 1, 21: 1, 25: 1, 29: 1, 32: 1, 37: 1 }],\r\n        261: [[[[51, 1]], [[52, 0], [0, 1]]],\r\n            { 6: 1, 8: 1, 9: 1, 14: 1, 18: 1, 21: 1, 25: 1, 29: 1, 32: 1, 37: 1 }],\r\n        262: [[[[53, 1]], [[54, 0], [0, 1]]],\r\n            { 6: 1, 8: 1, 9: 1, 14: 1, 18: 1, 21: 1, 25: 1, 29: 1, 32: 1, 37: 1 }],\r\n        263: [[[[55, 1]], [[56, 0], [0, 1]]],\r\n            { 6: 1, 8: 1, 9: 1, 14: 1, 18: 1, 21: 1, 25: 1, 29: 1, 32: 1, 37: 1 }],\r\n        264: [[[[55, 1]], [[57, 2], [0, 1]], [[55, 1], [0, 2]]],\r\n            { 6: 1, 8: 1, 9: 1, 14: 1, 18: 1, 21: 1, 25: 1, 29: 1, 32: 1, 37: 1 }],\r\n        265: [[[[58, 1]],\r\n                [[59, 2], [60, 3], [0, 1]],\r\n                [[58, 4], [45, 4]],\r\n                [[58, 5], [45, 5]],\r\n                [[0, 4]],\r\n                [[60, 3], [0, 5]]],\r\n            { 6: 1,\r\n                7: 1,\r\n                8: 1,\r\n                9: 1,\r\n                11: 1,\r\n                14: 1,\r\n                18: 1,\r\n                21: 1,\r\n                25: 1,\r\n                29: 1,\r\n                32: 1,\r\n                37: 1 }],\r\n        266: [[[[61, 1]], [[62, 0], [63, 0], [64, 0], [65, 0], [0, 1]]],\r\n            { 6: 1, 8: 1, 9: 1, 14: 1, 18: 1, 21: 1, 25: 1, 29: 1, 32: 1, 37: 1 }],\r\n        267: [[[[27, 1]], [[21, 2]], [[57, 1], [0, 2]]], { 27: 1 }],\r\n        268: [[[[66, 1], [67, 2]],\r\n                [[0, 1]],\r\n                [[31, 3], [0, 2]],\r\n                [[67, 4]],\r\n                [[68, 5]],\r\n                [[69, 1]]],\r\n            { 6: 1,\r\n                7: 1,\r\n                8: 1,\r\n                9: 1,\r\n                11: 1,\r\n                14: 1,\r\n                18: 1,\r\n                21: 1,\r\n                25: 1,\r\n                29: 1,\r\n                32: 1,\r\n                37: 1 }],\r\n        269: [[[[70, 1]], [[57, 2], [0, 1]], [[70, 1], [0, 2]]], { 21: 1 }],\r\n        270: [[[[21, 1]], [[71, 2], [0, 1]], [[21, 3]], [[0, 3]]], { 21: 1 }],\r\n        271: [[[[11, 1]], [[72, 2], [73, 3]], [[69, 4]], [[72, 2]], [[0, 4]]],\r\n            { 11: 1 }],\r\n        272: [[[[18, 1]], [[0, 1]]], { 18: 1 }],\r\n        273: [[[[13, 1]], [[21, 2]], [[57, 1], [0, 2]]], { 13: 1 }],\r\n        274: [[[[7, 1], [74, 2]], [[38, 2]], [[0, 2]]],\r\n            { 6: 1,\r\n                7: 1,\r\n                8: 1,\r\n                9: 1,\r\n                14: 1,\r\n                18: 1,\r\n                21: 1,\r\n                25: 1,\r\n                29: 1,\r\n                32: 1,\r\n                37: 1 }],\r\n        275: [[[[75, 1]], [[76, 0], [0, 1]]],\r\n            { 6: 1,\r\n                7: 1,\r\n                8: 1,\r\n                9: 1,\r\n                14: 1,\r\n                18: 1,\r\n                21: 1,\r\n                25: 1,\r\n                29: 1,\r\n                32: 1,\r\n                37: 1 }],\r\n        276: [[[[77, 1]], [[78, 1], [79, 2], [0, 1]], [[49, 3]], [[0, 3]]],\r\n            { 8: 1, 9: 1, 14: 1, 18: 1, 21: 1, 29: 1, 32: 1 }],\r\n        277: [[[[80, 1]], [[81, 0], [82, 0], [0, 1]]],\r\n            { 6: 1, 8: 1, 9: 1, 14: 1, 18: 1, 21: 1, 25: 1, 29: 1, 32: 1, 37: 1 }],\r\n        278: [[[[25, 1], [6, 1], [37, 1], [83, 2]], [[49, 2]], [[0, 2]]],\r\n            { 6: 1, 8: 1, 9: 1, 14: 1, 18: 1, 21: 1, 25: 1, 29: 1, 32: 1, 37: 1 }],\r\n        279: [[[[26, 1]], [[58, 2], [0, 1]], [[0, 2]]], { 26: 1 }],\r\n        280: [[[[63, 1], [84, 2], [79, 3]],\r\n                [[69, 4]],\r\n                [[57, 5], [0, 2]],\r\n                [[69, 6]],\r\n                [[57, 7], [0, 4]],\r\n                [[63, 1], [84, 2], [79, 3], [0, 5]],\r\n                [[0, 6]],\r\n                [[84, 4], [79, 3]]],\r\n            { 6: 1,\r\n                7: 1,\r\n                8: 1,\r\n                9: 1,\r\n                11: 1,\r\n                14: 1,\r\n                18: 1,\r\n                21: 1,\r\n                25: 1,\r\n                29: 1,\r\n                32: 1,\r\n                37: 1,\r\n                63: 1,\r\n                79: 1 }],\r\n        281: [[[[69, 1]], [[85, 2], [60, 3], [0, 1]], [[0, 2]], [[69, 2]]],\r\n            { 6: 1,\r\n                7: 1,\r\n                8: 1,\r\n                9: 1,\r\n                11: 1,\r\n                14: 1,\r\n                18: 1,\r\n                21: 1,\r\n                25: 1,\r\n                29: 1,\r\n                32: 1,\r\n                37: 1 }],\r\n        282: [[[[20, 1]], [[69, 2]], [[57, 3], [0, 2]], [[69, 4]], [[0, 4]]],\r\n            { 20: 1 }],\r\n        283: [[[[86, 1],\r\n                    [87, 1],\r\n                    [88, 1],\r\n                    [89, 1],\r\n                    [90, 1],\r\n                    [91, 1],\r\n                    [92, 1],\r\n                    [93, 1],\r\n                    [94, 1],\r\n                    [95, 1],\r\n                    [96, 1],\r\n                    [97, 1]],\r\n                [[0, 1]]],\r\n            { 86: 1,\r\n                87: 1,\r\n                88: 1,\r\n                89: 1,\r\n                90: 1,\r\n                91: 1,\r\n                92: 1,\r\n                93: 1,\r\n                94: 1,\r\n                95: 1,\r\n                96: 1,\r\n                97: 1 }],\r\n        284: [[[[33, 1]], [[0, 1]]], { 33: 1 }],\r\n        285: [[[[10, 1]],\r\n                [[21, 2]],\r\n                [[72, 3], [29, 4]],\r\n                [[98, 5]],\r\n                [[43, 6], [58, 7]],\r\n                [[0, 5]],\r\n                [[72, 3]],\r\n                [[43, 6]]],\r\n            { 10: 1 }],\r\n        286: [[[[99, 1],\r\n                    [100, 1],\r\n                    [7, 2],\r\n                    [101, 1],\r\n                    [99, 1],\r\n                    [102, 1],\r\n                    [103, 1],\r\n                    [104, 3],\r\n                    [105, 1],\r\n                    [106, 1]],\r\n                [[0, 1]],\r\n                [[102, 1]],\r\n                [[7, 1], [0, 3]]],\r\n            { 7: 1, 99: 1, 100: 1, 101: 1, 102: 1, 103: 1, 104: 1, 105: 1, 106: 1 }],\r\n        287: [[[[107, 1],\r\n                    [108, 1],\r\n                    [109, 1],\r\n                    [110, 1],\r\n                    [111, 1],\r\n                    [112, 1],\r\n                    [113, 1],\r\n                    [114, 1]],\r\n                [[0, 1]]],\r\n            { 4: 1, 10: 1, 15: 1, 17: 1, 28: 1, 31: 1, 35: 1, 36: 1 }],\r\n        288: [[[[34, 1]], [[0, 1]]], { 34: 1 }],\r\n        289: [[[[115, 1]], [[113, 2], [110, 2]], [[0, 2]]], { 35: 1 }],\r\n        290: [[[[35, 1]],\r\n                [[116, 2]],\r\n                [[29, 4], [2, 3]],\r\n                [[0, 3]],\r\n                [[43, 5], [117, 6]],\r\n                [[2, 3]],\r\n                [[43, 5]]],\r\n            { 35: 1 }],\r\n        291: [[[[118, 1]], [[118, 1], [0, 1]]], { 35: 1 }],\r\n        292: [[[[22, 1]], [[119, 2]], [[0, 2]]], { 22: 1 }],\r\n        293: [[[[69, 1]],\r\n                [[72, 2]],\r\n                [[69, 3]],\r\n                [[57, 4], [0, 3]],\r\n                [[69, 1], [0, 4]]],\r\n            { 6: 1,\r\n                7: 1,\r\n                8: 1,\r\n                9: 1,\r\n                11: 1,\r\n                14: 1,\r\n                18: 1,\r\n                21: 1,\r\n                25: 1,\r\n                29: 1,\r\n                32: 1,\r\n                37: 1 }],\r\n        294: [[[[116, 1]], [[71, 2], [0, 1]], [[21, 3]], [[0, 3]]], { 21: 1 }],\r\n        295: [[[[120, 1]], [[57, 0], [0, 1]]], { 21: 1 }],\r\n        296: [[[[21, 1]], [[121, 0], [0, 1]]], { 21: 1 }],\r\n        297: [[[[21, 1]], [[0, 1]]], { 21: 1 }],\r\n        298: [[[[58, 1]], [[2, 1], [122, 2]], [[0, 2]]],\r\n            { 6: 1,\r\n                7: 1,\r\n                8: 1,\r\n                9: 1,\r\n                11: 1,\r\n                14: 1,\r\n                18: 1,\r\n                21: 1,\r\n                25: 1,\r\n                29: 1,\r\n                32: 1,\r\n                37: 1 }],\r\n        299: [[[[123, 1]],\r\n                [[69, 2], [0, 1]],\r\n                [[71, 3], [57, 3], [0, 2]],\r\n                [[69, 4]],\r\n                [[0, 4]]],\r\n            { 123: 1 }],\r\n        300: [[[[16, 1]],\r\n                [[55, 2]],\r\n                [[102, 3], [0, 2]],\r\n                [[69, 4]],\r\n                [[57, 5], [0, 4]],\r\n                [[69, 6]],\r\n                [[0, 6]]],\r\n            { 16: 1 }],\r\n        301: [[[[2, 0], [122, 1], [124, 0]], [[0, 1]]],\r\n            { 2: 1,\r\n                4: 1,\r\n                5: 1,\r\n                6: 1,\r\n                7: 1,\r\n                8: 1,\r\n                9: 1,\r\n                10: 1,\r\n                11: 1,\r\n                12: 1,\r\n                13: 1,\r\n                14: 1,\r\n                15: 1,\r\n                16: 1,\r\n                17: 1,\r\n                18: 1,\r\n                19: 1,\r\n                20: 1,\r\n                21: 1,\r\n                22: 1,\r\n                23: 1,\r\n                24: 1,\r\n                25: 1,\r\n                26: 1,\r\n                27: 1,\r\n                28: 1,\r\n                29: 1,\r\n                30: 1,\r\n                31: 1,\r\n                32: 1,\r\n                33: 1,\r\n                34: 1,\r\n                35: 1,\r\n                36: 1,\r\n                37: 1,\r\n                122: 1 }],\r\n        302: [[[[125, 1], [126, 1], [127, 1], [128, 1], [129, 1]], [[0, 1]]],\r\n            { 5: 1, 19: 1, 26: 1, 33: 1, 34: 1 }],\r\n        303: [[[[28, 1]],\r\n                [[119, 2]],\r\n                [[102, 3]],\r\n                [[58, 4]],\r\n                [[72, 5]],\r\n                [[98, 6]],\r\n                [[68, 7], [0, 6]],\r\n                [[72, 8]],\r\n                [[98, 9]],\r\n                [[0, 9]]],\r\n            { 28: 1 }],\r\n        304: [[[[29, 1], [21, 2]], [[130, 3]], [[0, 2]], [[43, 2]]], { 21: 1, 29: 1 }],\r\n        305: [[[[131, 1]], [[57, 2], [0, 1]], [[131, 1], [0, 2]]], { 21: 1, 29: 1 }],\r\n        306: [[[[4, 1]],\r\n                [[21, 2]],\r\n                [[132, 3]],\r\n                [[133, 4], [72, 5]],\r\n                [[69, 6]],\r\n                [[98, 7]],\r\n                [[72, 5]],\r\n                [[0, 7]]],\r\n            { 4: 1 }],\r\n        307: [[[[28, 1]],\r\n                [[119, 2]],\r\n                [[102, 3]],\r\n                [[67, 4]],\r\n                [[134, 5], [0, 4]],\r\n                [[0, 5]]],\r\n            { 28: 1 }],\r\n        308: [[[[31, 1]], [[135, 2]], [[134, 3], [0, 2]], [[0, 3]]], { 31: 1 }],\r\n        309: [[[[85, 1], [136, 1]], [[0, 1]]], { 28: 1, 31: 1 }],\r\n        310: [[[[31, 1]],\r\n                [[69, 2]],\r\n                [[72, 3]],\r\n                [[98, 4]],\r\n                [[68, 5], [137, 1], [0, 4]],\r\n                [[72, 6]],\r\n                [[98, 7]],\r\n                [[0, 7]]],\r\n            { 31: 1 }],\r\n        311: [[[[30, 1]],\r\n                [[138, 2]],\r\n                [[24, 3]],\r\n                [[63, 4], [29, 5], [139, 4]],\r\n                [[0, 4]],\r\n                [[139, 6]],\r\n                [[43, 4]]],\r\n            { 30: 1 }],\r\n        312: [[[[24, 1]], [[140, 2]], [[0, 2]]], { 24: 1 }],\r\n        313: [[[[141, 1], [142, 1]], [[0, 1]]], { 24: 1, 30: 1 }],\r\n        314: [[[[28, 1]],\r\n                [[119, 2]],\r\n                [[102, 3]],\r\n                [[143, 4]],\r\n                [[144, 5], [0, 4]],\r\n                [[0, 5]]],\r\n            { 28: 1 }],\r\n        315: [[[[31, 1]], [[135, 2]], [[144, 3], [0, 2]], [[0, 3]]], { 31: 1 }],\r\n        316: [[[[145, 1], [146, 1]], [[0, 1]]], { 28: 1, 31: 1 }],\r\n        317: [[[[69, 1]],\r\n                [[145, 2], [57, 3], [0, 1]],\r\n                [[0, 2]],\r\n                [[69, 4], [0, 3]],\r\n                [[57, 3], [0, 4]]],\r\n            { 6: 1,\r\n                7: 1,\r\n                8: 1,\r\n                9: 1,\r\n                11: 1,\r\n                14: 1,\r\n                18: 1,\r\n                21: 1,\r\n                25: 1,\r\n                29: 1,\r\n                32: 1,\r\n                37: 1 }],\r\n        318: [[[[11, 1]], [[72, 2], [73, 3]], [[135, 4]], [[72, 2]], [[0, 4]]],\r\n            { 11: 1 }],\r\n        319: [[[[147, 1], [67, 1]], [[0, 1]]],\r\n            { 6: 1,\r\n                7: 1,\r\n                8: 1,\r\n                9: 1,\r\n                11: 1,\r\n                14: 1,\r\n                18: 1,\r\n                21: 1,\r\n                25: 1,\r\n                29: 1,\r\n                32: 1,\r\n                37: 1 }],\r\n        320: [[[[29, 1]], [[43, 2], [73, 3]], [[0, 2]], [[43, 2]]], { 29: 1 }],\r\n        321: [[[[23, 1]], [[0, 1]]], { 23: 1 }],\r\n        322: [[[[12, 1]],\r\n                [[69, 2], [81, 3], [0, 1]],\r\n                [[57, 4], [0, 2]],\r\n                [[69, 5]],\r\n                [[69, 2], [0, 4]],\r\n                [[57, 6], [0, 5]],\r\n                [[69, 7]],\r\n                [[57, 8], [0, 7]],\r\n                [[69, 7], [0, 8]]],\r\n            { 12: 1 }],\r\n        323: [[[[5, 1]],\r\n                [[69, 2], [0, 1]],\r\n                [[57, 3], [0, 2]],\r\n                [[69, 4]],\r\n                [[57, 5], [0, 4]],\r\n                [[69, 6]],\r\n                [[0, 6]]],\r\n            { 5: 1 }],\r\n        324: [[[[19, 1]], [[58, 2], [0, 1]], [[0, 2]]], { 19: 1 }],\r\n        325: [[[[148, 1]], [[2, 2], [149, 3]], [[0, 2]], [[148, 1], [2, 2]]],\r\n            { 5: 1,\r\n                6: 1,\r\n                7: 1,\r\n                8: 1,\r\n                9: 1,\r\n                11: 1,\r\n                12: 1,\r\n                13: 1,\r\n                14: 1,\r\n                16: 1,\r\n                18: 1,\r\n                19: 1,\r\n                20: 1,\r\n                21: 1,\r\n                22: 1,\r\n                23: 1,\r\n                24: 1,\r\n                25: 1,\r\n                26: 1,\r\n                27: 1,\r\n                29: 1,\r\n                30: 1,\r\n                32: 1,\r\n                33: 1,\r\n                34: 1,\r\n                37: 1 }],\r\n        326: [[[[72, 1]], [[69, 2], [0, 1]], [[0, 2]]], { 72: 1 }],\r\n        327: [[[[150, 1],\r\n                    [151, 1],\r\n                    [152, 1],\r\n                    [153, 1],\r\n                    [154, 1],\r\n                    [155, 1],\r\n                    [156, 1],\r\n                    [157, 1],\r\n                    [158, 1],\r\n                    [159, 1]],\r\n                [[0, 1]]],\r\n            { 5: 1,\r\n                6: 1,\r\n                7: 1,\r\n                8: 1,\r\n                9: 1,\r\n                11: 1,\r\n                12: 1,\r\n                13: 1,\r\n                14: 1,\r\n                16: 1,\r\n                18: 1,\r\n                19: 1,\r\n                20: 1,\r\n                21: 1,\r\n                22: 1,\r\n                23: 1,\r\n                24: 1,\r\n                25: 1,\r\n                26: 1,\r\n                27: 1,\r\n                29: 1,\r\n                30: 1,\r\n                32: 1,\r\n                33: 1,\r\n                34: 1,\r\n                37: 1 }],\r\n        328: [[[[1, 1], [3, 1]], [[0, 1]]],\r\n            { 4: 1,\r\n                5: 1,\r\n                6: 1,\r\n                7: 1,\r\n                8: 1,\r\n                9: 1,\r\n                10: 1,\r\n                11: 1,\r\n                12: 1,\r\n                13: 1,\r\n                14: 1,\r\n                15: 1,\r\n                16: 1,\r\n                17: 1,\r\n                18: 1,\r\n                19: 1,\r\n                20: 1,\r\n                21: 1,\r\n                22: 1,\r\n                23: 1,\r\n                24: 1,\r\n                25: 1,\r\n                26: 1,\r\n                27: 1,\r\n                28: 1,\r\n                29: 1,\r\n                30: 1,\r\n                31: 1,\r\n                32: 1,\r\n                33: 1,\r\n                34: 1,\r\n                35: 1,\r\n                36: 1,\r\n                37: 1 }],\r\n        329: [[[[72, 1], [69, 2], [121, 3]],\r\n                [[160, 4], [69, 5], [0, 1]],\r\n                [[72, 1], [0, 2]],\r\n                [[121, 6]],\r\n                [[0, 4]],\r\n                [[160, 4], [0, 5]],\r\n                [[121, 4]]],\r\n            { 6: 1,\r\n                7: 1,\r\n                8: 1,\r\n                9: 1,\r\n                11: 1,\r\n                14: 1,\r\n                18: 1,\r\n                21: 1,\r\n                25: 1,\r\n                29: 1,\r\n                32: 1,\r\n                37: 1,\r\n                72: 1,\r\n                121: 1 }],\r\n        330: [[[[161, 1]], [[57, 2], [0, 1]], [[161, 1], [0, 2]]],\r\n            { 6: 1,\r\n                7: 1,\r\n                8: 1,\r\n                9: 1,\r\n                11: 1,\r\n                14: 1,\r\n                18: 1,\r\n                21: 1,\r\n                25: 1,\r\n                29: 1,\r\n                32: 1,\r\n                37: 1,\r\n                72: 1,\r\n                121: 1 }],\r\n        331: [[[[1, 1], [2, 2]],\r\n                [[0, 1]],\r\n                [[162, 3]],\r\n                [[124, 4]],\r\n                [[163, 1], [124, 4]]],\r\n            { 2: 1,\r\n                5: 1,\r\n                6: 1,\r\n                7: 1,\r\n                8: 1,\r\n                9: 1,\r\n                11: 1,\r\n                12: 1,\r\n                13: 1,\r\n                14: 1,\r\n                16: 1,\r\n                18: 1,\r\n                19: 1,\r\n                20: 1,\r\n                21: 1,\r\n                22: 1,\r\n                23: 1,\r\n                24: 1,\r\n                25: 1,\r\n                26: 1,\r\n                27: 1,\r\n                29: 1,\r\n                30: 1,\r\n                32: 1,\r\n                33: 1,\r\n                34: 1,\r\n                37: 1 }],\r\n        332: [[[[69, 1]], [[57, 2], [0, 1]], [[69, 1], [0, 2]]],\r\n            { 6: 1,\r\n                7: 1,\r\n                8: 1,\r\n                9: 1,\r\n                11: 1,\r\n                14: 1,\r\n                18: 1,\r\n                21: 1,\r\n                25: 1,\r\n                29: 1,\r\n                32: 1,\r\n                37: 1 }],\r\n        333: [[[[69, 1]], [[57, 0], [0, 1]]],\r\n            { 6: 1,\r\n                7: 1,\r\n                8: 1,\r\n                9: 1,\r\n                11: 1,\r\n                14: 1,\r\n                18: 1,\r\n                21: 1,\r\n                25: 1,\r\n                29: 1,\r\n                32: 1,\r\n                37: 1 }],\r\n        334: [[[[69, 1]],\r\n                [[85, 2], [57, 3], [0, 1]],\r\n                [[0, 2]],\r\n                [[69, 4], [0, 3]],\r\n                [[57, 3], [0, 4]]],\r\n            { 6: 1,\r\n                7: 1,\r\n                8: 1,\r\n                9: 1,\r\n                11: 1,\r\n                14: 1,\r\n                18: 1,\r\n                21: 1,\r\n                25: 1,\r\n                29: 1,\r\n                32: 1,\r\n                37: 1 }],\r\n        335: [[[[135, 1]],\r\n                [[57, 2], [0, 1]],\r\n                [[135, 3]],\r\n                [[57, 4], [0, 3]],\r\n                [[135, 3], [0, 4]]],\r\n            { 6: 1,\r\n                7: 1,\r\n                8: 1,\r\n                9: 1,\r\n                11: 1,\r\n                14: 1,\r\n                18: 1,\r\n                21: 1,\r\n                25: 1,\r\n                29: 1,\r\n                32: 1,\r\n                37: 1 }],\r\n        336: [[[[29, 1], [121, 2], [32, 3]],\r\n                [[43, 4], [117, 5]],\r\n                [[21, 4]],\r\n                [[164, 6]],\r\n                [[0, 4]],\r\n                [[43, 4]],\r\n                [[47, 4]]],\r\n            { 29: 1, 32: 1, 121: 1 }],\r\n        337: [[[[15, 1]],\r\n                [[72, 2]],\r\n                [[98, 3]],\r\n                [[165, 4], [166, 5]],\r\n                [[72, 6]],\r\n                [[72, 7]],\r\n                [[98, 8]],\r\n                [[98, 9]],\r\n                [[165, 4], [68, 10], [166, 5], [0, 8]],\r\n                [[0, 9]],\r\n                [[72, 11]],\r\n                [[98, 12]],\r\n                [[166, 5], [0, 12]]],\r\n            { 15: 1 }],\r\n        338: [[[[63, 1], [131, 2], [79, 3]],\r\n                [[21, 4]],\r\n                [[60, 5], [57, 6], [0, 2]],\r\n                [[21, 7]],\r\n                [[57, 8], [0, 4]],\r\n                [[69, 9]],\r\n                [[63, 1], [131, 2], [79, 3], [0, 6]],\r\n                [[0, 7]],\r\n                [[79, 3]],\r\n                [[57, 6], [0, 9]]],\r\n            { 21: 1, 29: 1, 63: 1, 79: 1 }],\r\n        339: [[[[17, 1]],\r\n                [[69, 2]],\r\n                [[72, 3]],\r\n                [[98, 4]],\r\n                [[68, 5], [0, 4]],\r\n                [[72, 6]],\r\n                [[98, 7]],\r\n                [[0, 7]]],\r\n            { 17: 1 }],\r\n        340: [[[[36, 1]],\r\n                [[69, 2]],\r\n                [[72, 3], [167, 4]],\r\n                [[98, 5]],\r\n                [[72, 3]],\r\n                [[0, 5]]],\r\n            { 36: 1 }],\r\n        341: [[[[71, 1]], [[55, 2]], [[0, 2]]], { 71: 1 }],\r\n        342: [[[[45, 1]], [[0, 1]]], { 26: 1 }] },\r\n    states: [[[[1, 1], [2, 1], [3, 2]], [[0, 1]], [[2, 1]]],\r\n        [[[38, 1]], [[39, 0], [0, 1]]],\r\n        [[[40, 1]], [[25, 0], [37, 0], [0, 1]]],\r\n        [[[18, 1], [8, 2], [32, 5], [29, 4], [9, 3], [14, 6], [21, 2]],\r\n            [[18, 1], [0, 1]],\r\n            [[0, 2]],\r\n            [[41, 7], [42, 2]],\r\n            [[43, 2], [44, 8], [45, 8]],\r\n            [[46, 9], [47, 2]],\r\n            [[48, 10]],\r\n            [[42, 2]],\r\n            [[43, 2]],\r\n            [[47, 2]],\r\n            [[14, 2]]],\r\n        [[[49, 1]], [[50, 0], [0, 1]]],\r\n        [[[51, 1]], [[52, 0], [0, 1]]],\r\n        [[[53, 1]], [[54, 0], [0, 1]]],\r\n        [[[55, 1]], [[56, 0], [0, 1]]],\r\n        [[[55, 1]], [[57, 2], [0, 1]], [[55, 1], [0, 2]]],\r\n        [[[58, 1]],\r\n            [[59, 2], [60, 3], [0, 1]],\r\n            [[58, 4], [45, 4]],\r\n            [[58, 5], [45, 5]],\r\n            [[0, 4]],\r\n            [[60, 3], [0, 5]]],\r\n        [[[61, 1]], [[62, 0], [63, 0], [64, 0], [65, 0], [0, 1]]],\r\n        [[[27, 1]], [[21, 2]], [[57, 1], [0, 2]]],\r\n        [[[66, 1], [67, 2]],\r\n            [[0, 1]],\r\n            [[31, 3], [0, 2]],\r\n            [[67, 4]],\r\n            [[68, 5]],\r\n            [[69, 1]]],\r\n        [[[70, 1]], [[57, 2], [0, 1]], [[70, 1], [0, 2]]],\r\n        [[[21, 1]], [[71, 2], [0, 1]], [[21, 3]], [[0, 3]]],\r\n        [[[11, 1]], [[72, 2], [73, 3]], [[69, 4]], [[72, 2]], [[0, 4]]],\r\n        [[[18, 1]], [[0, 1]]],\r\n        [[[13, 1]], [[21, 2]], [[57, 1], [0, 2]]],\r\n        [[[7, 1], [74, 2]], [[38, 2]], [[0, 2]]],\r\n        [[[75, 1]], [[76, 0], [0, 1]]],\r\n        [[[77, 1]], [[78, 1], [79, 2], [0, 1]], [[49, 3]], [[0, 3]]],\r\n        [[[80, 1]], [[81, 0], [82, 0], [0, 1]]],\r\n        [[[25, 1], [6, 1], [37, 1], [83, 2]], [[49, 2]], [[0, 2]]],\r\n        [[[26, 1]], [[58, 2], [0, 1]], [[0, 2]]],\r\n        [[[63, 1], [84, 2], [79, 3]],\r\n            [[69, 4]],\r\n            [[57, 5], [0, 2]],\r\n            [[69, 6]],\r\n            [[57, 7], [0, 4]],\r\n            [[63, 1], [84, 2], [79, 3], [0, 5]],\r\n            [[0, 6]],\r\n            [[84, 4], [79, 3]]],\r\n        [[[69, 1]], [[85, 2], [60, 3], [0, 1]], [[0, 2]], [[69, 2]]],\r\n        [[[20, 1]], [[69, 2]], [[57, 3], [0, 2]], [[69, 4]], [[0, 4]]],\r\n        [[[86, 1],\r\n                [87, 1],\r\n                [88, 1],\r\n                [89, 1],\r\n                [90, 1],\r\n                [91, 1],\r\n                [92, 1],\r\n                [93, 1],\r\n                [94, 1],\r\n                [95, 1],\r\n                [96, 1],\r\n                [97, 1]],\r\n            [[0, 1]]],\r\n        [[[33, 1]], [[0, 1]]],\r\n        [[[10, 1]],\r\n            [[21, 2]],\r\n            [[72, 3], [29, 4]],\r\n            [[98, 5]],\r\n            [[43, 6], [58, 7]],\r\n            [[0, 5]],\r\n            [[72, 3]],\r\n            [[43, 6]]],\r\n        [[[99, 1],\r\n                [100, 1],\r\n                [7, 2],\r\n                [101, 1],\r\n                [99, 1],\r\n                [102, 1],\r\n                [103, 1],\r\n                [104, 3],\r\n                [105, 1],\r\n                [106, 1]],\r\n            [[0, 1]],\r\n            [[102, 1]],\r\n            [[7, 1], [0, 3]]],\r\n        [[[107, 1],\r\n                [108, 1],\r\n                [109, 1],\r\n                [110, 1],\r\n                [111, 1],\r\n                [112, 1],\r\n                [113, 1],\r\n                [114, 1]],\r\n            [[0, 1]]],\r\n        [[[34, 1]], [[0, 1]]],\r\n        [[[115, 1]], [[113, 2], [110, 2]], [[0, 2]]],\r\n        [[[35, 1]],\r\n            [[116, 2]],\r\n            [[29, 4], [2, 3]],\r\n            [[0, 3]],\r\n            [[43, 5], [117, 6]],\r\n            [[2, 3]],\r\n            [[43, 5]]],\r\n        [[[118, 1]], [[118, 1], [0, 1]]],\r\n        [[[22, 1]], [[119, 2]], [[0, 2]]],\r\n        [[[69, 1]], [[72, 2]], [[69, 3]], [[57, 4], [0, 3]], [[69, 1], [0, 4]]],\r\n        [[[116, 1]], [[71, 2], [0, 1]], [[21, 3]], [[0, 3]]],\r\n        [[[120, 1]], [[57, 0], [0, 1]]],\r\n        [[[21, 1]], [[121, 0], [0, 1]]],\r\n        [[[21, 1]], [[0, 1]]],\r\n        [[[58, 1]], [[2, 1], [122, 2]], [[0, 2]]],\r\n        [[[123, 1]],\r\n            [[69, 2], [0, 1]],\r\n            [[71, 3], [57, 3], [0, 2]],\r\n            [[69, 4]],\r\n            [[0, 4]]],\r\n        [[[16, 1]],\r\n            [[55, 2]],\r\n            [[102, 3], [0, 2]],\r\n            [[69, 4]],\r\n            [[57, 5], [0, 4]],\r\n            [[69, 6]],\r\n            [[0, 6]]],\r\n        [[[2, 0], [122, 1], [124, 0]], [[0, 1]]],\r\n        [[[125, 1], [126, 1], [127, 1], [128, 1], [129, 1]], [[0, 1]]],\r\n        [[[28, 1]],\r\n            [[119, 2]],\r\n            [[102, 3]],\r\n            [[58, 4]],\r\n            [[72, 5]],\r\n            [[98, 6]],\r\n            [[68, 7], [0, 6]],\r\n            [[72, 8]],\r\n            [[98, 9]],\r\n            [[0, 9]]],\r\n        [[[29, 1], [21, 2]], [[130, 3]], [[0, 2]], [[43, 2]]],\r\n        [[[131, 1]], [[57, 2], [0, 1]], [[131, 1], [0, 2]]],\r\n        [[[4, 1]],\r\n            [[21, 2]],\r\n            [[132, 3]],\r\n            [[133, 4], [72, 5]],\r\n            [[69, 6]],\r\n            [[98, 7]],\r\n            [[72, 5]],\r\n            [[0, 7]]],\r\n        [[[28, 1]], [[119, 2]], [[102, 3]], [[67, 4]], [[134, 5], [0, 4]], [[0, 5]]],\r\n        [[[31, 1]], [[135, 2]], [[134, 3], [0, 2]], [[0, 3]]],\r\n        [[[85, 1], [136, 1]], [[0, 1]]],\r\n        [[[31, 1]],\r\n            [[69, 2]],\r\n            [[72, 3]],\r\n            [[98, 4]],\r\n            [[68, 5], [137, 1], [0, 4]],\r\n            [[72, 6]],\r\n            [[98, 7]],\r\n            [[0, 7]]],\r\n        [[[30, 1]],\r\n            [[138, 2]],\r\n            [[24, 3]],\r\n            [[63, 4], [29, 5], [139, 4]],\r\n            [[0, 4]],\r\n            [[139, 6]],\r\n            [[43, 4]]],\r\n        [[[24, 1]], [[140, 2]], [[0, 2]]],\r\n        [[[141, 1], [142, 1]], [[0, 1]]],\r\n        [[[28, 1]], [[119, 2]], [[102, 3]], [[143, 4]], [[144, 5], [0, 4]], [[0, 5]]],\r\n        [[[31, 1]], [[135, 2]], [[144, 3], [0, 2]], [[0, 3]]],\r\n        [[[145, 1], [146, 1]], [[0, 1]]],\r\n        [[[69, 1]],\r\n            [[145, 2], [57, 3], [0, 1]],\r\n            [[0, 2]],\r\n            [[69, 4], [0, 3]],\r\n            [[57, 3], [0, 4]]],\r\n        [[[11, 1]], [[72, 2], [73, 3]], [[135, 4]], [[72, 2]], [[0, 4]]],\r\n        [[[147, 1], [67, 1]], [[0, 1]]],\r\n        [[[29, 1]], [[43, 2], [73, 3]], [[0, 2]], [[43, 2]]],\r\n        [[[23, 1]], [[0, 1]]],\r\n        [[[12, 1]],\r\n            [[69, 2], [81, 3], [0, 1]],\r\n            [[57, 4], [0, 2]],\r\n            [[69, 5]],\r\n            [[69, 2], [0, 4]],\r\n            [[57, 6], [0, 5]],\r\n            [[69, 7]],\r\n            [[57, 8], [0, 7]],\r\n            [[69, 7], [0, 8]]],\r\n        [[[5, 1]],\r\n            [[69, 2], [0, 1]],\r\n            [[57, 3], [0, 2]],\r\n            [[69, 4]],\r\n            [[57, 5], [0, 4]],\r\n            [[69, 6]],\r\n            [[0, 6]]],\r\n        [[[19, 1]], [[58, 2], [0, 1]], [[0, 2]]],\r\n        [[[148, 1]], [[2, 2], [149, 3]], [[0, 2]], [[148, 1], [2, 2]]],\r\n        [[[72, 1]], [[69, 2], [0, 1]], [[0, 2]]],\r\n        [[[150, 1],\r\n                [151, 1],\r\n                [152, 1],\r\n                [153, 1],\r\n                [154, 1],\r\n                [155, 1],\r\n                [156, 1],\r\n                [157, 1],\r\n                [158, 1],\r\n                [159, 1]],\r\n            [[0, 1]]],\r\n        [[[1, 1], [3, 1]], [[0, 1]]],\r\n        [[[72, 1], [69, 2], [121, 3]],\r\n            [[160, 4], [69, 5], [0, 1]],\r\n            [[72, 1], [0, 2]],\r\n            [[121, 6]],\r\n            [[0, 4]],\r\n            [[160, 4], [0, 5]],\r\n            [[121, 4]]],\r\n        [[[161, 1]], [[57, 2], [0, 1]], [[161, 1], [0, 2]]],\r\n        [[[1, 1], [2, 2]], [[0, 1]], [[162, 3]], [[124, 4]], [[163, 1], [124, 4]]],\r\n        [[[69, 1]], [[57, 2], [0, 1]], [[69, 1], [0, 2]]],\r\n        [[[69, 1]], [[57, 0], [0, 1]]],\r\n        [[[69, 1]],\r\n            [[85, 2], [57, 3], [0, 1]],\r\n            [[0, 2]],\r\n            [[69, 4], [0, 3]],\r\n            [[57, 3], [0, 4]]],\r\n        [[[135, 1]],\r\n            [[57, 2], [0, 1]],\r\n            [[135, 3]],\r\n            [[57, 4], [0, 3]],\r\n            [[135, 3], [0, 4]]],\r\n        [[[29, 1], [121, 2], [32, 3]],\r\n            [[43, 4], [117, 5]],\r\n            [[21, 4]],\r\n            [[164, 6]],\r\n            [[0, 4]],\r\n            [[43, 4]],\r\n            [[47, 4]]],\r\n        [[[15, 1]],\r\n            [[72, 2]],\r\n            [[98, 3]],\r\n            [[165, 4], [166, 5]],\r\n            [[72, 6]],\r\n            [[72, 7]],\r\n            [[98, 8]],\r\n            [[98, 9]],\r\n            [[165, 4], [68, 10], [166, 5], [0, 8]],\r\n            [[0, 9]],\r\n            [[72, 11]],\r\n            [[98, 12]],\r\n            [[166, 5], [0, 12]]],\r\n        [[[63, 1], [131, 2], [79, 3]],\r\n            [[21, 4]],\r\n            [[60, 5], [57, 6], [0, 2]],\r\n            [[21, 7]],\r\n            [[57, 8], [0, 4]],\r\n            [[69, 9]],\r\n            [[63, 1], [131, 2], [79, 3], [0, 6]],\r\n            [[0, 7]],\r\n            [[79, 3]],\r\n            [[57, 6], [0, 9]]],\r\n        [[[17, 1]],\r\n            [[69, 2]],\r\n            [[72, 3]],\r\n            [[98, 4]],\r\n            [[68, 5], [0, 4]],\r\n            [[72, 6]],\r\n            [[98, 7]],\r\n            [[0, 7]]],\r\n        [[[36, 1]], [[69, 2]], [[72, 3], [167, 4]], [[98, 5]], [[72, 3]], [[0, 5]]],\r\n        [[[71, 1]], [[55, 2]], [[0, 2]]],\r\n        [[[45, 1]], [[0, 1]]]],\r\n    labels: [[0, 'EMPTY'],\r\n        [325, null],\r\n        [4, null],\r\n        [287, null],\r\n        [1, 'def'],\r\n        [1, 'raise'],\r\n        [32, null],\r\n        [1, 'not'],\r\n        [2, null],\r\n        [26, null],\r\n        [1, 'class'],\r\n        [1, 'lambda'],\r\n        [1, 'print'],\r\n        [1, 'nonlocal'],\r\n        [25, null],\r\n        [1, 'try'],\r\n        [1, 'exec'],\r\n        [1, 'while'],\r\n        [3, null],\r\n        [1, 'return'],\r\n        [1, 'assert'],\r\n        [1, null],\r\n        [1, 'del'],\r\n        [1, 'pass'],\r\n        [1, 'import'],\r\n        [15, null],\r\n        [1, 'yield'],\r\n        [1, 'global'],\r\n        [1, 'for'],\r\n        [7, null],\r\n        [1, 'from'],\r\n        [1, 'if'],\r\n        [9, null],\r\n        [1, 'break'],\r\n        [1, 'continue'],\r\n        [50, null],\r\n        [1, 'with'],\r\n        [14, null],\r\n        [274, null],\r\n        [1, 'and'],\r\n        [266, null],\r\n        [293, null],\r\n        [27, null],\r\n        [8, null],\r\n        [334, null],\r\n        [279, null],\r\n        [317, null],\r\n        [10, null],\r\n        [333, null],\r\n        [278, null],\r\n        [19, null],\r\n        [262, null],\r\n        [18, null],\r\n        [260, null],\r\n        [33, null],\r\n        [258, null],\r\n        [286, null],\r\n        [12, null],\r\n        [332, null],\r\n        [283, null],\r\n        [22, null],\r\n        [277, null],\r\n        [48, null],\r\n        [16, null],\r\n        [17, null],\r\n        [24, null],\r\n        [271, null],\r\n        [275, null],\r\n        [1, 'else'],\r\n        [268, null],\r\n        [270, null],\r\n        [1, 'as'],\r\n        [11, null],\r\n        [338, null],\r\n        [263, null],\r\n        [257, null],\r\n        [1, 'or'],\r\n        [259, null],\r\n        [336, null],\r\n        [36, null],\r\n        [261, null],\r\n        [35, null],\r\n        [34, null],\r\n        [276, null],\r\n        [281, null],\r\n        [307, null],\r\n        [46, null],\r\n        [39, null],\r\n        [41, null],\r\n        [47, null],\r\n        [42, null],\r\n        [43, null],\r\n        [37, null],\r\n        [44, null],\r\n        [49, null],\r\n        [40, null],\r\n        [38, null],\r\n        [45, null],\r\n        [331, null],\r\n        [29, null],\r\n        [21, null],\r\n        [28, null],\r\n        [1, 'in'],\r\n        [30, null],\r\n        [1, 'is'],\r\n        [31, null],\r\n        [20, null],\r\n        [337, null],\r\n        [310, null],\r\n        [303, null],\r\n        [285, null],\r\n        [340, null],\r\n        [339, null],\r\n        [306, null],\r\n        [289, null],\r\n        [291, null],\r\n        [296, null],\r\n        [280, null],\r\n        [290, null],\r\n        [264, null],\r\n        [294, null],\r\n        [23, null],\r\n        [0, null],\r\n        [1, 'except'],\r\n        [328, null],\r\n        [284, null],\r\n        [288, null],\r\n        [323, null],\r\n        [324, null],\r\n        [342, null],\r\n        [305, null],\r\n        [304, null],\r\n        [320, null],\r\n        [55, null],\r\n        [309, null],\r\n        [319, null],\r\n        [308, null],\r\n        [1, 'elif'],\r\n        [272, null],\r\n        [269, null],\r\n        [295, null],\r\n        [312, null],\r\n        [311, null],\r\n        [335, null],\r\n        [316, null],\r\n        [314, null],\r\n        [315, null],\r\n        [318, null],\r\n        [327, null],\r\n        [13, null],\r\n        [273, null],\r\n        [302, null],\r\n        [265, null],\r\n        [321, null],\r\n        [267, null],\r\n        [322, null],\r\n        [292, null],\r\n        [300, null],\r\n        [282, null],\r\n        [313, null],\r\n        [326, null],\r\n        [329, null],\r\n        [5, null],\r\n        [6, null],\r\n        [330, null],\r\n        [299, null],\r\n        [1, 'finally'],\r\n        [341, null]],\r\n    keywords: { 'and': 39,\r\n        'as': 71,\r\n        'assert': 20,\r\n        'break': 33,\r\n        'class': 10,\r\n        'continue': 34,\r\n        'def': 4,\r\n        'del': 22,\r\n        'elif': 137,\r\n        'else': 68,\r\n        'except': 123,\r\n        'exec': 16,\r\n        'finally': 166,\r\n        'for': 28,\r\n        'from': 30,\r\n        'global': 27,\r\n        'if': 31,\r\n        'import': 24,\r\n        'in': 102,\r\n        'is': 104,\r\n        'lambda': 11,\r\n        'nonlocal': 13,\r\n        'not': 7,\r\n        'or': 76,\r\n        'pass': 23,\r\n        'print': 12,\r\n        'raise': 5,\r\n        'return': 19,\r\n        'try': 15,\r\n        'while': 17,\r\n        'with': 36,\r\n        'yield': 26 },\r\n    tokens: { 0: 122,\r\n        1: 21,\r\n        2: 8,\r\n        3: 18,\r\n        4: 2,\r\n        5: 162,\r\n        6: 163,\r\n        7: 29,\r\n        8: 43,\r\n        9: 32,\r\n        10: 47,\r\n        11: 72,\r\n        12: 57,\r\n        13: 149,\r\n        14: 37,\r\n        15: 25,\r\n        16: 63,\r\n        17: 64,\r\n        18: 52,\r\n        19: 50,\r\n        20: 106,\r\n        21: 100,\r\n        22: 60,\r\n        23: 121,\r\n        24: 65,\r\n        25: 14,\r\n        26: 9,\r\n        27: 42,\r\n        28: 101,\r\n        29: 99,\r\n        30: 103,\r\n        31: 105,\r\n        32: 6,\r\n        33: 54,\r\n        34: 82,\r\n        35: 81,\r\n        36: 79,\r\n        37: 92,\r\n        38: 96,\r\n        39: 87,\r\n        40: 95,\r\n        41: 88,\r\n        42: 90,\r\n        43: 91,\r\n        44: 93,\r\n        45: 97,\r\n        46: 86,\r\n        47: 89,\r\n        48: 62,\r\n        49: 94,\r\n        50: 35,\r\n        55: 133 },\r\n    start: 256\r\n};\r\n// Nothing more to see here.\r\n","/**\r\n * Symbolic constants for various Python Language tokens.\r\n */\r\nexport var Tokens;\r\n(function (Tokens) {\r\n    Tokens[Tokens[\"T_ENDMARKER\"] = 0] = \"T_ENDMARKER\";\r\n    Tokens[Tokens[\"T_NAME\"] = 1] = \"T_NAME\";\r\n    Tokens[Tokens[\"T_NUMBER\"] = 2] = \"T_NUMBER\";\r\n    Tokens[Tokens[\"T_STRING\"] = 3] = \"T_STRING\";\r\n    Tokens[Tokens[\"T_NEWLINE\"] = 4] = \"T_NEWLINE\";\r\n    Tokens[Tokens[\"T_INDENT\"] = 5] = \"T_INDENT\";\r\n    Tokens[Tokens[\"T_DEDENT\"] = 6] = \"T_DEDENT\";\r\n    Tokens[Tokens[\"T_LPAR\"] = 7] = \"T_LPAR\";\r\n    Tokens[Tokens[\"T_RPAR\"] = 8] = \"T_RPAR\";\r\n    Tokens[Tokens[\"T_LSQB\"] = 9] = \"T_LSQB\";\r\n    Tokens[Tokens[\"T_RSQB\"] = 10] = \"T_RSQB\";\r\n    Tokens[Tokens[\"T_COLON\"] = 11] = \"T_COLON\";\r\n    Tokens[Tokens[\"T_COMMA\"] = 12] = \"T_COMMA\";\r\n    Tokens[Tokens[\"T_SEMI\"] = 13] = \"T_SEMI\";\r\n    Tokens[Tokens[\"T_PLUS\"] = 14] = \"T_PLUS\";\r\n    Tokens[Tokens[\"T_MINUS\"] = 15] = \"T_MINUS\";\r\n    Tokens[Tokens[\"T_STAR\"] = 16] = \"T_STAR\";\r\n    Tokens[Tokens[\"T_SLASH\"] = 17] = \"T_SLASH\";\r\n    Tokens[Tokens[\"T_VBAR\"] = 18] = \"T_VBAR\";\r\n    Tokens[Tokens[\"T_AMPER\"] = 19] = \"T_AMPER\";\r\n    Tokens[Tokens[\"T_LESS\"] = 20] = \"T_LESS\";\r\n    Tokens[Tokens[\"T_GREATER\"] = 21] = \"T_GREATER\";\r\n    Tokens[Tokens[\"T_EQUAL\"] = 22] = \"T_EQUAL\";\r\n    Tokens[Tokens[\"T_DOT\"] = 23] = \"T_DOT\";\r\n    Tokens[Tokens[\"T_PERCENT\"] = 24] = \"T_PERCENT\";\r\n    Tokens[Tokens[\"T_BACKQUOTE\"] = 25] = \"T_BACKQUOTE\";\r\n    Tokens[Tokens[\"T_LBRACE\"] = 26] = \"T_LBRACE\";\r\n    Tokens[Tokens[\"T_RBRACE\"] = 27] = \"T_RBRACE\";\r\n    Tokens[Tokens[\"T_EQEQUAL\"] = 28] = \"T_EQEQUAL\";\r\n    Tokens[Tokens[\"T_NOTEQUAL\"] = 29] = \"T_NOTEQUAL\";\r\n    Tokens[Tokens[\"T_LESSEQUAL\"] = 30] = \"T_LESSEQUAL\";\r\n    Tokens[Tokens[\"T_GREATEREQUAL\"] = 31] = \"T_GREATEREQUAL\";\r\n    Tokens[Tokens[\"T_TILDE\"] = 32] = \"T_TILDE\";\r\n    Tokens[Tokens[\"T_CIRCUMFLEX\"] = 33] = \"T_CIRCUMFLEX\";\r\n    Tokens[Tokens[\"T_LEFTSHIFT\"] = 34] = \"T_LEFTSHIFT\";\r\n    Tokens[Tokens[\"T_RIGHTSHIFT\"] = 35] = \"T_RIGHTSHIFT\";\r\n    Tokens[Tokens[\"T_DOUBLESTAR\"] = 36] = \"T_DOUBLESTAR\";\r\n    Tokens[Tokens[\"T_PLUSEQUAL\"] = 37] = \"T_PLUSEQUAL\";\r\n    Tokens[Tokens[\"T_MINEQUAL\"] = 38] = \"T_MINEQUAL\";\r\n    Tokens[Tokens[\"T_STAREQUAL\"] = 39] = \"T_STAREQUAL\";\r\n    Tokens[Tokens[\"T_SLASHEQUAL\"] = 40] = \"T_SLASHEQUAL\";\r\n    Tokens[Tokens[\"T_PERCENTEQUAL\"] = 41] = \"T_PERCENTEQUAL\";\r\n    Tokens[Tokens[\"T_AMPEREQUAL\"] = 42] = \"T_AMPEREQUAL\";\r\n    Tokens[Tokens[\"T_VBAREQUAL\"] = 43] = \"T_VBAREQUAL\";\r\n    Tokens[Tokens[\"T_CIRCUMFLEXEQUAL\"] = 44] = \"T_CIRCUMFLEXEQUAL\";\r\n    Tokens[Tokens[\"T_LEFTSHIFTEQUAL\"] = 45] = \"T_LEFTSHIFTEQUAL\";\r\n    Tokens[Tokens[\"T_RIGHTSHIFTEQUAL\"] = 46] = \"T_RIGHTSHIFTEQUAL\";\r\n    Tokens[Tokens[\"T_DOUBLESTAREQUAL\"] = 47] = \"T_DOUBLESTAREQUAL\";\r\n    Tokens[Tokens[\"T_DOUBLESLASH\"] = 48] = \"T_DOUBLESLASH\";\r\n    Tokens[Tokens[\"T_DOUBLESLASHEQUAL\"] = 49] = \"T_DOUBLESLASHEQUAL\";\r\n    Tokens[Tokens[\"T_AT\"] = 50] = \"T_AT\";\r\n    Tokens[Tokens[\"T_ATEQUAL\"] = 51] = \"T_ATEQUAL\";\r\n    Tokens[Tokens[\"T_OP\"] = 52] = \"T_OP\";\r\n    Tokens[Tokens[\"T_COMMENT\"] = 53] = \"T_COMMENT\";\r\n    Tokens[Tokens[\"T_NL\"] = 54] = \"T_NL\";\r\n    Tokens[Tokens[\"T_RARROW\"] = 55] = \"T_RARROW\";\r\n    Tokens[Tokens[\"T_AWAIT\"] = 56] = \"T_AWAIT\";\r\n    Tokens[Tokens[\"T_ASYNC\"] = 57] = \"T_ASYNC\";\r\n    Tokens[Tokens[\"T_ERRORTOKEN\"] = 58] = \"T_ERRORTOKEN\";\r\n    Tokens[Tokens[\"T_N_TOKENS\"] = 59] = \"T_N_TOKENS\";\r\n    Tokens[Tokens[\"T_NT_OFFSET\"] = 256] = \"T_NT_OFFSET\";\r\n})(Tokens || (Tokens = {}));\r\n"],"names":["Symbol","TOK","syntaxError","tslib_1.__extends","SourceKind","T_OP","T_NL","T_NAME","T_COMMENT","T_ENDMARKER"],"mappings":"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,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACpD,EAAE,CAAC,EAAE,CAAC;gBACF,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC,EAAE,CAAC;QAChB,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAChC,EAAE,CAAC,EAAE,CAAC;gBACF,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC,EAAE,CAAC;QAChB,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACzC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QAC1E,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBAC5D,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACjB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACR,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBAClB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBAC3B,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBAClB,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;gBACV,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBACT,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBACT,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBACT,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YACd,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QACtD,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAChC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QAC1E,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAChC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QAC1E,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAChC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QAC1E,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAChC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QAC1E,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACnD,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QAC1E,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBACR,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC1B,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBAClB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACR,CAAC,CAAC,EAAE,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AAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC9D,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QACtD,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACzC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QAC1E,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC5D,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QAC1E,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,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E,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC,EAAE,CAAC;QAChB,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACnD,EAAE,CAAC,EAAE,CAAC;gBACF,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC,EAAE,CAAC;QAChB,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAChC,EAAE,CAAC,EAAE,CAAC;gBACF,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gB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EAAE,CAAC,CAAC,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YACxB,CAAC,CAAC,EAAE,EA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EAAE,EAAE,IAAI,CAAC;QACV,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,CAAC,EAAE,MAAM,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,CAAC,EAAE,IAAI,CAAC;QACT,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,CAAC,EAAE,IAAI,CAAC;QACT,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,CAAC,EAAE,IAAI,CAAC;QACT,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,CAAC,EAAE,IAAI,CAAC;QACT,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,CAAC,EAAE,IAAI,CAAC;QACT,CAAC,CAAC,EAAE,QAAQ,CAAC;QACb,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,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AAO,SAAS,MAAM,CAAC,CAAC,EAAE;IACtB,IAAI,KAAK,GAAG;QACR,KAAK,EAAE,CAAC;QACR,OAAO,EAAE,YAAY,EAAE,OAAO,KAAK,CAAC,EAAE;QACtC,KAAK,EAAE,YAAY,EAAE,OAAO,IAAI,CAAC,EAAE;QACnC,MAAM,EAAE,YAAY,EAAE,OAAO,KAAK,CAAC,EAAE;QACrC,QAAQ,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC,EAAE;KAC3C,CAAC;IACF,OAAO,KAAK,CAAC;CAChB;;;;AAID,AAAO,SAAS,OAAO,CAAC,CAAC,EAAE,KAAK,EAAE;IAC9B,IAAI,KAAK,GAAG;QACR,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,KAAK;QACZ,OAAO,EAAE,YAAY,EAAE,OAAO,KAAK,CAAC,EAAE;QACtC,KAAK,EAAE,YAAY,EAAE,OAAO,KAAK,CAAC,EAAE;QACpC,MAAM,EAAE,YAAY,EAAE,OAAO,IAAI,CAAC,EAAE;QACpC,QAAQ,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC,EAAE;KACtC,CAAC;IACF,OAAO,KAAK,CAAC;CAChB;;ADrCD;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;AACA,AACA;;;;;;;;;AASA,IAAI,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC;;;;AAI1B,IAAI,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,CA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"}