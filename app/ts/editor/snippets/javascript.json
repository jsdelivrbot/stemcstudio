[
    {
        "tabTrigger": "proto",
        "name": "proto",
        "content": "${1:class_name}.prototype.${2:method_name} = function(${3:first_argument}) {\n\t${4:// body...}\n};"
    },
    {
        "tabTrigger": "fun",
        "name": "fun",
        "content": "function ${1?:function_name}(${2:argument}) {\n\t${3:// body...}\n}"
    },
    {
        "guard": "((=)s*|(:)s*|(()|\b)",
        "trigger": "f",
        "endTrigger": "())?",
        "endGuard": "",
        "tabTrigger": "f",
        "name": "f",
        "content": "function${M1?: ${1:functionName}}($2) {\n\t${0:$TM_SELECTED_TEXT}\n}${M2?;}${M3?,}${M4?)}"
    },
    {
        "trigger": "(?f(",
        "endTrigger": ")?",
        "tabTrigger": "f(",
        "name": "f(",
        "content": "(function(${1}) {\n\t${0:${TM_SELECTED_TEXT:/* code */}}\n}(${1}));"
    },
    {
        "tabTrigger": "if",
        "name": "if",
        "content": "if (${1:true}) {\n\t${0}\n}"
    },
    {
        "tabTrigger": "ife",
        "name": "ife",
        "content": "if (${1:true}) {\n\t${2}\n} else {\n\t${0}\n}"
    },
    {
        "tabTrigger": "ter",
        "name": "ter",
        "content": "${1:/* condition */} ? ${2:a} : ${3:b}"
    },
    {
        "tabTrigger": "switch",
        "name": "switch",
        "content": "switch (${1:expression}) {\n\tcase '${3:case}':\n\t\t${4:// code}\n\t\tbreak;\n\t${5}\n\tdefault:\n\t\t${2:// code}\n}"
    },
    {
        "tabTrigger": "case",
        "name": "case",
        "content": "case '${1:case}':\n\t${2:// code}\n\tbreak;\n${3}"
    },
    {
        "tabTrigger": "wh",
        "name": "wh",
        "content": "while (${1:/* condition */}) {\n\t${0:/* code */}\n}"
    },
    {
        "tabTrigger": "try",
        "name": "try",
        "content": "try {\n\t${0:/* code */}\n} catch (e) {}"
    },
    {
        "tabTrigger": "do",
        "name": "do",
        "content": "do {\n\t${2:/* code */}\n} while (${1:/* condition */});"
    },
    {
        "tabTrigger": ":f",
        "name": ":f",
        "guard": "([,{[])|^s*",
        "trigger": ":f",
        "endTrigger": "",
        "content": "${1:method_name}: function(${2:attribute}) {\n\t${0}\n}${3:,}"
    },
    {
        "tabTrigger": "setTimeout",
        "name": "setTimeout",
        "guard": "\b",
        "trigger": "st|timeout|setTimeo?u?t?",
        "endTrigger": "",
        "content": "setTimeout(function() {${3:$TM_SELECTED_TEXT}}, ${1:10});"
    },
    {
        "tabTrigger": "gett",
        "name": "gett",
        "content": "getElementsBy${1:TagName}('${2}')${3}"
    },
    {
        "tabTrigger": "get",
        "name": "get",
        "content": "getElementBy${1:Id}('${2}')${3}"
    },
    {
        "tabTrigger": "cl",
        "name": "cl",
        "content": "console.log(${1});"
    },
    {
        "tabTrigger": "ret",
        "name": "ret",
        "content": "return ${1:result}"
    },
    {
        "tabTrigger": "fori",
        "name": "fori",
        "content": "for (var ${1:prop} in ${2:Things}) {\n\t${0:$2[$1]}\n}"
    },
    {
        "tabTrigger": "has",
        "name": "has",
        "content": "hasOwnProperty(${1})"
    },
    {
        "tabTrigger": "/**",
        "name": "/**",
        "content": "/**\n * ${1:description}\n *\n */"
    },
    {
        "tabTrigger": "@par",
        "name": "@par",
        "guard": "^s**s*",
        "trigger": "@(para?m?)?",
        "endTrigger": "",
        "content": "@param {${1:type}} ${2:name} ${3:description}"
    },
    {
        "tabTrigger": "@ret",
        "name": "@ret",
        "content": "@return {${1:type}} ${2:description}"
    },
    {
        "tabTrigger": "jsonp",
        "name": "jsonp",
        "content": "JSON.parse(${1:jstr});"
    },
    {
        "tabTrigger": "jsons",
        "name": "jsons",
        "content": "JSON.stringify(${1:object});"
    },
    {
        "tabTrigger": "sdf",
        "name": "sdf",
        "content": "var ${1:function_name} = function(${2:argument}) {\n\t${3:// initial code ...}\n\n\t$1 = function($2) {\n\t\t${4:// main code}\n\t};\n}"
    },
    {
        "tabTrigger": "sing",
        "name": "sing",
        "content": "function ${1:Singleton} (${2:argument}) {\n\t// the cached instance\n\tvar instance;\n\n\t// rewrite the constructor\n\t$1 = function $1($2) {\n\t\treturn instance;\n\t};\n\t\n\t// carry over the prototype properties\n\t$1.prototype = this;\n\n\t// the instance\n\tinstance = new $1();\n\n\t// reset the constructor pointer\n\tinstance.constructor = $1;\n\n\t${3:// code ...}\n\n\treturn instance;\n}"
    },
    {
        "tabTrigger": "class",
        "name": "class",
        "guard": "^s*",
        "trigger": "clas{0,2}",
        "endTrigger": "",
        "content": "var ${1:class} = function(${20}) {\n\t$40$0\n};\n\n(function() {\n\t${60:this.prop = \"\"}\n}).call(${1:class}.prototype);\n\nexports.${1:class} = ${1:class};"
    },
    {
        "tabTrigger": "for-",
        "name": "for-",
        "content": "for (var ${1:i} = ${2:Things}.length; ${1:i}--; ) {\n\t${0:${2:Things}[${1:i}];}\n}"
    },
    {
        "tabTrigger": "for",
        "name": "for",
        "content": "for (var ${1:i} = 0; $1 < ${2:Things}.length; $1++) {\n\t${3:$2[$1]}$0\n}"
    },
    {
        "tabTrigger": "forr",
        "name": "forr",
        "content": "for (var ${1:i} = ${2:Things}.length - 1; $1 >= 0; $1--) {\n\t${3:$2[$1]}$0\n}"
    },
    {
        "tabTrigger": "def",
        "name": "def",
        "content": "define(function(require, exports, module) {\n\"use strict\";\nvar ${1/.*///} = require(\"${1}\");\n\n$TM_SELECTED_TEXT\n});"
    },
    {
        "tabTrigger": "req",
        "name": "req",
        "guard": "^s*",
        "content": "var ${1/.*///} = require(\"${1}\");\n$0"
    },
    {
        "tabTrigger": "requ",
        "name": "requ",
        "guard": "^s*",
        "content": "var ${1/.*/(.)/\\u$1/} = require(\"${1}\").${1/.*/(.)/\\u$1/};\n$0"
    }
]