{
    "project": {
        "name": "davinci-eight",
        "description": "WebGL library for mathematical physics using Geometric Algebra",
        "version": "2.113.0",
        "url": "",
        "logo": "../assets/logo.png"
    },
    "files": {
        "src/davinci-eight/cameras/Frustum.ts": {
            "name": "src/davinci-eight/cameras/Frustum.ts",
            "modules": {},
            "classes": {
                "Frustum": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/cameras/Perspective.ts": {
            "name": "src/davinci-eight/cameras/Perspective.ts",
            "modules": {},
            "classes": {
                "Perspective": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/cameras/View.ts": {
            "name": "src/davinci-eight/cameras/View.ts",
            "modules": {},
            "classes": {
                "View": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/cameras/createFrustum.ts": {
            "name": "src/davinci-eight/cameras/createFrustum.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/cameras/createPerspective.ts": {
            "name": "src/davinci-eight/cameras/createPerspective.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/cameras/createView.ts": {
            "name": "src/davinci-eight/cameras/createView.ts",
            "modules": {},
            "classes": {
                "createView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/commands/ContextAttributesLogger.ts": {
            "name": "src/davinci-eight/commands/ContextAttributesLogger.ts",
            "modules": {},
            "classes": {
                "ContextAttributesLogger": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/commands/EIGHTLogger.ts": {
            "name": "src/davinci-eight/commands/EIGHTLogger.ts",
            "modules": {},
            "classes": {
                "EIGHTLogger": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/commands/VersionLogger.ts": {
            "name": "src/davinci-eight/commands/VersionLogger.ts",
            "modules": {},
            "classes": {
                "VersionLogger": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/commands/WebGLClear.ts": {
            "name": "src/davinci-eight/commands/WebGLClear.ts",
            "modules": {},
            "classes": {
                "WebGLClear": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/commands/WebGLClearColor.ts": {
            "name": "src/davinci-eight/commands/WebGLClearColor.ts",
            "modules": {},
            "classes": {
                "WebGLClearColor": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/commands/WebGLEnable.ts": {
            "name": "src/davinci-eight/commands/WebGLEnable.ts",
            "modules": {},
            "classes": {
                "WebGLEnable": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/AttribLocation.ts": {
            "name": "src/davinci-eight/core/AttribLocation.ts",
            "modules": {},
            "classes": {
                "AttribLocation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/AttribMetaInfo.ts": {
            "name": "src/davinci-eight/core/AttribMetaInfo.ts",
            "modules": {},
            "classes": {
                "AttribMetaInfo": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/BufferResource.ts": {
            "name": "src/davinci-eight/core/BufferResource.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/Color.ts": {
            "name": "src/davinci-eight/core/Color.ts",
            "modules": {},
            "classes": {
                "Color": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/ContextController.ts": {
            "name": "src/davinci-eight/core/ContextController.ts",
            "modules": {},
            "classes": {
                "ContextController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/ContextKahuna.ts": {
            "name": "src/davinci-eight/core/ContextKahuna.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/ContextMonitor.ts": {
            "name": "src/davinci-eight/core/ContextMonitor.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/ContextUnique.ts": {
            "name": "src/davinci-eight/core/ContextUnique.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/DrawContext.ts": {
            "name": "src/davinci-eight/core/DrawContext.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/ElementBuffer.ts": {
            "name": "src/davinci-eight/core/ElementBuffer.ts",
            "modules": {},
            "classes": {
                "ElementBuffer": 1,
                "ElementArray": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/Face3.ts": {
            "name": "src/davinci-eight/core/Face3.ts",
            "modules": {},
            "classes": {
                "Face3": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/IBuffer.ts": {
            "name": "src/davinci-eight/core/IBuffer.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/IContextConsumer.ts": {
            "name": "src/davinci-eight/core/IContextConsumer.ts",
            "modules": {},
            "classes": {
                "IContextConsumer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/IContextProvider.ts": {
            "name": "src/davinci-eight/core/IContextProvider.ts",
            "modules": {},
            "classes": {
                "IContextProvider": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/IDrawable.ts": {
            "name": "src/davinci-eight/core/IDrawable.ts",
            "modules": {},
            "classes": {
                "IDrawable": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/IMaterial.ts": {
            "name": "src/davinci-eight/core/IMaterial.ts",
            "modules": {},
            "classes": {
                "IMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/IPrologCommand.ts": {
            "name": "src/davinci-eight/core/IPrologCommand.ts",
            "modules": {},
            "classes": {
                "IPrologCommand": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/ITexture.ts": {
            "name": "src/davinci-eight/core/ITexture.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/ITexture2D.ts": {
            "name": "src/davinci-eight/core/ITexture2D.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/IUnknown.ts": {
            "name": "src/davinci-eight/core/IUnknown.ts",
            "modules": {},
            "classes": {
                "IUnknown": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/Line3.ts": {
            "name": "src/davinci-eight/core/Line3.ts",
            "modules": {},
            "classes": {
                "Line3": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/Point3.ts": {
            "name": "src/davinci-eight/core/Point3.ts",
            "modules": {},
            "classes": {
                "Point3": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/ShaderVariableDecl.ts": {
            "name": "src/davinci-eight/core/ShaderVariableDecl.ts",
            "modules": {},
            "classes": {
                "ShaderVariableDecl": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/Symbolic.ts": {
            "name": "src/davinci-eight/core/Symbolic.ts",
            "modules": {},
            "classes": {
                "Symbolic": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/UniformData.ts": {
            "name": "src/davinci-eight/core/UniformData.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/UniformDataVisitor.ts": {
            "name": "src/davinci-eight/core/UniformDataVisitor.ts",
            "modules": {},
            "classes": {
                "UniformDataVisitor": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/UniformLocation.ts": {
            "name": "src/davinci-eight/core/UniformLocation.ts",
            "modules": {},
            "classes": {
                "UniformLocation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/UniformMetaInfo.ts": {
            "name": "src/davinci-eight/core/UniformMetaInfo.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/getAttribVarName.ts": {
            "name": "src/davinci-eight/core/getAttribVarName.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core/getUniformVarName.ts": {
            "name": "src/davinci-eight/core/getUniformVarName.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/curves/Curve.ts": {
            "name": "src/davinci-eight/curves/Curve.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/geometries/BarnGeometry.ts": {
            "name": "src/davinci-eight/geometries/BarnGeometry.ts",
            "modules": {
                "geometries": 1
            },
            "classes": {
                "BarnGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/geometries/CuboidGeometry.ts": {
            "name": "src/davinci-eight/geometries/CuboidGeometry.ts",
            "modules": {},
            "classes": {
                "CuboidGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/geometries/Geometry.ts": {
            "name": "src/davinci-eight/geometries/Geometry.ts",
            "modules": {},
            "classes": {
                "Geometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/geometries/GeometryAttribute.ts": {
            "name": "src/davinci-eight/geometries/GeometryAttribute.ts",
            "modules": {},
            "classes": {
                "GeometryAttribute": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/geometries/GeometryData.ts": {
            "name": "src/davinci-eight/geometries/GeometryData.ts",
            "modules": {},
            "classes": {
                "GeometryData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/geometries/GeometryElements.ts": {
            "name": "src/davinci-eight/geometries/GeometryElements.ts",
            "modules": {},
            "classes": {
                "GeometryElements": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/geometries/GeometryMeta.ts": {
            "name": "src/davinci-eight/geometries/GeometryMeta.ts",
            "modules": {},
            "classes": {
                "GeometryMeta": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/geometries/GeometryOld.ts": {
            "name": "src/davinci-eight/geometries/GeometryOld.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/geometries/IBufferGeometry.ts": {
            "name": "src/davinci-eight/geometries/IBufferGeometry.ts",
            "modules": {},
            "classes": {
                "IBufferGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/geometries/KleinBottleGeometry.ts": {
            "name": "src/davinci-eight/geometries/KleinBottleGeometry.ts",
            "modules": {},
            "classes": {
                "KleinBottleGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/geometries/MobiusStripGeometry.ts": {
            "name": "src/davinci-eight/geometries/MobiusStripGeometry.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/geometries/Simplex.ts": {
            "name": "src/davinci-eight/geometries/Simplex.ts",
            "modules": {},
            "classes": {
                "Simplex": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/geometries/Simplex1Geometry.ts": {
            "name": "src/davinci-eight/geometries/Simplex1Geometry.ts",
            "modules": {},
            "classes": {
                "Simplex1Geometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/geometries/SurfaceGeometry.ts": {
            "name": "src/davinci-eight/geometries/SurfaceGeometry.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/geometries/TubeGeometry.ts": {
            "name": "src/davinci-eight/geometries/TubeGeometry.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/geometries/Vertex.ts": {
            "name": "src/davinci-eight/geometries/Vertex.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/geometries/VertexAttributeMap.ts": {
            "name": "src/davinci-eight/geometries/VertexAttributeMap.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/geometries/cube.ts": {
            "name": "src/davinci-eight/geometries/cube.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/geometries/quadrilateral.ts": {
            "name": "src/davinci-eight/geometries/quadrilateral.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/geometries/tetrahedron.ts": {
            "name": "src/davinci-eight/geometries/tetrahedron.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/geometries/toGeometryMeta.ts": {
            "name": "src/davinci-eight/geometries/toGeometryMeta.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/glsl/Token.d.ts": {
            "name": "src/davinci-eight/glsl/Token.d.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/glsl/expr.ts": {
            "name": "src/davinci-eight/glsl/expr.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/i18n/LocalizableMessage.ts": {
            "name": "src/davinci-eight/i18n/LocalizableMessage.ts",
            "modules": {},
            "classes": {
                "LocalizableMessage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/i18n/readOnly.ts": {
            "name": "src/davinci-eight/i18n/readOnly.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/materials/HTMLScriptsMaterial.ts": {
            "name": "src/davinci-eight/materials/HTMLScriptsMaterial.ts",
            "modules": {},
            "classes": {
                "HTMLScriptsMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/materials/LineMaterial.ts": {
            "name": "src/davinci-eight/materials/LineMaterial.ts",
            "modules": {},
            "classes": {
                "LineMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/materials/Material.ts": {
            "name": "src/davinci-eight/materials/Material.ts",
            "modules": {},
            "classes": {
                "Material": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/materials/MeshMaterial.ts": {
            "name": "src/davinci-eight/materials/MeshMaterial.ts",
            "modules": {},
            "classes": {
                "MeshMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/materials/PointMaterial.ts": {
            "name": "src/davinci-eight/materials/PointMaterial.ts",
            "modules": {},
            "classes": {
                "PointMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/materials/SmartMaterial.ts": {
            "name": "src/davinci-eight/materials/SmartMaterial.ts",
            "modules": {},
            "classes": {
                "SmartMaterial": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/materials/SmartMaterialBuilder.ts": {
            "name": "src/davinci-eight/materials/SmartMaterialBuilder.ts",
            "modules": {},
            "classes": {
                "SmartMaterialBuilder": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Cartesian1.ts": {
            "name": "src/davinci-eight/math/Cartesian1.ts",
            "modules": {},
            "classes": {
                "Cartesian1": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Cartesian2.ts": {
            "name": "src/davinci-eight/math/Cartesian2.ts",
            "modules": {},
            "classes": {
                "Cartesian2": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Cartesian3.ts": {
            "name": "src/davinci-eight/math/Cartesian3.ts",
            "modules": {},
            "classes": {
                "Cartesian3": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Cartesian4.ts": {
            "name": "src/davinci-eight/math/Cartesian4.ts",
            "modules": {},
            "classes": {
                "Cartesian4": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Color.ts": {
            "name": "src/davinci-eight/math/Color.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Complex.ts": {
            "name": "src/davinci-eight/math/Complex.ts",
            "modules": {},
            "classes": {
                "Complex": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Dimensions.ts": {
            "name": "src/davinci-eight/math/Dimensions.ts",
            "modules": {},
            "classes": {
                "Dimensions": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Euclidean1.ts": {
            "name": "src/davinci-eight/math/Euclidean1.ts",
            "modules": {},
            "classes": {
                "Euclidean1": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Euclidean2.ts": {
            "name": "src/davinci-eight/math/Euclidean2.ts",
            "modules": {},
            "classes": {
                "Euclidean2": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Euclidean3.ts": {
            "name": "src/davinci-eight/math/Euclidean3.ts",
            "modules": {},
            "classes": {
                "Euclidean3": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/GeometricElement.ts": {
            "name": "src/davinci-eight/math/GeometricElement.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/LinearElement.ts": {
            "name": "src/davinci-eight/math/LinearElement.ts",
            "modules": {},
            "classes": {
                "LinearElement<I, M, S>": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Matrix.ts": {
            "name": "src/davinci-eight/math/Matrix.ts",
            "modules": {},
            "classes": {
                "Matrix<M>": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Matrix1.ts": {
            "name": "src/davinci-eight/math/Matrix1.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Matrix2.ts": {
            "name": "src/davinci-eight/math/Matrix2.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Matrix3.ts": {
            "name": "src/davinci-eight/math/Matrix3.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Matrix4.ts": {
            "name": "src/davinci-eight/math/Matrix4.ts",
            "modules": {},
            "classes": {
                "Matrix4": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Mutable.ts": {
            "name": "src/davinci-eight/math/Mutable.ts",
            "modules": {},
            "classes": {
                "Mutable": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Quaternion.ts": {
            "name": "src/davinci-eight/math/Quaternion.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Rational.ts": {
            "name": "src/davinci-eight/math/Rational.ts",
            "modules": {},
            "classes": {
                "Rational": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Rotor3.ts": {
            "name": "src/davinci-eight/math/Rotor3.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Spinor3.ts": {
            "name": "src/davinci-eight/math/Spinor3.ts",
            "modules": {},
            "classes": {
                "Spinor3": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Unit.ts": {
            "name": "src/davinci-eight/math/Unit.ts",
            "modules": {},
            "classes": {
                "Unit": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Vector1.ts": {
            "name": "src/davinci-eight/math/Vector1.ts",
            "modules": {},
            "classes": {
                "Vector1": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Vector2.ts": {
            "name": "src/davinci-eight/math/Vector2.ts",
            "modules": {},
            "classes": {
                "Vector2": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Vector3.ts": {
            "name": "src/davinci-eight/math/Vector3.ts",
            "modules": {},
            "classes": {
                "Vector3": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/Vector4.ts": {
            "name": "src/davinci-eight/math/Vector4.ts",
            "modules": {},
            "classes": {
                "Vector4": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/VectorN.ts": {
            "name": "src/davinci-eight/math/VectorN.ts",
            "modules": {},
            "classes": {
                "VectorN<T>": 1,
                "VectorN": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/mathcore.ts": {
            "name": "src/davinci-eight/math/mathcore.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/rotor3.ts": {
            "name": "src/davinci-eight/math/rotor3.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/wedgeXY.ts": {
            "name": "src/davinci-eight/math/wedgeXY.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/wedgeYZ.ts": {
            "name": "src/davinci-eight/math/wedgeYZ.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/math/wedgeZX.ts": {
            "name": "src/davinci-eight/math/wedgeZX.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/mesh/BoxBuilder.ts": {
            "name": "src/davinci-eight/mesh/BoxBuilder.ts",
            "modules": {},
            "classes": {
                "BoxBuilder": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/mesh/BoxMesh.ts": {
            "name": "src/davinci-eight/mesh/BoxMesh.ts",
            "modules": {},
            "classes": {
                "BoxMesh": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/mesh/CuboidMesh.ts": {
            "name": "src/davinci-eight/mesh/CuboidMesh.ts",
            "modules": {},
            "classes": {
                "CuboidMesh": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/mesh/CylinderArgs.ts": {
            "name": "src/davinci-eight/mesh/CylinderArgs.ts",
            "modules": {},
            "classes": {
                "CylinderArgs": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/mesh/EllipsoidMesh.ts": {
            "name": "src/davinci-eight/mesh/EllipsoidMesh.ts",
            "modules": {},
            "classes": {
                "EllipsoidMesh": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/mesh/prism.ts": {
            "name": "src/davinci-eight/mesh/prism.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/models/EulerModel.ts": {
            "name": "src/davinci-eight/models/EulerModel.ts",
            "modules": {},
            "classes": {
                "EulerModel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/models/Model3.ts": {
            "name": "src/davinci-eight/models/Model3.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/models/RigidBody3.ts": {
            "name": "src/davinci-eight/models/RigidBody3.ts",
            "modules": {},
            "classes": {
                "RigidBody3": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/programs/SimpleWebGLProgram.ts": {
            "name": "src/davinci-eight/programs/SimpleWebGLProgram.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/programs/createMaterial.ts": {
            "name": "src/davinci-eight/programs/createMaterial.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/programs/fragmentShader.ts": {
            "name": "src/davinci-eight/programs/fragmentShader.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/programs/makeWebGLShader.ts": {
            "name": "src/davinci-eight/programs/makeWebGLShader.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/programs/programFromScripts.ts": {
            "name": "src/davinci-eight/programs/programFromScripts.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/programs/smartProgram.ts": {
            "name": "src/davinci-eight/programs/smartProgram.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/programs/vertexShader.ts": {
            "name": "src/davinci-eight/programs/vertexShader.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/renderers/ContextRenderer.ts": {
            "name": "src/davinci-eight/renderers/ContextRenderer.ts",
            "modules": {},
            "classes": {
                "ContextRenderer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/renderers/FrameworkDrawContext.ts": {
            "name": "src/davinci-eight/renderers/FrameworkDrawContext.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/renderers/initWebGL.ts": {
            "name": "src/davinci-eight/renderers/initWebGL.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/renderers/renderer.ts": {
            "name": "src/davinci-eight/renderers/renderer.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/resources/TextureResource.ts": {
            "name": "src/davinci-eight/resources/TextureResource.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/scene/Canvas3D.ts": {
            "name": "src/davinci-eight/scene/Canvas3D.ts",
            "modules": {},
            "classes": {
                "Canvas3D": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/scene/Drawable.ts": {
            "name": "src/davinci-eight/scene/Drawable.ts",
            "modules": {},
            "classes": {
                "Drawable": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/scene/ICamera.ts": {
            "name": "src/davinci-eight/scene/ICamera.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/scene/IDrawList.ts": {
            "name": "src/davinci-eight/scene/IDrawList.ts",
            "modules": {},
            "classes": {
                "IDrawList": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/scene/KahunaList.ts": {
            "name": "src/davinci-eight/scene/KahunaList.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/scene/MonitorList.ts": {
            "name": "src/davinci-eight/scene/MonitorList.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/scene/PerspectiveCamera.ts": {
            "name": "src/davinci-eight/scene/PerspectiveCamera.ts",
            "modules": {},
            "classes": {
                "PerspectiveCamera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/scene/Scene.ts": {
            "name": "src/davinci-eight/scene/Scene.ts",
            "modules": {},
            "classes": {
                "Scene": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/scene/createDrawList.ts": {
            "name": "src/davinci-eight/scene/createDrawList.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/shaders/ShareableWebGLShader.ts": {
            "name": "src/davinci-eight/shaders/ShareableWebGLShader.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/uniforms/CityTemperature.ts": {
            "name": "src/davinci-eight/uniforms/CityTemperature.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/utils/IUnknownArray.ts": {
            "name": "src/davinci-eight/utils/IUnknownArray.ts",
            "modules": {},
            "classes": {
                "IUnknownArray": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/utils/Shareable.ts": {
            "name": "src/davinci-eight/utils/Shareable.ts",
            "modules": {},
            "classes": {
                "Shareable": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/utils/StringIUnknownMap.ts": {
            "name": "src/davinci-eight/utils/StringIUnknownMap.ts",
            "modules": {},
            "classes": {
                "StringIUnknownMap": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/utils/WindowAnimationRunner.ts": {
            "name": "src/davinci-eight/utils/WindowAnimationRunner.ts",
            "modules": {},
            "classes": {
                "WindowAnimationRunner": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/utils/contextProxy.ts": {
            "name": "src/davinci-eight/utils/contextProxy.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/utils/randumbInteger.ts": {
            "name": "src/davinci-eight/utils/randumbInteger.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/utils/windowAnimationRunner.ts": {
            "name": "src/davinci-eight/utils/windowAnimationRunner.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/utils/workbench3D.ts": {
            "name": "src/davinci-eight/utils/workbench3D.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/davinci-eight/core.ts": {
            "name": "src/davinci-eight/core.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "EIGHT": {
            "name": "EIGHT",
            "submodules": {
                "geometries": 1
            },
            "classes": {
                "Frustum": 1,
                "Perspective": 1,
                "View": 1,
                "createView": 1,
                "ContextAttributesLogger": 1,
                "EIGHTLogger": 1,
                "VersionLogger": 1,
                "WebGLClear": 1,
                "WebGLClearColor": 1,
                "WebGLEnable": 1,
                "AttribLocation": 1,
                "AttribMetaInfo": 1,
                "Color": 1,
                "ContextController": 1,
                "ElementBuffer": 1,
                "ElementArray": 1,
                "Face3": 1,
                "IContextConsumer": 1,
                "IContextProvider": 1,
                "IDrawable": 1,
                "IMaterial": 1,
                "IPrologCommand": 1,
                "IUnknown": 1,
                "Line3": 1,
                "Point3": 1,
                "ShaderVariableDecl": 1,
                "Symbolic": 1,
                "UniformDataVisitor": 1,
                "UniformLocation": 1,
                "BarnGeometry": 1,
                "CuboidGeometry": 1,
                "Geometry": 1,
                "GeometryAttribute": 1,
                "GeometryData": 1,
                "GeometryElements": 1,
                "GeometryMeta": 1,
                "IBufferGeometry": 1,
                "KleinBottleGeometry": 1,
                "Simplex": 1,
                "Simplex1Geometry": 1,
                "LocalizableMessage": 1,
                "HTMLScriptsMaterial": 1,
                "LineMaterial": 1,
                "Material": 1,
                "MeshMaterial": 1,
                "PointMaterial": 1,
                "SmartMaterial": 1,
                "SmartMaterialBuilder": 1,
                "Cartesian1": 1,
                "Cartesian2": 1,
                "Cartesian3": 1,
                "Cartesian4": 1,
                "Complex": 1,
                "Dimensions": 1,
                "Euclidean1": 1,
                "Euclidean2": 1,
                "Euclidean3": 1,
                "LinearElement<I, M, S>": 1,
                "Matrix<M>": 1,
                "Matrix4": 1,
                "Mutable": 1,
                "Rational": 1,
                "Spinor3": 1,
                "Unit": 1,
                "Vector1": 1,
                "Vector2": 1,
                "Vector3": 1,
                "Vector4": 1,
                "VectorN<T>": 1,
                "VectorN": 1,
                "BoxBuilder": 1,
                "BoxMesh": 1,
                "CuboidMesh": 1,
                "CylinderArgs": 1,
                "EllipsoidMesh": 1,
                "EulerModel": 1,
                "RigidBody3": 1,
                "ContextRenderer": 1,
                "Canvas3D": 1,
                "Drawable": 1,
                "IDrawList": 1,
                "PerspectiveCamera": 1,
                "Scene": 1,
                "IUnknownArray": 1,
                "Shareable": 1,
                "StringIUnknownMap": 1,
                "WindowAnimationRunner": 1
            },
            "fors": {},
            "namespaces": {},
            "file": "src/davinci-eight/utils/WindowAnimationRunner.ts",
            "line": 1
        },
        "geometries": {
            "name": "geometries",
            "submodules": {},
            "classes": {
                "BarnGeometry": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/geometries/BarnGeometry.ts",
            "line": 20,
            "description": "The basic barn similar to that described in \"Computer Graphics using OpenGL\", by Hill and Kelly.\nTen (10) vertices are used to define the barn.\nThe floor vertices are lablled 0, 1, 6, 5.\nThe corresponding ceiling vertices are labelled 4, 2, 7, 9.\nThe roof peak vertices are labelled 3, 8."
        }
    },
    "classes": {
        "Frustum": {
            "name": "Frustum",
            "shortname": "Frustum",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/cameras/Frustum.ts",
            "line": 5,
            "extends": "Camera"
        },
        "Perspective": {
            "name": "Perspective",
            "shortname": "Perspective",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/cameras/Perspective.ts",
            "line": 5,
            "extends": "View"
        },
        "View": {
            "name": "View",
            "shortname": "View",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/cameras/View.ts",
            "line": 7
        },
        "createView": {
            "name": "createView",
            "shortname": "createView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/cameras/createView.ts",
            "line": 14,
            "is_constructor": 1
        },
        "ContextAttributesLogger": {
            "name": "ContextAttributesLogger",
            "shortname": "ContextAttributesLogger",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/commands/ContextAttributesLogger.ts",
            "line": 7,
            "description": "<p>\nDisplays details about the WegGL version to the console.\n<p>",
            "extends": "Shareable",
            "implements": "IContextCommand"
        },
        "EIGHTLogger": {
            "name": "EIGHTLogger",
            "shortname": "EIGHTLogger",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/commands/EIGHTLogger.ts",
            "line": 17,
            "description": "<p>\nInitializes <b>the</b> `type` property to 'EIGHTLogger'.\n</p>",
            "extends": "Shareable",
            "implements": "IContextCommand",
            "is_constructor": 1
        },
        "VersionLogger": {
            "name": "VersionLogger",
            "shortname": "VersionLogger",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/commands/VersionLogger.ts",
            "line": 19,
            "description": "<p>\nDisplays details about the WegGL version to the console.\n<p> \n<p>\nInitializes the <code>type</code> property to <code>'VersionLogger'</code> for reference count tracking.\n<p>",
            "extends": "Shareable",
            "implements": "IContextCommand",
            "is_constructor": 1
        },
        "WebGLClear": {
            "name": "WebGLClear",
            "shortname": "WebGLClear",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/commands/WebGLClear.ts",
            "line": 23,
            "description": "<p>\nclear(mask: number): void\n<p>",
            "extends": "Shareable",
            "implements": "IContextCommand",
            "is_constructor": 1
        },
        "WebGLClearColor": {
            "name": "WebGLClearColor",
            "shortname": "WebGLClearColor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/commands/WebGLClearColor.ts",
            "line": 23,
            "description": "<p>\nclearColor(red: number, green: number, blue: number, alpha: number): void\n<p>",
            "extends": "Shareable",
            "implements": "IContextConsumer",
            "is_constructor": 1
        },
        "WebGLEnable": {
            "name": "WebGLEnable",
            "shortname": "WebGLEnable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/commands/WebGLEnable.ts",
            "line": 20,
            "description": "<p>\nenable(capability: number): void\n<p>",
            "extends": "Shareable",
            "implements": "IContextConsumer",
            "is_constructor": 1
        },
        "AttribLocation": {
            "name": "AttribLocation",
            "shortname": "AttribLocation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/core/AttribLocation.ts",
            "line": 21,
            "description": "Convenience class that assists in the lifecycle management of an atrribute used in a vertex shader.\nIn particular, this class manages buffer allocation, location caching, and data binding.",
            "implements": "IContextProgramConsumer",
            "is_constructor": 1,
            "params": [
                {
                    "name": "manager",
                    "description": "Unused. May be used later e.g. for mirroring.",
                    "type": "IContextProvider"
                },
                {
                    "name": "name",
                    "description": "The name of the variable as it appears in the GLSL program.",
                    "type": "String"
                }
            ]
        },
        "AttribMetaInfo": {
            "name": "AttribMetaInfo",
            "shortname": "AttribMetaInfo",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/core/AttribMetaInfo.ts",
            "line": 1
        },
        "Color": {
            "name": "Color",
            "shortname": "Color",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/core/Color.ts",
            "line": 24,
            "description": "<p>\nA mutable type representing a color through its RGB components.\n</p>\n<p>\nWARNING: In many object-oriented designs, types representing values are completely immutable.\nIn a graphics library where data changes rapidly and garbage collection might become an issue,\nit is common to use reference types, such as in this design. This mutability can lead to\ndifficult bugs because it is hard to reason about where a color may have changed. \n</p>",
            "implements": "Mutable<number[]>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Number[]"
                }
            ]
        },
        "ContextController": {
            "name": "ContextController",
            "shortname": "ContextController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/core/ContextController.ts",
            "line": 1
        },
        "ElementBuffer": {
            "name": "ElementBuffer",
            "shortname": "ElementBuffer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/core/ElementBuffer.ts",
            "line": 7,
            "description": "Manages the WebGLBuffer used to support gl.drawElements()."
        },
        "ElementArray": {
            "name": "ElementArray",
            "shortname": "ElementArray",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/core/ElementBuffer.ts",
            "line": 15,
            "is_constructor": 1
        },
        "Face3": {
            "name": "Face3",
            "shortname": "Face3",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/core/Face3.ts",
            "line": 32,
            "is_constructor": 1,
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "c",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "normals",
                    "description": "The per-vertex normals for this face (3) or face normal (1).",
                    "type": "Cartesian3[]"
                }
            ]
        },
        "IContextConsumer": {
            "name": "IContextConsumer",
            "shortname": "IContextConsumer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/core/IContextConsumer.ts",
            "line": 2,
            "description": "This interface standardizes the concept of an implementation being dependent upon\na WebGL rendering context. The notification methods for context gain, loss, and free\nallow the implementation to participate in the dynamic and volatile environment\nwhereupon a browser may reset its WebGL rendering contexts."
        },
        "IContextProvider": {
            "name": "IContextProvider",
            "shortname": "IContextProvider",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/core/IContextProvider.ts",
            "line": 14,
            "extends": "IUnknown"
        },
        "IDrawable": {
            "name": "IDrawable",
            "shortname": "IDrawable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/core/IDrawable.ts",
            "line": 6,
            "description": "<p>\nThe Drawable interface indicates that the implementation can make a call\nto either drawArrays or drawElements on the WebGL rendering context.\nIt also contains other meta-data that may be used to optimize the rendering.\ne.g. transparency, visibility, bounding volumes, etc.\n</p>",
            "extends": "IResource"
        },
        "IMaterial": {
            "name": "IMaterial",
            "shortname": "IMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/core/IMaterial.ts",
            "line": 8,
            "description": "<p>\nThe role of a IMaterial is to manage WebGLProgram(s) consisting of a vertex shader and fragment shader.\nThe Program must be able to provide introspection information that describes the program.\n</p>",
            "extends": "UniformDataVisitor",
            "beta": 1
        },
        "IPrologCommand": {
            "name": "IPrologCommand",
            "shortname": "IPrologCommand",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/core/IPrologCommand.ts",
            "line": 4,
            "description": "The interface to be satisfied by commands run in the prolog phase of the animation loop.",
            "extends": "IUnknown"
        },
        "IUnknown": {
            "name": "IUnknown",
            "shortname": "IUnknown",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/core/IUnknown.ts",
            "line": 1,
            "description": "<p>\nEnables clients to manage the existence of an object through the addRef and release methods.\n</p>",
            "since": "2.75.0"
        },
        "Line3": {
            "name": "Line3",
            "shortname": "Line3",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/core/Line3.ts",
            "line": 7,
            "is_constructor": 1,
            "params": [
                {
                    "name": "a",
                    "description": "The index of a vertex in some array.",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "The index of a vertex in some array.",
                    "type": "Number"
                }
            ]
        },
        "Point3": {
            "name": "Point3",
            "shortname": "Point3",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/core/Point3.ts",
            "line": 6,
            "is_constructor": 1,
            "params": [
                {
                    "name": "a",
                    "description": "The index of a vertex in some array.",
                    "type": "Number"
                }
            ]
        },
        "ShaderVariableDecl": {
            "name": "ShaderVariableDecl",
            "shortname": "ShaderVariableDecl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/core/ShaderVariableDecl.ts",
            "line": 1
        },
        "Symbolic": {
            "name": "Symbolic",
            "shortname": "Symbolic",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/core/Symbolic.ts",
            "line": 1,
            "description": "<p>\nCanonical variable names, which also act as semantic identifiers for name overrides.\nThese names must be stable to avoid breaking custom vertex and fragment shaders.\n</p>"
        },
        "UniformDataVisitor": {
            "name": "UniformDataVisitor",
            "shortname": "UniformDataVisitor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/core/UniformDataVisitor.ts",
            "line": 10,
            "beta": 1
        },
        "UniformLocation": {
            "name": "UniformLocation",
            "shortname": "UniformLocation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "file": "src/davinci-eight/core/UniformLocation.ts",
            "line": 32,
            "description": "Utility class for managing a shader uniform variable.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "manager",
                    "description": "Unused. May be used later e.g. for mirroring.",
                    "type": "IContextProvider"
                },
                {
                    "name": "name",
                    "description": "The name of the uniform variable, as it appears in the GLSL shader code.",
                    "type": "String"
                }
            ]
        },
        "BarnGeometry": {
            "name": "BarnGeometry",
            "shortname": "BarnGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "submodule": "geometries",
            "namespace": "",
            "file": "src/davinci-eight/geometries/BarnGeometry.ts",
            "line": 20,
            "description": "The basic barn similar to that described in \"Computer Graphics using OpenGL\", by Hill and Kelly.\nTen (10) vertices are used to define the barn.\nThe floor vertices are lablled 0, 1, 6, 5.\nThe corresponding ceiling vertices are labelled 4, 2, 7, 9.\nThe roof peak vertices are labelled 3, 8.",
            "is_constructor": 1
        },
        "CuboidGeometry": {
            "name": "CuboidGeometry",
            "shortname": "CuboidGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/geometries/CuboidGeometry.ts",
            "line": 11
        },
        "Geometry": {
            "name": "Geometry",
            "shortname": "Geometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/geometries/Geometry.ts",
            "line": 29,
            "description": "A list of simplices (data) with information about dimensionality and vertex properties (meta). \nThis class should be used as an abstract base or concrete class when constructing\ngeometries that are to be manipulated in JavaScript (as opposed to GLSL shaders).",
            "is_constructor": 1
        },
        "GeometryAttribute": {
            "name": "GeometryAttribute",
            "shortname": "GeometryAttribute",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/geometries/GeometryAttribute.ts",
            "line": 54,
            "description": "<p>\nHolds all the values of a particular attribute.\nThe size property describes how to break up the values.\nThe length of the values should be an integer multiple of the size.\n</p>\n\n var x = 3;",
            "is_constructor": 1,
            "params": [
                {
                    "name": "values",
                    "description": "",
                    "type": "VectorN<number>"
                },
                {
                    "name": "size",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "GeometryData": {
            "name": "GeometryData",
            "shortname": "GeometryData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/geometries/GeometryData.ts",
            "line": 25,
            "is_constructor": 1,
            "params": [
                {
                    "name": "k",
                    "description": "<p>The dimensionality of the primitives.</p>",
                    "type": "Number"
                },
                {
                    "name": "indices",
                    "description": "<p>A list of index into the attributes</p>",
                    "type": "VectorN"
                },
                {
                    "name": "attributes",
                    "description": "}",
                    "type": "[name:string]: GeometryAttribute"
                }
            ]
        },
        "GeometryElements": {
            "name": "GeometryElements",
            "shortname": "GeometryElements",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/geometries/GeometryElements.ts",
            "line": 26,
            "description": "<p>\nA geometry holds the elements or arrays sent to the GLSL pipeline.\n</p>\n<p>\nThese instructions are in a compact form suitable for populating WebGLBuffer(s).\n</p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "data",
                    "description": "The instructions for drawing the geometry.",
                    "type": "GeometryData"
                },
                {
                    "name": "meta",
                    "description": "",
                    "type": "GeometryMeta"
                }
            ]
        },
        "GeometryMeta": {
            "name": "GeometryMeta",
            "shortname": "GeometryMeta",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/geometries/GeometryMeta.ts",
            "line": 1
        },
        "IBufferGeometry": {
            "name": "IBufferGeometry",
            "shortname": "IBufferGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/geometries/IBufferGeometry.ts",
            "line": 5,
            "description": "A buffer geometry is implicitly bound to a single context.",
            "extends": "IUnkown"
        },
        "KleinBottleGeometry": {
            "name": "KleinBottleGeometry",
            "shortname": "KleinBottleGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/geometries/KleinBottleGeometry.ts",
            "line": 33,
            "description": "By connecting the edge of a Mobius Strip we get a Klein Bottle.\nhttp://virtualmathmuseum.org/Surface/klein_bottle/klein_bottle.html",
            "extends": "SurfaceGeometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "uSegments",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "vSegments",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "Simplex": {
            "name": "Simplex",
            "shortname": "Simplex",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/geometries/Simplex.ts",
            "line": 67,
            "description": "A simplex is the generalization of a triangle or tetrahedron to arbitrary dimensions.\nA k-simplex is the convex hull of its k + 1 vertices.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "k",
                    "description": "The initial number of vertices in the simplex is k + 1.",
                    "type": "Number"
                }
            ]
        },
        "Simplex1Geometry": {
            "name": "Simplex1Geometry",
            "shortname": "Simplex1Geometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/geometries/Simplex1Geometry.ts",
            "line": 13,
            "is_constructor": 1
        },
        "LocalizableMessage": {
            "name": "LocalizableMessage",
            "shortname": "LocalizableMessage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/i18n/LocalizableMessage.ts",
            "line": 1
        },
        "HTMLScriptsMaterial": {
            "name": "HTMLScriptsMaterial",
            "shortname": "HTMLScriptsMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/materials/HTMLScriptsMaterial.ts",
            "line": 26,
            "extends": "Material",
            "is_constructor": 1,
            "params": [
                {
                    "name": "contexts",
                    "description": "",
                    "type": "ContextMonitor[]"
                },
                {
                    "name": "scriptIds",
                    "description": "",
                    "type": "String[]"
                },
                {
                    "name": "dom",
                    "description": "",
                    "type": "Document"
                }
            ]
        },
        "LineMaterial": {
            "name": "LineMaterial",
            "shortname": "LineMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/materials/LineMaterial.ts",
            "line": 26,
            "extends": "Material",
            "is_constructor": 1,
            "params": [
                {
                    "name": "monitors",
                    "description": "[ContextMonitor[]=[]]"
                }
            ],
            "parameters": "[MeshNormalParameters]"
        },
        "Material": {
            "name": "Material",
            "shortname": "Material",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/materials/Material.ts",
            "line": 44,
            "extends": "IMaterial",
            "is_constructor": 1,
            "params": [
                {
                    "name": "contexts",
                    "description": "",
                    "type": "ContextMonitor[]"
                },
                {
                    "name": "type",
                    "description": "The class name, used for logging and serialization.",
                    "type": "String"
                }
            ]
        },
        "MeshMaterial": {
            "name": "MeshMaterial",
            "shortname": "MeshMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/materials/MeshMaterial.ts",
            "line": 26,
            "extends": "Material",
            "is_constructor": 1,
            "params": [
                {
                    "name": "monitors",
                    "description": "[ContextMonitor[]=[]]"
                }
            ],
            "parameters": "[MeshNormalParameters]"
        },
        "PointMaterial": {
            "name": "PointMaterial",
            "shortname": "PointMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/materials/PointMaterial.ts",
            "line": 26,
            "extends": "Material",
            "is_constructor": 1,
            "params": [
                {
                    "name": "monitors",
                    "description": "[ContextMonitor[]=[]]"
                }
            ],
            "parameters": "[MeshNormalParameters]"
        },
        "SmartMaterial": {
            "name": "SmartMaterial",
            "shortname": "SmartMaterial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/materials/SmartMaterial.ts",
            "line": 44,
            "description": "<p>\nSmartMaterial constructs a vertex shader and a fragment shader.\nThe shader codes are configured by specifying attributes, uniforms and varyings.\nThe default configuration is produces minimal shaders.\n<p>",
            "extends": "Material",
            "is_constructor": 1,
            "params": [
                {
                    "name": "contexts",
                    "description": "",
                    "type": "ContextMonitor[]"
                },
                {
                    "name": "geometry",
                    "description": "This parameter determines the attributes used in the shaders.",
                    "type": "GeometryMeta"
                }
            ]
        },
        "SmartMaterialBuilder": {
            "name": "SmartMaterialBuilder",
            "shortname": "SmartMaterialBuilder",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/materials/SmartMaterialBuilder.ts",
            "line": 48,
            "is_constructor": 1,
            "params": [
                {
                    "name": "elements",
                    "description": "Optional.",
                    "type": "Geometry"
                }
            ]
        },
        "Cartesian1": {
            "name": "Cartesian1",
            "shortname": "Cartesian1",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/math/Cartesian1.ts",
            "line": 1
        },
        "Cartesian2": {
            "name": "Cartesian2",
            "shortname": "Cartesian2",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/math/Cartesian2.ts",
            "line": 1
        },
        "Cartesian3": {
            "name": "Cartesian3",
            "shortname": "Cartesian3",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/math/Cartesian3.ts",
            "line": 1
        },
        "Cartesian4": {
            "name": "Cartesian4",
            "shortname": "Cartesian4",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/math/Cartesian4.ts",
            "line": 1
        },
        "Complex": {
            "name": "Complex",
            "shortname": "Complex",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/math/Complex.ts",
            "line": 51,
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The real part of the complex number."
                },
                {
                    "name": "y",
                    "description": "The imaginary part of the complex number."
                }
            ]
        },
        "Dimensions": {
            "name": "Dimensions",
            "shortname": "Dimensions",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/math/Dimensions.ts",
            "line": 46,
            "description": "The Dimensions class captures the physical dimensions associated with a unit of measure.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "mass",
                    "description": "The mass component of the dimensions object.",
                    "type": "Rational"
                },
                {
                    "name": "length",
                    "description": "The length component of the dimensions object.",
                    "type": "Rational"
                },
                {
                    "name": "time",
                    "description": "The time component of the dimensions object.",
                    "type": "Rational"
                },
                {
                    "name": "charge",
                    "description": "The charge component of the dimensions object.",
                    "type": "Rational"
                },
                {
                    "name": "temperature",
                    "description": "The temperature component of the dimensions object.",
                    "type": "Rational"
                },
                {
                    "name": "amount",
                    "description": "The amount component of the dimensions object.",
                    "type": "Rational"
                },
                {
                    "name": "intensity",
                    "description": "The intensity component of the dimensions object.",
                    "type": "Rational"
                }
            ]
        },
        "Euclidean1": {
            "name": "Euclidean1",
            "shortname": "Euclidean1",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/math/Euclidean1.ts",
            "line": 38,
            "description": "The Euclidean1 class represents a multivector for a 1-dimensional linear space with a Euclidean metric.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "w",
                    "description": "The scalar part of the multivector.",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "The vector component of the multivector in the x-direction.",
                    "type": "Number"
                },
                {
                    "name": "uom",
                    "description": "The optional unit of measure."
                }
            ]
        },
        "Euclidean2": {
            "name": "Euclidean2",
            "shortname": "Euclidean2",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/math/Euclidean2.ts",
            "line": 411,
            "description": "The Euclidean2 class represents a multivector for a 2-dimensional linear space with a Euclidean metric.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "w",
                    "description": "The scalar part of the multivector.",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "The vector component of the multivector in the x-direction.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The vector component of the multivector in the y-direction.",
                    "type": "Number"
                },
                {
                    "name": "xy",
                    "description": "The pseudoscalar part of the multivector.",
                    "type": "Number"
                },
                {
                    "name": "uom",
                    "description": "The optional unit of measure."
                }
            ]
        },
        "Euclidean3": {
            "name": "Euclidean3",
            "shortname": "Euclidean3",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/math/Euclidean3.ts",
            "line": 684,
            "description": "The Euclidean3 class represents a multivector for a 3-dimensional vector space with a Euclidean metric."
        },
        "LinearElement<I, M, S>": {
            "name": "LinearElement<I, M, S>",
            "shortname": "LinearElement<I, M, S>",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/math/LinearElement.ts",
            "line": 1,
            "description": "A mutable element of a linear space."
        },
        "Matrix<M>": {
            "name": "Matrix<M>",
            "shortname": "Matrix<M>",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/math/Matrix.ts",
            "line": 1
        },
        "Matrix4": {
            "name": "Matrix4",
            "shortname": "Matrix4",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/math/Matrix4.ts",
            "line": 13,
            "description": "4x4 matrix integrating with WebGL."
        },
        "Mutable": {
            "name": "Mutable",
            "shortname": "Mutable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/math/Mutable.ts",
            "line": 1
        },
        "Rational": {
            "name": "Rational",
            "shortname": "Rational",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/math/Rational.ts",
            "line": 20,
            "description": "The Rational class represents a rational number.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "n",
                    "description": "The numerator, an integer.",
                    "type": "Number"
                },
                {
                    "name": "d",
                    "description": "The denominator, an integer.",
                    "type": "Number"
                }
            ]
        },
        "Spinor3": {
            "name": "Spinor3",
            "shortname": "Spinor3",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/math/Spinor3.ts",
            "line": 10
        },
        "Unit": {
            "name": "Unit",
            "shortname": "Unit",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/math/Unit.ts",
            "line": 209,
            "description": "The Unit class represents the units for a measure.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scale",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "dimensions",
                    "description": "",
                    "type": "Dimensions"
                },
                {
                    "name": "labels",
                    "description": "The label strings to use for each dimension.",
                    "type": "String[]"
                }
            ]
        },
        "Vector1": {
            "name": "Vector1",
            "shortname": "Vector1",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/math/Vector1.ts",
            "line": 10,
            "is_constructor": 1,
            "params": [
                {
                    "name": "data",
                    "description": "Default is [0].",
                    "type": "Number[]"
                },
                {
                    "name": "modified",
                    "description": "Default is false.",
                    "type": "Boolean"
                }
            ]
        },
        "Vector2": {
            "name": "Vector2",
            "shortname": "Vector2",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/math/Vector2.ts",
            "line": 11,
            "is_constructor": 1,
            "params": [
                {
                    "name": "data",
                    "description": "Default is [0, 0].",
                    "type": "Number[]"
                },
                {
                    "name": "modified",
                    "description": "Default is false.",
                    "type": "Boolean"
                }
            ]
        },
        "Vector3": {
            "name": "Vector3",
            "shortname": "Vector3",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/math/Vector3.ts",
            "line": 23,
            "is_constructor": 1,
            "params": [
                {
                    "name": "data",
                    "description": "Default is [0, 0, 0].",
                    "type": "Number[]"
                },
                {
                    "name": "modified",
                    "description": "Default is false;",
                    "type": "Boolean"
                }
            ]
        },
        "Vector4": {
            "name": "Vector4",
            "shortname": "Vector4",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/math/Vector4.ts",
            "line": 11,
            "is_constructor": 1,
            "params": [
                {
                    "name": "data",
                    "description": "Default is [0, 0, 0, 0].",
                    "type": "Number[]"
                },
                {
                    "name": "modified",
                    "description": "Default is false.",
                    "type": "Boolean"
                }
            ]
        },
        "VectorN<T>": {
            "name": "VectorN<T>",
            "shortname": "VectorN<T>",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/math/VectorN.ts",
            "line": 57,
            "extends": "Mutable<T[]>"
        },
        "VectorN": {
            "name": "VectorN",
            "shortname": "VectorN",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/math/VectorN.ts",
            "line": 66,
            "is_constructor": 1,
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "T[]"
                },
                {
                    "name": "modified",
                    "description": "[boolean = false]"
                },
                {
                    "name": "size",
                    "description": "",
                    "optional": true
                }
            ]
        },
        "BoxBuilder": {
            "name": "BoxBuilder",
            "shortname": "BoxBuilder",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/mesh/BoxBuilder.ts",
            "line": 8
        },
        "BoxMesh": {
            "name": "BoxMesh",
            "shortname": "BoxMesh",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/mesh/BoxMesh.ts",
            "line": 9,
            "is_constructor": 1,
            "params": [
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "depth",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "CuboidMesh": {
            "name": "CuboidMesh",
            "shortname": "CuboidMesh",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/mesh/CuboidMesh.ts",
            "line": 4
        },
        "CylinderArgs": {
            "name": "CylinderArgs",
            "shortname": "CylinderArgs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/mesh/CylinderArgs.ts",
            "line": 8
        },
        "EllipsoidMesh": {
            "name": "EllipsoidMesh",
            "shortname": "EllipsoidMesh",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/mesh/EllipsoidMesh.ts",
            "line": 3
        },
        "EulerModel": {
            "name": "EulerModel",
            "shortname": "EulerModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/models/EulerModel.ts",
            "line": 11,
            "is_constructor": 1
        },
        "RigidBody3": {
            "name": "RigidBody3",
            "shortname": "RigidBody3",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/models/RigidBody3.ts",
            "line": 19,
            "description": "The `attitude` is initialized to the default for `Spinor3`.\nThe `position` is initialized to the default for `Vector3`.\nThis class assumes that it is being used concretely if the type is 'RigidBody3'.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "type",
                    "description": "The class name of the derived class. Defaults to 'RigidBody3'.",
                    "type": "String"
                }
            ]
        },
        "ContextRenderer": {
            "name": "ContextRenderer",
            "shortname": "ContextRenderer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/renderers/ContextRenderer.ts",
            "line": 7,
            "description": "This interface is to be implemented by classes associated with a single context.\nThis does mean that the commands are not shared.",
            "extends": "IUnknown"
        },
        "Canvas3D": {
            "name": "Canvas3D",
            "shortname": "Canvas3D",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/scene/Canvas3D.ts",
            "line": 40,
            "is_constructor": 1,
            "params": [
                {
                    "name": "canvasBuilder",
                    "description": "The canvas is created lazily, allowing construction during DOM load.",
                    "type": "() => HTMLCanvasElement"
                },
                {
                    "name": "canvasId",
                    "description": "[number=0] A user-supplied integer canvas identifier. User is responsible for keeping them unique."
                },
                {
                    "name": "attributes",
                    "description": "[WebGLContextAttributes] Allow the context to be configured."
                }
            ],
            "beta": 1
        },
        "Drawable": {
            "name": "Drawable",
            "shortname": "Drawable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/scene/Drawable.ts",
            "line": 71,
            "implements": "IDrawable",
            "is_constructor": 1,
            "params": [
                {
                    "name": "geometry",
                    "description": "",
                    "type": "G"
                },
                {
                    "name": "material",
                    "description": "",
                    "type": "M"
                },
                {
                    "name": "model",
                    "description": "",
                    "type": "U"
                }
            ]
        },
        "IDrawList": {
            "name": "IDrawList",
            "shortname": "IDrawList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/scene/IDrawList.ts",
            "line": 9,
            "extends": "IUnknown"
        },
        "PerspectiveCamera": {
            "name": "PerspectiveCamera",
            "shortname": "PerspectiveCamera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/scene/PerspectiveCamera.ts",
            "line": 47,
            "description": "<p>\n\n</p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "fov ",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": " 75 * Math.PI / 180"
                },
                {
                    "name": "aspect",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "near",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0.1"
                },
                {
                    "name": "far",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "2000"
                }
            ],
            "example": [
                "\n      var camera = new EIGHT.PerspectiveCamera()\n      camera.setAspect(canvas.clientWidth / canvas.clientHeight)\n      camera.setFov(3.0 * e3)"
            ]
        },
        "Scene": {
            "name": "Scene",
            "shortname": "Scene",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/scene/Scene.ts",
            "line": 39,
            "extends": "IDrawList",
            "description": "<p>\nA <code>Scene</code> is a collection of drawable instances arranged in some order.\nThe precise order is implementation defined.\nThe collection may be traversed for general processing using callback/visitor functions.\n</p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "monitors",
                    "description": "[ContextMonitor[]=[]]"
                }
            ]
        },
        "IUnknownArray": {
            "name": "IUnknownArray",
            "shortname": "IUnknownArray",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/utils/IUnknownArray.ts",
            "line": 11,
            "description": "Collection class for maintaining an array of types derived from IUnknown.\nProvides a safer way to maintain reference counts than a native array.",
            "is_constructor": 1
        },
        "Shareable": {
            "name": "Shareable",
            "shortname": "Shareable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/utils/Shareable.ts",
            "line": 10,
            "description": "<p>\nConvenient base class for derived classes implementing <code>IUnknown</code>.\n</p>",
            "extends": "IUnknown",
            "is_constructor": 1,
            "params": [
                {
                    "name": "type",
                    "description": "The human-readable name of the derived type.",
                    "type": "String"
                }
            ]
        },
        "StringIUnknownMap": {
            "name": "StringIUnknownMap",
            "shortname": "StringIUnknownMap",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/utils/StringIUnknownMap.ts",
            "line": 12,
            "description": "<p>\nA map&lt;V&gt; of <code>string</code> to <code>V extends IUnknown</code>.\n</p>",
            "is_constructor": 1
        },
        "WindowAnimationRunner": {
            "name": "WindowAnimationRunner",
            "shortname": "WindowAnimationRunner",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EIGHT",
            "namespace": "",
            "file": "src/davinci-eight/utils/WindowAnimationRunner.ts",
            "line": 1
        }
    },
    "classitems": [
        {
            "file": "src/davinci-eight/cameras/Frustum.ts",
            "line": 10,
            "itemtype": "property",
            "name": "left",
            "type": "number",
            "class": "Frustum"
        },
        {
            "file": "src/davinci-eight/cameras/Frustum.ts",
            "line": 15,
            "itemtype": "property",
            "name": "right",
            "type": "number",
            "class": "Frustum"
        },
        {
            "file": "src/davinci-eight/cameras/Frustum.ts",
            "line": 20,
            "itemtype": "property",
            "name": "bottom",
            "type": "number",
            "class": "Frustum"
        },
        {
            "file": "src/davinci-eight/cameras/Frustum.ts",
            "line": 25,
            "itemtype": "property",
            "name": "top",
            "type": "number",
            "class": "Frustum"
        },
        {
            "file": "src/davinci-eight/cameras/Frustum.ts",
            "line": 30,
            "itemtype": "property",
            "name": "near",
            "type": "number",
            "class": "Frustum"
        },
        {
            "file": "src/davinci-eight/cameras/Frustum.ts",
            "line": 35,
            "itemtype": "property",
            "name": "far",
            "type": "number",
            "class": "Frustum"
        },
        {
            "file": "src/davinci-eight/cameras/Frustum.ts",
            "line": 40,
            "description": "Convenience method for setting the eye property allowing chainable method calls.",
            "itemtype": "method",
            "name": "setEye",
            "params": [
                {
                    "name": "eye",
                    "description": "",
                    "type": "Cartesian3"
                }
            ],
            "class": "Frustum"
        },
        {
            "file": "src/davinci-eight/cameras/Frustum.ts",
            "line": 46,
            "description": "Convenience method for setting the look property allowing chainable method calls.",
            "itemtype": "method",
            "name": "setLook",
            "params": [
                {
                    "name": "look",
                    "description": "",
                    "type": "Cartesian3"
                }
            ],
            "class": "Frustum"
        },
        {
            "file": "src/davinci-eight/cameras/Frustum.ts",
            "line": 52,
            "description": "Convenience method for setting the up property allowing chainable method calls.",
            "itemtype": "method",
            "name": "setUp",
            "params": [
                {
                    "name": "up",
                    "description": "",
                    "type": "Cartesian3"
                }
            ],
            "class": "Frustum"
        },
        {
            "file": "src/davinci-eight/cameras/Perspective.ts",
            "line": 10,
            "itemtype": "property",
            "name": "fov",
            "type": "number",
            "class": "Perspective"
        },
        {
            "file": "src/davinci-eight/cameras/Perspective.ts",
            "line": 15,
            "itemtype": "property",
            "name": "aspect",
            "type": "number",
            "class": "Perspective"
        },
        {
            "file": "src/davinci-eight/cameras/Perspective.ts",
            "line": 20,
            "itemtype": "property",
            "name": "near",
            "type": "number",
            "class": "Perspective"
        },
        {
            "file": "src/davinci-eight/cameras/Perspective.ts",
            "line": 25,
            "itemtype": "property",
            "name": "far",
            "type": "number",
            "class": "Perspective"
        },
        {
            "file": "src/davinci-eight/cameras/Perspective.ts",
            "line": 30,
            "description": "Convenience method for setting the fov property allowing chainable method calls.",
            "itemtype": "method",
            "name": "setFov",
            "params": [
                {
                    "name": "fov",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Perspective"
        },
        {
            "file": "src/davinci-eight/cameras/Perspective.ts",
            "line": 36,
            "description": "Convenience method for setting the aspect property allowing chainable method calls.",
            "itemtype": "method",
            "name": "setAspect",
            "params": [
                {
                    "name": "aspect",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Perspective"
        },
        {
            "file": "src/davinci-eight/cameras/Perspective.ts",
            "line": 42,
            "description": "Convenience method for setting the near property allowing chainable method calls.",
            "itemtype": "method",
            "name": "setNear",
            "params": [
                {
                    "name": "near",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Perspective"
        },
        {
            "file": "src/davinci-eight/cameras/Perspective.ts",
            "line": 48,
            "description": "Convenience method for setting the far property allowing chainable method calls.",
            "itemtype": "method",
            "name": "setFar",
            "params": [
                {
                    "name": "far",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Perspective"
        },
        {
            "file": "src/davinci-eight/cameras/Perspective.ts",
            "line": 54,
            "description": "Convenience method for setting the eye property allowing chainable method calls.",
            "itemtype": "method",
            "name": "setEye",
            "params": [
                {
                    "name": "eye",
                    "description": "",
                    "type": "Cartesian3"
                }
            ],
            "class": "Perspective"
        },
        {
            "file": "src/davinci-eight/cameras/Perspective.ts",
            "line": 60,
            "description": "Convenience method for setting the look property allowing chainable method calls.",
            "itemtype": "method",
            "name": "setLook",
            "params": [
                {
                    "name": "look",
                    "description": "",
                    "type": "Cartesian3"
                }
            ],
            "class": "Perspective"
        },
        {
            "file": "src/davinci-eight/cameras/Perspective.ts",
            "line": 66,
            "description": "Convenience method for setting the up property allowing chainable method calls.",
            "itemtype": "method",
            "name": "setUp",
            "params": [
                {
                    "name": "up",
                    "description": "",
                    "type": "Cartesian3"
                }
            ],
            "class": "Perspective"
        },
        {
            "file": "src/davinci-eight/cameras/View.ts",
            "line": 11,
            "itemtype": "property",
            "name": "eye",
            "type": "Vector3",
            "class": "View"
        },
        {
            "file": "src/davinci-eight/cameras/View.ts",
            "line": 16,
            "itemtype": "property",
            "name": "look",
            "type": "Vector3",
            "class": "View"
        },
        {
            "file": "src/davinci-eight/cameras/View.ts",
            "line": 21,
            "itemtype": "property",
            "name": "up",
            "type": "Vector3",
            "class": "View"
        },
        {
            "file": "src/davinci-eight/cameras/View.ts",
            "line": 26,
            "description": "Convenience method for setting the eye property allowing chainable method calls.",
            "itemtype": "method",
            "name": "setEye",
            "params": [
                {
                    "name": "eye",
                    "description": "",
                    "type": "Cartesian3"
                }
            ],
            "class": "View"
        },
        {
            "file": "src/davinci-eight/cameras/View.ts",
            "line": 32,
            "description": "Convenience method for setting the look property allowing chainable method calls.",
            "itemtype": "method",
            "name": "setLook",
            "params": [
                {
                    "name": "look",
                    "description": "",
                    "type": "Cartesian3"
                }
            ],
            "class": "View"
        },
        {
            "file": "src/davinci-eight/cameras/View.ts",
            "line": 38,
            "description": "Convenience method for setting the up property allowing chainable method calls.",
            "itemtype": "method",
            "name": "setUp",
            "params": [
                {
                    "name": "up",
                    "description": "",
                    "type": "Cartesian3"
                }
            ],
            "class": "View"
        },
        {
            "file": "src/davinci-eight/cameras/createFrustum.ts",
            "line": 15,
            "itemtype": "method",
            "name": "createFrustum",
            "is_constructor": 1,
            "return": {
                "description": "",
                "type": "Frustum"
            },
            "class": "createView"
        },
        {
            "file": "src/davinci-eight/cameras/createPerspective.ts",
            "line": 19,
            "itemtype": "method",
            "name": "createPerspective",
            "is_constructor": 1,
            "params": [
                {
                    "name": "fov",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "aspect",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "near",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "far",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Perspective"
            },
            "class": "createView"
        },
        {
            "file": "src/davinci-eight/cameras/createView.ts",
            "line": 38,
            "itemtype": "method",
            "name": "setEye",
            "params": [
                {
                    "name": "eye",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "`this` instance.",
                "type": "View"
            },
            "class": "createView"
        },
        {
            "file": "src/davinci-eight/commands/EIGHTLogger.ts",
            "line": 27,
            "description": "Logs the version, GitHub URL, and last modified date to the console.",
            "itemtype": "method",
            "name": "execute",
            "params": [
                {
                    "name": "unused",
                    "description": "WebGLRenderingContext"
                }
            ],
            "class": "EIGHTLogger"
        },
        {
            "file": "src/davinci-eight/commands/EIGHTLogger.ts",
            "line": 35,
            "description": "Does nothing.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "destructor",
            "return": {
                "description": "void"
            },
            "class": "EIGHTLogger"
        },
        {
            "file": "src/davinci-eight/commands/VersionLogger.ts",
            "line": 26,
            "description": "<p>\nLogs the WebGL <code>VERSION</code> parameter to the console.\n</p>",
            "itemtype": "method",
            "name": "execute",
            "params": [
                {
                    "name": "gl",
                    "description": "",
                    "type": "WebGLRenderingContext"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "VersionLogger"
        },
        {
            "file": "src/davinci-eight/commands/VersionLogger.ts",
            "line": 37,
            "itemtype": "method",
            "name": "destructor",
            "return": {
                "description": "",
                "type": "Void"
            },
            "access": "protected",
            "tagname": "",
            "class": "VersionLogger"
        },
        {
            "file": "src/davinci-eight/commands/WebGLClear.ts",
            "line": 17,
            "description": "The mask used to specify which buffers to clear.",
            "itemtype": "property",
            "name": "mask",
            "type": "{number}",
            "class": "WebGLClear"
        },
        {
            "file": "src/davinci-eight/commands/WebGLClear.ts",
            "line": 31,
            "itemtype": "method",
            "name": "destructor",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "WebGLClear"
        },
        {
            "file": "src/davinci-eight/commands/WebGLClear.ts",
            "line": 38,
            "itemtype": "method",
            "name": "execute",
            "params": [
                {
                    "name": "gl",
                    "description": "",
                    "type": "WebGLRenderingContext"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "WebGLClear"
        },
        {
            "file": "src/davinci-eight/commands/WebGLClear.ts",
            "line": 46,
            "itemtype": "property",
            "name": "name",
            "type": "{string}",
            "readonly": "",
            "class": "WebGLClear"
        },
        {
            "file": "src/davinci-eight/commands/WebGLClearColor.ts",
            "line": 34,
            "itemtype": "method",
            "name": "contextFree",
            "params": [
                {
                    "name": "canvasId",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "WebGLClearColor"
        },
        {
            "file": "src/davinci-eight/commands/WebGLClearColor.ts",
            "line": 42,
            "itemtype": "method",
            "name": "contextGain",
            "params": [
                {
                    "name": "manager",
                    "description": "",
                    "type": "IContextProvider"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "WebGLClearColor"
        },
        {
            "file": "src/davinci-eight/commands/WebGLClearColor.ts",
            "line": 50,
            "itemtype": "method",
            "name": "contextLost",
            "params": [
                {
                    "name": "canvasId",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "WebGLClearColor"
        },
        {
            "file": "src/davinci-eight/commands/WebGLClearColor.ts",
            "line": 58,
            "itemtype": "method",
            "name": "execute",
            "params": [
                {
                    "name": "gl",
                    "description": "",
                    "type": "WebGLRenderingContext"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "WebGLClearColor"
        },
        {
            "file": "src/davinci-eight/commands/WebGLClearColor.ts",
            "line": 70,
            "itemtype": "method",
            "name": "destructor",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "WebGLClearColor"
        },
        {
            "file": "src/davinci-eight/commands/WebGLEnable.ts",
            "line": 28,
            "itemtype": "method",
            "name": "contextFree",
            "params": [
                {
                    "name": "canvasId",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "WebGLEnable"
        },
        {
            "file": "src/davinci-eight/commands/WebGLEnable.ts",
            "line": 36,
            "itemtype": "method",
            "name": "contextGain",
            "params": [
                {
                    "name": "manager",
                    "description": "",
                    "type": "IContextProvider"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "WebGLEnable"
        },
        {
            "file": "src/davinci-eight/commands/WebGLEnable.ts",
            "line": 44,
            "itemtype": "method",
            "name": "contextLost",
            "params": [
                {
                    "name": "canvasId",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "WebGLEnable"
        },
        {
            "file": "src/davinci-eight/commands/WebGLEnable.ts",
            "line": 52,
            "itemtype": "method",
            "name": "execute",
            "params": [
                {
                    "name": "gl",
                    "description": "",
                    "type": "WebGLRenderingContext"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "WebGLEnable"
        },
        {
            "file": "src/davinci-eight/commands/WebGLEnable.ts",
            "line": 61,
            "itemtype": "method",
            "name": "destructor",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "WebGLEnable"
        },
        {
            "file": "src/davinci-eight/core/AttribLocation.ts",
            "line": 48,
            "itemtype": "method",
            "name": "vertexPointer",
            "params": [
                {
                    "name": "size",
                    "description": "The number of components per attribute. Must be 1,2,3, or 4.",
                    "type": "Number"
                },
                {
                    "name": "normalized",
                    "description": "Used for WebGL rendering context vertexAttribPointer method.",
                    "type": "Boolean"
                },
                {
                    "name": "stride",
                    "description": "Used for WebGL rendering context vertexAttribPointer method.",
                    "type": "Number"
                },
                {
                    "name": "offset",
                    "description": "Used for WebGL rendering context vertexAttribPointer method.",
                    "type": "Number"
                }
            ],
            "class": "AttribLocation"
        },
        {
            "file": "src/davinci-eight/core/AttribLocation.ts",
            "line": 58,
            "itemtype": "method",
            "name": "enable",
            "class": "AttribLocation"
        },
        {
            "file": "src/davinci-eight/core/AttribLocation.ts",
            "line": 64,
            "itemtype": "method",
            "name": "disable",
            "class": "AttribLocation"
        },
        {
            "file": "src/davinci-eight/core/AttribLocation.ts",
            "line": 70,
            "itemtype": "method",
            "name": "toString",
            "class": "AttribLocation"
        },
        {
            "file": "src/davinci-eight/core/AttribMetaInfo.ts",
            "line": 5,
            "itemtype": "property",
            "name": "glslType  The type keyword as it appears in the GLSL shader program.!~YUIDOC_LINE~!This property is used for program generation.",
            "type": "String",
            "class": "AttribMetaInfo"
        },
        {
            "file": "src/davinci-eight/core/BufferResource.ts",
            "line": 9,
            "description": "Name used for reference count monitoring and logging.",
            "class": "Color"
        },
        {
            "file": "src/davinci-eight/core/BufferResource.ts",
            "line": 64,
            "itemtype": "method",
            "name": "bind",
            "class": "Color"
        },
        {
            "file": "src/davinci-eight/core/BufferResource.ts",
            "line": 77,
            "itemtype": "method",
            "name": "unbind",
            "class": "Color"
        },
        {
            "file": "src/davinci-eight/core/Color.ts",
            "line": 64,
            "description": "Converts an angle, radius, height to a color on a color wheel.",
            "class": "Color"
        },
        {
            "file": "src/davinci-eight/core/ContextController.ts",
            "line": 5,
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "canvas",
                    "description": "",
                    "type": "HTMLCanvasElement"
                },
                {
                    "name": "canvasId",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "ContextController"
        },
        {
            "file": "src/davinci-eight/core/ContextController.ts",
            "line": 12,
            "itemtype": "method",
            "name": "stop",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "ContextController"
        },
        {
            "file": "src/davinci-eight/core/ContextKahuna.ts",
            "line": 5,
            "interface": "ContextKahuna",
            "extends": "ContextUnique",
            "class": "ElementBuffer"
        },
        {
            "file": "src/davinci-eight/core/ContextMonitor.ts",
            "line": 6,
            "class": "ElementBuffer"
        },
        {
            "file": "src/davinci-eight/core/ContextMonitor.ts",
            "line": 10,
            "class": "ElementBuffer"
        },
        {
            "file": "src/davinci-eight/core/ContextMonitor.ts",
            "line": 14,
            "class": "ElementBuffer"
        },
        {
            "file": "src/davinci-eight/core/ContextUnique.ts",
            "line": 1,
            "interface": "ContextUnique",
            "class": "ElementBuffer"
        },
        {
            "file": "src/davinci-eight/core/ContextUnique.ts",
            "line": 5,
            "description": "The identifier of a canvas must be unique and stable.\nFor speed we assume a low cardinality number.",
            "class": "ElementBuffer"
        },
        {
            "file": "src/davinci-eight/core/DrawContext.ts",
            "line": 1,
            "description": "A DrawContext is the argument for the Drawable draw() method.",
            "class": "ElementBuffer"
        },
        {
            "file": "src/davinci-eight/core/DrawContext.ts",
            "line": 5,
            "description": "The time of the current animation frame.",
            "class": "ElementBuffer"
        },
        {
            "file": "src/davinci-eight/core/ElementBuffer.ts",
            "line": 51,
            "itemtype": "method",
            "name": "bind",
            "class": "ElementArray"
        },
        {
            "file": "src/davinci-eight/core/ElementBuffer.ts",
            "line": 62,
            "itemtype": "method",
            "name": "data",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Uint16Array"
                },
                {
                    "name": "usage",
                    "description": "Optional. Defaults to STREAM_DRAW.",
                    "type": "Number"
                }
            ],
            "class": "ElementArray"
        },
        {
            "file": "src/davinci-eight/core/Face3.ts",
            "line": 9,
            "itemtype": "property",
            "name": "a  The index of the vertex with label 'a' in the array of vertices.",
            "type": "Number",
            "class": "Face3"
        },
        {
            "file": "src/davinci-eight/core/Face3.ts",
            "line": 13,
            "itemtype": "property",
            "name": "b  The index of the vertex with label 'b' in the array of vertices.",
            "type": "Number",
            "class": "Face3"
        },
        {
            "file": "src/davinci-eight/core/Face3.ts",
            "line": 17,
            "itemtype": "property",
            "name": "c  The index of the vertex with label 'c' in the array of vertices.",
            "type": "Number",
            "class": "Face3"
        },
        {
            "file": "src/davinci-eight/core/Face3.ts",
            "line": 21,
            "description": "length 3 implies per-vertex normals with correspondence index 0 <=> a, 1 <=> b, 2 <=> c.\nlength 1 implies a face normal.\nlength 0 implies",
            "class": "Face3"
        },
        {
            "file": "src/davinci-eight/core/IBuffer.ts",
            "line": 3,
            "interface": "IBuffer",
            "class": "IContextConsumer"
        },
        {
            "file": "src/davinci-eight/core/IContextConsumer.ts",
            "line": 10,
            "description": "Called to request the dependent to free any WebGL resources acquired and owned.\nThe dependent may assume that its cached context is still valid in order\nto properly dispose of any cached resources. In the case of shared objects, this\nmethod may be called multiple times for what is logically the same context. In such\ncases the dependent must be idempotent and respond only to the first request.",
            "itemtype": "method",
            "name": "contextFree",
            "params": [
                {
                    "name": "canvasId",
                    "description": "Determines the context for which resources are being freed.",
                    "type": "Number"
                }
            ],
            "class": "IContextConsumer"
        },
        {
            "file": "src/davinci-eight/core/IContextConsumer.ts",
            "line": 21,
            "description": "Called to inform the dependent of a new WebGL rendering context.\nThe implementation should ignore the notification if it has already\nreceived the same context.",
            "itemtype": "method",
            "name": "contextGain",
            "params": [
                {
                    "name": "manager",
                    "description": "If there's something strange in your neighborhood.",
                    "type": "IContextProvider"
                }
            ],
            "class": "IContextConsumer"
        },
        {
            "file": "src/davinci-eight/core/IContextConsumer.ts",
            "line": 29,
            "description": "Called to inform the dependent of a loss of WebGL rendering context.\nThe dependent must assume that any cached context is invalid.\nThe dependent must not try to use and cached context to free resources.\nThe dependent should reset its state to that for which there is no context.",
            "itemtype": "method",
            "name": "contextLost",
            "params": [
                {
                    "name": "canvasId",
                    "description": "Determines the context for which resources are being lost.\n\nThe canvasId is provided, rather than the manager, to remind implementors\nthat resources have been lost and cannot be freed by the application.",
                    "type": "Number"
                }
            ],
            "class": "IContextConsumer"
        },
        {
            "file": "src/davinci-eight/core/IContextProvider.ts",
            "line": 20,
            "itemtype": "property",
            "name": "canvas",
            "type": "{HTMLCanvasElement}",
            "readonly": "",
            "class": "IContextProvider"
        },
        {
            "file": "src/davinci-eight/core/IContextProvider.ts",
            "line": 26,
            "itemtype": "property",
            "name": "gl",
            "type": "{WebGLRenderingContext}",
            "readonly": "",
            "class": "IContextProvider"
        },
        {
            "file": "src/davinci-eight/core/IContextProvider.ts",
            "line": 32,
            "itemtype": "method",
            "name": "addContextListener",
            "params": [
                {
                    "name": "user",
                    "description": "",
                    "type": "IContextConsumer"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "IContextProvider"
        },
        {
            "file": "src/davinci-eight/core/IContextProvider.ts",
            "line": 38,
            "itemtype": "method",
            "name": "createArrayBuffer",
            "return": {
                "description": "",
                "type": "IBuffer"
            },
            "class": "IContextProvider"
        },
        {
            "file": "src/davinci-eight/core/IContextProvider.ts",
            "line": 43,
            "itemtype": "method",
            "name": "createBufferGeometry",
            "params": [
                {
                    "name": "elements",
                    "description": "",
                    "type": "GeometryData"
                },
                {
                    "name": "mode",
                    "description": "[number]"
                },
                {
                    "name": "usage",
                    "description": "[number]"
                }
            ],
            "return": {
                "description": "",
                "type": "IBufferGeometry"
            },
            "class": "IContextProvider"
        },
        {
            "file": "src/davinci-eight/core/IContextProvider.ts",
            "line": 51,
            "itemtype": "method",
            "name": "createElementArrayBuffer",
            "return": {
                "description": "",
                "type": "IBuffer"
            },
            "class": "IContextProvider"
        },
        {
            "file": "src/davinci-eight/core/IContextProvider.ts",
            "line": 56,
            "itemtype": "method",
            "name": "createTexture2D",
            "return": {
                "description": "",
                "type": "ITexture2D"
            },
            "class": "IContextProvider"
        },
        {
            "file": "src/davinci-eight/core/IContextProvider.ts",
            "line": 61,
            "itemtype": "method",
            "name": "createTextureCubeMap",
            "return": {
                "description": "",
                "type": "ITextureCubeMap"
            },
            "class": "IContextProvider"
        },
        {
            "file": "src/davinci-eight/core/IContextProvider.ts",
            "line": 66,
            "itemtype": "method",
            "name": "removeContextListener",
            "params": [
                {
                    "name": "user",
                    "description": "",
                    "type": "IContextConsumer"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "IContextProvider"
        },
        {
            "file": "src/davinci-eight/core/IContextProvider.ts",
            "line": 72,
            "itemtype": "method",
            "name": "synchronize",
            "params": [
                {
                    "name": "user",
                    "description": "",
                    "type": "IContextConsumer"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "IContextProvider"
        },
        {
            "file": "src/davinci-eight/core/IDrawable.ts",
            "line": 18,
            "itemtype": "property",
            "name": "material",
            "type": "{IMaterial}\nContains a WebGLProgram for each canvas that this IDrawable can draw to.",
            "class": "IDrawable"
        },
        {
            "file": "src/davinci-eight/core/IDrawable.ts",
            "line": 24,
            "description": "User assigned name of the drawable object. Allows an object to be found in a scene.",
            "itemtype": "property",
            "name": "name",
            "type": "[string]",
            "class": "IDrawable"
        },
        {
            "file": "src/davinci-eight/core/IDrawable.ts",
            "line": 30,
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "canvasId",
                    "description": "Determines which canvas the IDrawable should draw to.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "IDrawable"
        },
        {
            "file": "src/davinci-eight/core/IMaterial.ts",
            "line": 19,
            "itemtype": "property",
            "name": "programId",
            "type": "string",
            "class": "IMaterial"
        },
        {
            "file": "src/davinci-eight/core/IMaterial.ts",
            "line": 25,
            "itemtype": "property",
            "name": "vertexShader",
            "type": "string",
            "class": "IMaterial"
        },
        {
            "file": "src/davinci-eight/core/IMaterial.ts",
            "line": 30,
            "itemtype": "property",
            "name": "fragmentShader",
            "type": "string",
            "class": "IMaterial"
        },
        {
            "file": "src/davinci-eight/core/IMaterial.ts",
            "line": 35,
            "description": "Makes the Program the current program for WebGL.",
            "itemtype": "method",
            "name": "use",
            "params": [
                {
                    "name": "canvasId",
                    "description": "Determines which WebGLProgram to use.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "IMaterial"
        },
        {
            "file": "src/davinci-eight/core/IMaterial.ts",
            "line": 42,
            "itemtype": "property",
            "name": "attributeLocations",
            "type": "{ [name: string]: AttribLocation }",
            "class": "IMaterial"
        },
        {
            "file": "src/davinci-eight/core/IMaterial.ts",
            "line": 47,
            "itemtype": "property",
            "name": "uniforms",
            "type": "{ [name: string]: UniformLocation }",
            "class": "IMaterial"
        },
        {
            "file": "src/davinci-eight/core/IMaterial.ts",
            "line": 53,
            "description": "<p>\nEnables an attribute location of a WebGLProgram.\n</p>",
            "itemtype": "method",
            "name": "enableAttrib",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the attribute to enable.",
                    "type": "String"
                }
            ],
            "beta": 1,
            "class": "IMaterial"
        },
        {
            "file": "src/davinci-eight/core/IMaterial.ts",
            "line": 63,
            "description": "<p>\nEnables an attribute location of a WebGLProgram.\n</p>",
            "itemtype": "method",
            "name": "disableAttrib",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the attribute disable.",
                    "type": "String"
                }
            ],
            "beta": 1,
            "class": "IMaterial"
        },
        {
            "file": "src/davinci-eight/core/IPrologCommand.ts",
            "line": 10,
            "description": "<p>\nThe unique name of the command.\n</p>",
            "itemtype": "property",
            "name": "name",
            "type": "{string}",
            "readonly": "",
            "class": "IPrologCommand"
        },
        {
            "file": "src/davinci-eight/core/IPrologCommand.ts",
            "line": 19,
            "itemtype": "method",
            "name": "execute",
            "params": [
                {
                    "name": "manager",
                    "description": "",
                    "type": "IContextProvider"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "IPrologCommand"
        },
        {
            "file": "src/davinci-eight/core/ITexture.ts",
            "line": 3,
            "interface": "ITexture",
            "class": "IUnknown"
        },
        {
            "file": "src/davinci-eight/core/ITexture2D.ts",
            "line": 3,
            "interface": "ITexture2D",
            "class": "IUnknown"
        },
        {
            "file": "src/davinci-eight/core/IUnknown.ts",
            "line": 9,
            "description": "<p>\nIncrements the reference count of an IUnknown instance.\n</p>",
            "itemtype": "method",
            "name": "addRef",
            "return": {
                "description": "<p>\nThe new reference count. This value is intended to be used only for test purposes.\n</p>",
                "type": "Number"
            },
            "class": "IUnknown"
        },
        {
            "file": "src/davinci-eight/core/IUnknown.ts",
            "line": 20,
            "description": "<p>\nDecrements the reference count of an IUnknown instance.\n</p>",
            "itemtype": "method",
            "name": "release",
            "return": {
                "description": "<p>\nThe new reference count. This value is intended to be used only for test purposes.\n</p>",
                "type": "Number"
            },
            "class": "IUnknown"
        },
        {
            "file": "src/davinci-eight/core/ShaderVariableDecl.ts",
            "line": 5,
            "itemtype": "property",
            "name": "modifiers",
            "class": "ShaderVariableDecl"
        },
        {
            "file": "src/davinci-eight/core/ShaderVariableDecl.ts",
            "line": 9,
            "itemtype": "property",
            "name": "type",
            "class": "ShaderVariableDecl"
        },
        {
            "file": "src/davinci-eight/core/ShaderVariableDecl.ts",
            "line": 13,
            "itemtype": "property",
            "name": "name",
            "class": "ShaderVariableDecl"
        },
        {
            "file": "src/davinci-eight/core/Symbolic.ts",
            "line": 11,
            "description": "'aColor'",
            "itemtype": "property",
            "name": "ATTRIBUTE_COLOR",
            "type": "{string}",
            "static": 1,
            "class": "Symbolic"
        },
        {
            "file": "src/davinci-eight/core/Symbolic.ts",
            "line": 19,
            "description": "'aGeometryIndex'",
            "itemtype": "property",
            "name": "ATTRIBUTE_GEOMETRY_INDEX",
            "type": "{string}",
            "static": 1,
            "class": "Symbolic"
        },
        {
            "file": "src/davinci-eight/core/Symbolic.ts",
            "line": 27,
            "description": "'aNormal'",
            "itemtype": "property",
            "name": "ATTRIBUTE_NORMAL",
            "type": "{string}",
            "static": 1,
            "class": "Symbolic"
        },
        {
            "file": "src/davinci-eight/core/Symbolic.ts",
            "line": 35,
            "description": "'aPosition'",
            "itemtype": "property",
            "name": "ATTRIBUTE_POSITION",
            "type": "{string}",
            "static": 1,
            "class": "Symbolic"
        },
        {
            "file": "src/davinci-eight/core/Symbolic.ts",
            "line": 43,
            "description": "'aTextureCoords'",
            "itemtype": "property",
            "name": "ATTRIBUTE_TEXTURE_COORDS",
            "type": "{string}",
            "static": 1,
            "class": "Symbolic"
        },
        {
            "file": "src/davinci-eight/core/Symbolic.ts",
            "line": 51,
            "description": "'uAmbientLight'",
            "itemtype": "property",
            "name": "UNIFORM_AMBIENT_LIGHT",
            "type": "{string}",
            "static": 1,
            "class": "Symbolic"
        },
        {
            "file": "src/davinci-eight/core/Symbolic.ts",
            "line": 66,
            "description": "'uProjection'",
            "itemtype": "property",
            "name": "UNIFORM_PROJECTION_MATRIX",
            "type": "{string}",
            "static": 1,
            "class": "Symbolic"
        },
        {
            "file": "src/davinci-eight/core/Symbolic.ts",
            "line": 74,
            "description": "'uModel'",
            "class": "Symbolic"
        },
        {
            "file": "src/davinci-eight/core/Symbolic.ts",
            "line": 81,
            "description": "'vColor'",
            "itemtype": "property",
            "name": "VARYING_COLOR",
            "type": "{string}",
            "static": 1,
            "class": "Symbolic"
        },
        {
            "file": "src/davinci-eight/core/Symbolic.ts",
            "line": 89,
            "description": "'vLight'",
            "itemtype": "property",
            "name": "VARYING_LIGHT",
            "type": "{string}",
            "static": 1,
            "class": "Symbolic"
        },
        {
            "file": "src/davinci-eight/core/UniformData.ts",
            "line": 3,
            "interface": "UniformData",
            "class": "UniformDataVisitor"
        },
        {
            "file": "src/davinci-eight/core/UniformData.ts",
            "line": 7,
            "itemtype": "method",
            "name": "setUniforms",
            "params": [
                {
                    "name": "visitor",
                    "description": "",
                    "type": "UniformDataVisitor"
                },
                {
                    "name": "canvasId",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "UniformDataVisitor"
        },
        {
            "file": "src/davinci-eight/core/UniformDataVisitor.ts",
            "line": 15,
            "itemtype": "method",
            "name": "uniform1f",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "canvasId",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "UniformDataVisitor"
        },
        {
            "file": "src/davinci-eight/core/UniformLocation.ts",
            "line": 42,
            "itemtype": "method",
            "name": "contextFree",
            "class": "UniformLocation"
        },
        {
            "file": "src/davinci-eight/core/UniformLocation.ts",
            "line": 48,
            "itemtype": "method",
            "name": "contextGain",
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "WebGLRenderingContext"
                },
                {
                    "name": "program",
                    "description": "",
                    "type": "WebGLProgram"
                }
            ],
            "class": "UniformLocation"
        },
        {
            "file": "src/davinci-eight/core/UniformLocation.ts",
            "line": 61,
            "itemtype": "method",
            "name": "contextLost",
            "class": "UniformLocation"
        },
        {
            "file": "src/davinci-eight/core/UniformLocation.ts",
            "line": 75,
            "itemtype": "method",
            "name": "uniform1f",
            "params": [
                {
                    "name": "x",
                    "description": ""
                }
            ],
            "class": "UniformLocation"
        },
        {
            "file": "src/davinci-eight/core/UniformLocation.ts",
            "line": 83,
            "itemtype": "method",
            "name": "uniform2f",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "UniformLocation"
        },
        {
            "file": "src/davinci-eight/core/UniformLocation.ts",
            "line": 92,
            "itemtype": "method",
            "name": "uniform3f",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "UniformLocation"
        },
        {
            "file": "src/davinci-eight/core/UniformLocation.ts",
            "line": 102,
            "itemtype": "method",
            "name": "uniform4f",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "UniformLocation"
        },
        {
            "file": "src/davinci-eight/core/UniformLocation.ts",
            "line": 113,
            "itemtype": "method",
            "name": "matrix1",
            "params": [
                {
                    "name": "transpose",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix1"
                }
            ],
            "class": "UniformLocation"
        },
        {
            "file": "src/davinci-eight/core/UniformLocation.ts",
            "line": 122,
            "itemtype": "method",
            "name": "matrix2",
            "params": [
                {
                    "name": "transpose",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix2"
                }
            ],
            "class": "UniformLocation"
        },
        {
            "file": "src/davinci-eight/core/UniformLocation.ts",
            "line": 131,
            "itemtype": "method",
            "name": "matrix3",
            "params": [
                {
                    "name": "transpose",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix3"
                }
            ],
            "class": "UniformLocation"
        },
        {
            "file": "src/davinci-eight/core/UniformLocation.ts",
            "line": 140,
            "itemtype": "method",
            "name": "matrix4",
            "params": [
                {
                    "name": "transpose",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix4"
                }
            ],
            "class": "UniformLocation"
        },
        {
            "file": "src/davinci-eight/core/UniformLocation.ts",
            "line": 171,
            "itemtype": "method",
            "name": "vector1",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Vector1"
                }
            ],
            "class": "UniformLocation"
        },
        {
            "file": "src/davinci-eight/core/UniformLocation.ts",
            "line": 179,
            "itemtype": "method",
            "name": "vector2",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Vector2"
                }
            ],
            "class": "UniformLocation"
        },
        {
            "file": "src/davinci-eight/core/UniformLocation.ts",
            "line": 187,
            "itemtype": "method",
            "name": "vector3",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "class": "UniformLocation"
        },
        {
            "file": "src/davinci-eight/core/UniformLocation.ts",
            "line": 204,
            "itemtype": "method",
            "name": "vector4",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Vector4"
                }
            ],
            "class": "UniformLocation"
        },
        {
            "file": "src/davinci-eight/core/UniformLocation.ts",
            "line": 212,
            "itemtype": "method",
            "name": "toString",
            "class": "UniformLocation"
        },
        {
            "file": "src/davinci-eight/core/UniformMetaInfo.ts",
            "line": 1,
            "interface": "UniformMetaInfo",
            "class": "BarnGeometry"
        },
        {
            "file": "src/davinci-eight/core/UniformMetaInfo.ts",
            "line": 5,
            "itemtype": "property",
            "name": "name  Specifies an optional override of the name used as a key.",
            "type": "String",
            "class": "BarnGeometry"
        },
        {
            "file": "src/davinci-eight/core/UniformMetaInfo.ts",
            "line": 9,
            "itemtype": "property",
            "name": "glslType  The type keyword as it appears in the GLSL shader program.",
            "type": "String",
            "class": "BarnGeometry"
        },
        {
            "file": "src/davinci-eight/core/getAttribVarName.ts",
            "line": 4,
            "description": "Policy for how an attribute variable name is determined.",
            "class": "BarnGeometry"
        },
        {
            "file": "src/davinci-eight/core/getUniformVarName.ts",
            "line": 4,
            "description": "Policy for how a uniform variable name is determined.",
            "class": "BarnGeometry"
        },
        {
            "file": "src/davinci-eight/curves/Curve.ts",
            "line": 2,
            "author": "zz85 / http://www.lab4games.net/zz85/blog\nExtensible curve object\n\nSome common of Curve methods\n.getPoint(t), getTangent(t)\n.getPointAt(u), getTagentAt(u)\n.getPoints(), .getSpacedPoints()\n.getLength()\n.updateArcLengths()\n\nThis following classes subclasses Curve:\n\nLineCurve\nQuadraticBezierCurve\nCubicBezierCurve\nSplineCurve\nArcCurve\nEllipseCurve\nClosedSplineCurve",
            "class": "BarnGeometry"
        },
        {
            "file": "src/davinci-eight/curves/Curve.ts",
            "line": 30,
            "description": "Virtual base class method to overwrite and implement in subclasses\nt belongs to [0, 1]",
            "class": "BarnGeometry"
        },
        {
            "file": "src/davinci-eight/curves/Curve.ts",
            "line": 37,
            "description": "Get point at relative position in curve according to arc length",
            "class": "BarnGeometry"
        },
        {
            "file": "src/davinci-eight/curves/Curve.ts",
            "line": 112,
            "description": "Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equi distance",
            "class": "BarnGeometry"
        },
        {
            "file": "src/davinci-eight/curves/Curve.ts",
            "line": 194,
            "description": "Returns a unit vector tangent at t\nIn case any sub curve does not implement its tangent derivation,\n2 points a small delta apart will be used to find its gradient\nwhich seems to give a reasonable approximation",
            "class": "BarnGeometry"
        },
        {
            "file": "src/davinci-eight/geometries/Geometry.ts",
            "line": 12,
            "itemtype": "property",
            "name": "data",
            "type": "{Simplex[]}",
            "class": "Geometry",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/Geometry.ts",
            "line": 17,
            "description": "Summary information on the simplices such as dimensionality and sizes for attributes.\nThis same data structure may be used to map vertex attribute names to program names.",
            "itemtype": "property",
            "name": "meta",
            "type": "{GeometryMeta}",
            "class": "Geometry",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/Geometry.ts",
            "line": 38,
            "description": "<p>\nApplies the <em>boundary</em> operation to each Simplex in this instance the specified number of times.\n</p>",
            "itemtype": "method",
            "name": "boundary",
            "params": [
                {
                    "name": "times",
                    "description": "Determines the number of times the boundary operation is applied to this instance.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Geometry"
            },
            "class": "Geometry",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/Geometry.ts",
            "line": 51,
            "description": "Updates the meta property of this instance to match the data.",
            "itemtype": "method",
            "name": "check",
            "return": {
                "description": "",
                "type": "Geometry"
            },
            "class": "Geometry",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/Geometry.ts",
            "line": 62,
            "description": "Applies the subdivide operation to each Simplex in this instance the specified number of times.",
            "itemtype": "method",
            "name": "subdivide",
            "params": [
                {
                    "name": "times",
                    "description": "Determines the number of times the subdivide operation is applied to this instance.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Geometry"
            },
            "class": "Geometry",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/Geometry.ts",
            "line": 74,
            "itemtype": "method",
            "name": "toGeometry",
            "return": {
                "description": "",
                "type": "GeometryElements"
            },
            "class": "Geometry",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/Geometry.ts",
            "line": 83,
            "class": "Geometry",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/GeometryAttribute.ts",
            "line": 43,
            "description": "The values of the attribute.",
            "class": "GeometryAttribute",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/GeometryAttribute.ts",
            "line": 48,
            "description": "The chunking size of the attribute.\nThis is distinct from the size in the `GeometryMeta`.\nThe chunking size is invariant given the values and is used to describe the vertex attribute pointer.",
            "class": "GeometryAttribute",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/GeometryData.ts",
            "line": 9,
            "description": "0 => POINTS, 1 => LINES, 2 => TRIANGLES",
            "class": "GeometryData",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/GeometryData.ts",
            "line": 14,
            "itemtype": "property",
            "name": "indices",
            "type": "{VectorN}",
            "class": "GeometryData",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/GeometryData.ts",
            "line": 20,
            "itemtype": "property",
            "name": "attributes",
            "type": "{{[name:string]: GeometryAttribute}}",
            "class": "GeometryData",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/GeometryElements.ts",
            "line": 15,
            "itemtype": "property",
            "name": "data",
            "type": "{GeometryElements}",
            "class": "GeometryElements",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/GeometryElements.ts",
            "line": 20,
            "itemtype": "property",
            "name": "meta",
            "type": "{GeometryMeta}",
            "class": "GeometryElements",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/GeometryMeta.ts",
            "line": 5,
            "description": "The dimesionality of the simplices, assumed to be homogenous.",
            "itemtype": "property",
            "name": "k",
            "type": "{number}",
            "class": "GeometryMeta",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/GeometryMeta.ts",
            "line": 11,
            "description": "The properties of the attributes.\nThe size refers to the size of the GLSL type, not the chunking size.\nThe name is an override of the key that produces the variable name.",
            "class": "GeometryMeta",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/GeometryOld.ts",
            "line": 41,
            "description": "Ensures that the normal property of each face is assigned\na value equal to the normalized cross product of two edge vectors\ntaken counter-clockwise. This pseudo vector is then taken to face outwards by convention.",
            "itemtype": "method",
            "name": "computeFaceNormals",
            "class": "IBufferGeometry",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/GeometryOld.ts",
            "line": 120,
            "description": "Hashmap for looking up vertice by position coordinates (and making sure they are unique).\nkey is constructed from coordinates, value is index in vertices array.",
            "class": "IBufferGeometry",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/GeometryOld.ts",
            "line": 125,
            "description": "The list of unique vertices.",
            "class": "IBufferGeometry",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/GeometryOld.ts",
            "line": 129,
            "description": "Index is original index in vertices. Entry is index in unique array.",
            "class": "IBufferGeometry",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/IBufferGeometry.ts",
            "line": 11,
            "itemtype": "property",
            "name": "uuid",
            "type": "{string}",
            "class": "IBufferGeometry",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/IBufferGeometry.ts",
            "line": 16,
            "itemtype": "method",
            "name": "bind",
            "params": [
                {
                    "name": "program",
                    "description": "",
                    "type": "IMaterial"
                },
                {
                    "name": "aNameToKeyName",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "IBufferGeometry",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/IBufferGeometry.ts",
            "line": 23,
            "itemtype": "method",
            "name": "draw",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "IBufferGeometry",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/IBufferGeometry.ts",
            "line": 28,
            "itemtype": "method",
            "name": "unbind",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "IBufferGeometry",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/MobiusStripGeometry.ts",
            "line": 10,
            "description": "radius",
            "class": "Simplex",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/MobiusStripGeometry.ts",
            "line": 14,
            "description": "half-width",
            "class": "Simplex",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/MobiusStripGeometry.ts",
            "line": 28,
            "description": "http://virtualmathmuseum.org/Surface/moebius_strip/moebius_strip.html",
            "class": "Simplex",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/Simplex.ts",
            "line": 61,
            "description": "The vertices of the simplex.",
            "itemtype": "property",
            "name": "",
            "type": "{Vertex[]}",
            "class": "Simplex",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/Simplex.ts",
            "line": 87,
            "description": "The dimensionality of the simplex.",
            "itemtype": "property",
            "name": "k",
            "type": "{number}",
            "readonly": "",
            "class": "Simplex",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/Simplex.ts",
            "line": 99,
            "description": "An empty set can be consired to be a -1 simplex (algebraic topology).",
            "itemtype": "property",
            "name": "K_FOR_EMPTY",
            "type": "{number}",
            "static": 1,
            "class": "Simplex",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/Simplex.ts",
            "line": 107,
            "description": "A single point may be considered a 0-simplex.",
            "itemtype": "property",
            "name": "K_FOR_POINT",
            "type": "{number}",
            "static": 1,
            "class": "Simplex",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/Simplex.ts",
            "line": 115,
            "description": "A line segment may be considered a 1-simplex.",
            "itemtype": "property",
            "name": "K_FOR_LINE_SEGMENT",
            "type": "{number}",
            "static": 1,
            "class": "Simplex",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/Simplex.ts",
            "line": 122,
            "description": "A 2-simplex is a triangle.",
            "itemtype": "property",
            "name": "K_FOR_TRIANGLE",
            "type": "{number}",
            "static": 1,
            "class": "Simplex",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/Simplex.ts",
            "line": 129,
            "description": "A 3-simplex is a tetrahedron.",
            "itemtype": "property",
            "name": "K_FOR_TETRAHEDRON",
            "type": "{number}",
            "static": 1,
            "class": "Simplex",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/Simplex.ts",
            "line": 136,
            "description": "A 4-simplex is a 5-cell.",
            "itemtype": "property",
            "name": "K_FOR_FIVE_CELL",
            "type": "{number}",
            "static": 1,
            "class": "Simplex",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/Simplex.ts",
            "line": 144,
            "deprecated": true,
            "class": "Simplex",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/Simplex.ts",
            "line": 151,
            "description": "Computes the boundary of the simplex.",
            "itemtype": "method",
            "name": "boundaryMap",
            "params": [
                {
                    "name": "simplex",
                    "description": "",
                    "type": "Simplex"
                }
            ],
            "return": {
                "description": "",
                "type": "Simplex[]"
            },
            "access": "private",
            "tagname": "",
            "class": "Simplex",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/Simplex.ts",
            "line": 267,
            "description": "Computes the result of the boundary operation performed `count` times.",
            "itemtype": "method",
            "name": "boundary",
            "params": [
                {
                    "name": "simplices",
                    "description": "",
                    "type": "Simplex[]"
                },
                {
                    "name": "count",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Simplex[]"
            },
            "class": "Simplex",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/Simplex.ts",
            "line": 281,
            "description": "Computes the result of the subdivide operation performed `count` times.",
            "itemtype": "method",
            "name": "subdivide",
            "params": [
                {
                    "name": "simplices",
                    "description": "",
                    "type": "Simplex[]"
                },
                {
                    "name": "count",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Simplex[]"
            },
            "class": "Simplex",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/SurfaceGeometry.ts",
            "line": 8,
            "author": "zz85 / https://github.com/zz85\nParametric Surfaces Geometry\nbased on the brilliant article by @prideout http://prideout.net/blog/?p=44\n\nnew SurfaceGeometry( parametricFunction, uSegments, vSegments );",
            "class": "LocalizableMessage",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/TubeGeometry.ts",
            "line": 1,
            "author": "jonobr1 / https://github.com/jonobr1\n\nModified from the TorusKnotGeometry by @oosmoxiecode\n\nCreates a tube which extrudes along a 3d spline\n\nUses parallel transport frames as described in\nhttp://www.cs.indiana.edu/pub/techreports/TR425.pdf",
            "class": "LocalizableMessage",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/Vertex.ts",
            "line": 27,
            "description": "The index property is used when computing elements.",
            "deprecated": true,
            "class": "LocalizableMessage",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/VertexAttributeMap.ts",
            "line": 2,
            "description": "Defined for implementation convenience.",
            "class": "LocalizableMessage",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/cube.ts",
            "line": 12,
            "description": "cube as Simplex[]\n\n   v6----- v5\n  /|      /|\n v1------v0|\n | |     | |\n | |v7---|-|v4\n |/      |/\n v2------v3",
            "class": "LocalizableMessage",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/quadrilateral.ts",
            "line": 19,
            "description": "quadrilateral\n\n b-------a\n |       | \n |       |\n |       |\n c-------d\n\nThe quadrilateral is split into two triangles: b-c-a and d-a-c, like a \"Z\".\nThe zeroth vertex for each triangle is opposite the other triangle.",
            "class": "LocalizableMessage",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/tetrahedron.ts",
            "line": 6,
            "description": "terahedron\n\nThe tetrahedron is composed of four triangles: abc, bdc, cda, dba.",
            "class": "LocalizableMessage",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/geometries/toGeometryMeta.ts",
            "line": 25,
            "description": "Returns undefined (void 0) for an empty geometry.",
            "class": "LocalizableMessage",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/glsl/Token.d.ts",
            "line": 3,
            "description": "Every token inherits from a symbol (Pratt).",
            "class": "LocalizableMessage",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/glsl/expr.ts",
            "line": 10,
            "description": "The current token.",
            "class": "LocalizableMessage",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/glsl/expr.ts",
            "line": 21,
            "description": "The prototype for all other symbols. Its method will usually be overridden.",
            "class": "LocalizableMessage",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/glsl/expr.ts",
            "line": 37,
            "description": "A function that makes symbols and looks them up in a cache.",
            "params": [
                {
                    "name": "id",
                    "description": "Identifier"
                },
                {
                    "name": "bp",
                    "description": "Binding Power. Optional. Defaults to zero."
                }
            ],
            "class": "LocalizableMessage",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/glsl/expr.ts",
            "line": 237,
            "description": "The heart of top-down precedence parsing (Pratt).",
            "params": [
                {
                    "name": "rbp",
                    "description": "Right Binding Power."
                }
            ],
            "class": "LocalizableMessage",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/glsl/expr.ts",
            "line": 256,
            "description": "Make a new token from the next simple object in the array and assign to the token variable",
            "class": "LocalizableMessage",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/glsl/expr.ts",
            "line": 263,
            "description": "Symbol obtained from the symbol lookup table.",
            "class": "LocalizableMessage",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/i18n/LocalizableMessage.ts",
            "line": 5,
            "itemtype": "property",
            "name": "message",
            "type": "{string}",
            "class": "LocalizableMessage",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/i18n/readOnly.ts",
            "line": 3,
            "class": "HTMLScriptsMaterial",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/materials/HTMLScriptsMaterial.ts",
            "line": 9,
            "description": "Name used for reference count monitoring and logging.",
            "class": "HTMLScriptsMaterial",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/materials/HTMLScriptsMaterial.ts",
            "line": 40,
            "itemtype": "method",
            "name": "createProgram",
            "return": {
                "description": "",
                "type": "IMaterial"
            },
            "class": "HTMLScriptsMaterial",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/materials/LineMaterial.ts",
            "line": 10,
            "description": "Name used for reference count monitoring and logging.",
            "class": "LineMaterial",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/materials/Material.ts",
            "line": 57,
            "itemtype": "method",
            "name": "destructor",
            "return": {
                "description": "",
                "type": "Void"
            },
            "access": "protected",
            "tagname": "",
            "class": "Material",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/materials/Material.ts",
            "line": 76,
            "itemtype": "property",
            "name": "monitors",
            "type": "{ContextMonitor[]}",
            "class": "Material",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/materials/MeshMaterial.ts",
            "line": 10,
            "description": "Name used for reference count monitoring and logging.",
            "class": "MeshMaterial",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/materials/PointMaterial.ts",
            "line": 10,
            "description": "Name used for reference count monitoring and logging.",
            "class": "PointMaterial",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/materials/SmartMaterial.ts",
            "line": 21,
            "description": "Name used for reference count monitoring and logging.",
            "class": "SmartMaterial",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Cartesian1.ts",
            "line": 5,
            "itemtype": "property",
            "name": "x",
            "type": "number",
            "class": "Cartesian1",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Cartesian2.ts",
            "line": 5,
            "itemtype": "property",
            "name": "x",
            "type": "number",
            "class": "Cartesian2",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Cartesian2.ts",
            "line": 10,
            "itemtype": "property",
            "name": "y",
            "type": "number",
            "class": "Cartesian2",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Cartesian3.ts",
            "line": 5,
            "itemtype": "property",
            "name": "x",
            "type": "number",
            "class": "Cartesian3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Cartesian3.ts",
            "line": 10,
            "itemtype": "property",
            "name": "y",
            "type": "number",
            "class": "Cartesian3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Cartesian3.ts",
            "line": 15,
            "itemtype": "property",
            "name": "z",
            "type": "number",
            "class": "Cartesian3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Cartesian4.ts",
            "line": 5,
            "itemtype": "property",
            "name": "x",
            "type": "number",
            "class": "Cartesian4",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Cartesian4.ts",
            "line": 10,
            "itemtype": "property",
            "name": "y",
            "type": "number",
            "class": "Cartesian4",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Cartesian4.ts",
            "line": 15,
            "itemtype": "property",
            "name": "z",
            "type": "number",
            "class": "Cartesian4",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Cartesian4.ts",
            "line": 20,
            "itemtype": "property",
            "name": "w",
            "type": "number",
            "class": "Cartesian4",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Color.ts",
            "line": 23,
            "description": "Converts an angle, radius, height to a color on a color wheel.",
            "class": "Complex",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Complex.ts",
            "line": 33,
            "description": "The real part of the complex number.",
            "itemtype": "property",
            "name": "x",
            "type": "{number}",
            "class": "Complex",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Complex.ts",
            "line": 39,
            "description": "The imaginary part of the complex number.",
            "itemtype": "property",
            "name": "y",
            "type": "{number}",
            "class": "Complex",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Complex.ts",
            "line": 45,
            "description": "The optional unit of measure.",
            "itemtype": "property",
            "name": "uom",
            "type": "{Unit}",
            "class": "Complex",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Complex.ts",
            "line": 76,
            "description": "__add__ supports operator +(Complex, any)",
            "class": "Complex",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Complex.ts",
            "line": 87,
            "description": "__radd__ supports operator +(any, Complex)",
            "class": "Complex",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Dimensions.ts",
            "line": 134,
            "description": "The <em>mass</em> component of this dimensions instance.",
            "itemtype": "property",
            "name": "M",
            "type": "{Rational}",
            "class": "Dimensions",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Dimensions.ts",
            "line": 173,
            "description": "Determines whether all the components of the Dimensions instance are zero.",
            "itemtype": "method",
            "name": "isZero",
            "return": {
                "description": "<code>true</code> if all the components are zero, otherwise <code>false</code>.",
                "type": "Boolean"
            },
            "class": "Dimensions",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Euclidean1.ts",
            "line": 58,
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "",
                "type": "Euclidean1"
            },
            "class": "Euclidean1",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Euclidean2.ts",
            "line": 810,
            "description": "~ (tilde) produces reversion.",
            "class": "Euclidean2",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Euclidean3.ts",
            "line": 195,
            "class": "Euclidean3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Euclidean3.ts",
            "line": 702,
            "description": "The `w` property is the grade zero (scalar) part of the Euclidean3 multivector.",
            "itemtype": "property",
            "name": "w",
            "type": "number",
            "class": "Euclidean3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Euclidean3.ts",
            "line": 708,
            "description": "The `x` property is the x coordinate of the grade one (vector) part of the Euclidean3 multivector.",
            "class": "Euclidean3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Euclidean3.ts",
            "line": 712,
            "description": "The `y` property is the y coordinate of the grade one (vector) part of the Euclidean3 multivector.",
            "class": "Euclidean3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Euclidean3.ts",
            "line": 716,
            "description": "The `z` property is the z coordinate of the grade one (vector) part of the Euclidean3 multivector.",
            "class": "Euclidean3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Euclidean3.ts",
            "line": 720,
            "description": "The `xy` property is the xy coordinate of the grade two (bivector) part of the Euclidean3 multivector.",
            "class": "Euclidean3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Euclidean3.ts",
            "line": 724,
            "description": "The `yz` property is the yz coordinate of the grade two (bivector) part of the Euclidean3 multivector.",
            "class": "Euclidean3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Euclidean3.ts",
            "line": 728,
            "description": "The `zx` property is the zx coordinate of the grade two (bivector) part of the Euclidean3 multivector.",
            "class": "Euclidean3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Euclidean3.ts",
            "line": 732,
            "description": "The `xyz` property is the grade three (pseudoscalar) part of the Euclidean3 multivector.",
            "class": "Euclidean3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Euclidean3.ts",
            "line": 736,
            "description": "The optional unit of measure.",
            "class": "Euclidean3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Euclidean3.ts",
            "line": 740,
            "description": "Constructs a Euclidean3 from its coordinates.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "w",
                    "description": "The scalar part of the multivector.",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "The vector component of the multivector in the x-direction.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The vector component of the multivector in the y-direction.",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "The vector component of the multivector in the z-direction.",
                    "type": "Number"
                },
                {
                    "name": "xy",
                    "description": "The bivector component of the multivector in the xy-plane.",
                    "type": "Number"
                },
                {
                    "name": "yz",
                    "description": "The bivector component of the multivector in the yz-plane.",
                    "type": "Number"
                },
                {
                    "name": "zx",
                    "description": "The bivector component of the multivector in the zx-plane.",
                    "type": "Number"
                },
                {
                    "name": "xyz",
                    "description": "The pseudoscalar part of the multivector.",
                    "type": "Number"
                },
                {
                    "name": "uom",
                    "description": "The optional unit of measure."
                }
            ],
            "class": "Euclidean3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Euclidean3.ts",
            "line": 817,
            "description": "Computes the sum of this Euclidean3 and another considered to be the rhs of the binary addition, `+`, operator.\nThis method does not change this Euclidean3.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "rhs",
                    "description": "",
                    "type": "Euclidean3"
                }
            ],
            "return": {
                "description": "This Euclidean3 plus rhs.",
                "type": "Euclidean3"
            },
            "class": "Euclidean3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Euclidean3.ts",
            "line": 852,
            "description": "Computes the difference of this Euclidean3 and another considered to be the rhs of the binary subtraction, `-`, operator.\nThis method does not change this Euclidean3.",
            "itemtype": "method",
            "name": "sub",
            "params": [
                {
                    "name": "rhs",
                    "description": "",
                    "type": "Euclidean3"
                }
            ],
            "return": {
                "description": "This Euclidean3 minus rhs.",
                "type": "Euclidean3"
            },
            "class": "Euclidean3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Euclidean3.ts",
            "line": 1076,
            "description": "~ (tilde) produces reversion.",
            "class": "Euclidean3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Euclidean3.ts",
            "line": 1160,
            "description": "Computes the magnitude of this Euclidean3. The magnitude is the square root of the quadrance.",
            "class": "Euclidean3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Euclidean3.ts",
            "line": 1165,
            "description": "Computes the quadrance of this Euclidean3. The quadrance is the square of the magnitude.",
            "class": "Euclidean3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/GeometricElement.ts",
            "line": 2,
            "description": "A mutable element of a geometric space.",
            "class": "LinearElement<I, M, S>",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/LinearElement.ts",
            "line": 12,
            "itemtype": "method",
            "name": "scale",
            "params": [
                {
                    "name": "scalar",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "M"
            },
            "class": "LinearElement<I, M, S>",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/LinearElement.ts",
            "line": 18,
            "description": "<p>\nChanges <code>this</code> instance into the result of reflecting in the\nplane or subspace perpendicular to <code>n</code>. \n</p>",
            "itemtype": "method",
            "name": "reflect",
            "params": [
                {
                    "name": "n",
                    "description": "a vector that is considered to be normal to the reflecting plane.",
                    "type": "V"
                }
            ],
            "return": {
                "description": "",
                "type": "M"
            },
            "class": "LinearElement<I, M, S>",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/LinearElement.ts",
            "line": 28,
            "itemtype": "method",
            "name": "rotate",
            "params": [
                {
                    "name": "rotor",
                    "description": "",
                    "type": "S"
                }
            ],
            "return": {
                "description": "",
                "type": "M"
            },
            "class": "LinearElement<I, M, S>",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Matrix1.ts",
            "line": 6,
            "description": "Constructs a Matrix1 by wrapping a Float32Array.",
            "is_constructor": 1,
            "class": "Matrix4",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Matrix2.ts",
            "line": 5,
            "description": "Constructs a Matrix2 by wrapping a Float32Array.",
            "is_constructor": 1,
            "class": "Matrix4",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Matrix3.ts",
            "line": 8,
            "description": "Constructs a Matrix4 by wrapping a Float32Array.",
            "is_constructor": 1,
            "class": "Matrix4",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Matrix4.ts",
            "line": 25,
            "description": "Constructs a Matrix4 by wrapping a Float32Array.",
            "is_constructor": 1,
            "class": "Matrix4",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Matrix4.ts",
            "line": 158,
            "class": "Matrix4",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Matrix4.ts",
            "line": 208,
            "itemtype": "method",
            "name": "rotate",
            "params": [
                {
                    "name": "attitude",
                    "description": "The spinor from which the rotation will be computed."
                }
            ],
            "class": "Matrix4",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Matrix4.ts",
            "line": 234,
            "itemtype": "method",
            "name": "",
            "params": [
                {
                    "name": "i",
                    "description": "the zero-based index of the row.",
                    "type": "Number"
                }
            ],
            "class": "Matrix4",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Mutable.ts",
            "line": 5,
            "itemtype": "property",
            "name": "data",
            "type": "T",
            "class": "Mutable",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Mutable.ts",
            "line": 10,
            "itemtype": "property",
            "name": "callback",
            "type": "() => T",
            "class": "Mutable",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Quaternion.ts",
            "line": 7,
            "description": "Quaternion is retained for reference only.\nQuaternion should not be exposed.",
            "class": "Rational",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Rational.ts",
            "line": 7,
            "itemtype": "property",
            "name": "_numer",
            "type": "{number}",
            "access": "private",
            "tagname": "",
            "class": "Rational",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Rational.ts",
            "line": 13,
            "itemtype": "property",
            "name": "_denom",
            "type": "{number}",
            "access": "private",
            "tagname": "",
            "class": "Rational",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Rational.ts",
            "line": 77,
            "itemtype": "property",
            "name": "numer",
            "type": "{number}",
            "readonly": "",
            "class": "Rational",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Rational.ts",
            "line": 85,
            "itemtype": "property",
            "name": "denom",
            "type": "{number}",
            "readonly": "",
            "class": "Rational",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Rotor3.ts",
            "line": 3,
            "description": "R = mn (i.e. a versor), with the constraint that R * ~R = ~R * R = 1\n\nThe magnitude constraint means that a Rotor3 can be implemented with a unit scale,\nleaving only 3 parameters. This should improve computational efficiency.",
            "class": "Spinor3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Spinor3.ts",
            "line": 18,
            "itemtype": "property",
            "name": "yz",
            "type": "Number",
            "class": "Spinor3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Spinor3.ts",
            "line": 29,
            "itemtype": "property",
            "name": "zx",
            "type": "Number",
            "class": "Spinor3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Spinor3.ts",
            "line": 40,
            "itemtype": "property",
            "name": "xy",
            "type": "Number",
            "class": "Spinor3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Spinor3.ts",
            "line": 51,
            "itemtype": "property",
            "name": "w",
            "type": "Number",
            "class": "Spinor3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Spinor3.ts",
            "line": 171,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "A non-normative string representation of the target.",
                "type": "String"
            },
            "class": "Spinor3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Vector1.ts",
            "line": 19,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Vector1",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Vector2.ts",
            "line": 20,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Vector2",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Vector2.ts",
            "line": 31,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Vector2",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Vector3.ts",
            "line": 32,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Vector3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Vector3.ts",
            "line": 43,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Vector3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Vector3.ts",
            "line": 54,
            "itemtype": "property",
            "name": "z",
            "type": "Number",
            "class": "Vector3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Vector3.ts",
            "line": 65,
            "description": "Performs in-place addition of vectors.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "v",
                    "description": "The vector to add to this vector.",
                    "type": "Vector3"
                }
            ],
            "class": "Vector3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Vector3.ts",
            "line": 93,
            "description": "Pre-multiplies the column vector corresponding to this vector by the matrix.\nThe result is applied to this vector.\nStrictly speaking, this method does not make much sense because the dimensions\nof the square matrix and column vector don't match.\nTODO: Used by TubeGeometry.",
            "itemtype": "method",
            "name": "applyMatrix",
            "params": [
                {
                    "name": "m",
                    "description": "The 4x4 matrix that pre-multiplies this column vector."
                }
            ],
            "class": "Vector3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Vector3.ts",
            "line": 114,
            "itemtype": "method",
            "name": "reflect",
            "params": [
                {
                    "name": "n",
                    "description": "",
                    "type": "Cartesian3"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Vector3.ts",
            "line": 276,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "A non-normative string representation of the target.",
                "type": "String"
            },
            "class": "Vector3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Vector3.ts",
            "line": 283,
            "description": "Returns the result of `this` + `rhs` without modifying `this`.",
            "itemtype": "method",
            "name": "__add__",
            "params": [
                {
                    "name": "rhs",
                    "description": "",
                    "type": "Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Vector3"
            },
            "class": "Vector3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Vector3.ts",
            "line": 313,
            "itemtype": "method",
            "name": "copy\nCopy constructor.",
            "class": "Vector3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Vector4.ts",
            "line": 20,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Vector4",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Vector4.ts",
            "line": 35,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Vector4",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Vector4.ts",
            "line": 50,
            "itemtype": "property",
            "name": "z",
            "type": "Number",
            "class": "Vector4",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/Vector4.ts",
            "line": 65,
            "itemtype": "property",
            "name": "w",
            "type": "Number",
            "class": "Vector4",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/mathcore.ts",
            "line": 2,
            "description": "Determines whether a property name is callable on an object.",
            "class": "BoxBuilder",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/rotor3.ts",
            "line": 16,
            "description": "Functional constructor for producing a Rotor3.\nThe function is named so as to avoid case-insensitive collisions with Rotor3.\nThis will be exposed as `rotor3`.\nWe only need 2 parameters because the sum of the squares of the components is 1.\nPerhaps we should think of the third as being part of a cache?\nExtending this idea, what if",
            "class": "BoxBuilder",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/wedgeXY.ts",
            "line": 1,
            "description": "Computes the z component of the cross-product of Cartesian vector components.",
            "class": "BoxBuilder",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/wedgeYZ.ts",
            "line": 1,
            "description": "Computes the x component of the cross-product of Cartesian vector components.",
            "class": "BoxBuilder",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/math/wedgeZX.ts",
            "line": 1,
            "description": "Computes the y component of the cross-product of Cartesian vector components.",
            "class": "BoxBuilder",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/mesh/CuboidMesh.ts",
            "line": 8,
            "itemtype": "property",
            "name": "a",
            "class": "CuboidMesh",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/mesh/CuboidMesh.ts",
            "line": 12,
            "itemtype": "property",
            "name": "b",
            "class": "CuboidMesh",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/mesh/CuboidMesh.ts",
            "line": 16,
            "itemtype": "property",
            "name": "c",
            "class": "CuboidMesh",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/mesh/CuboidMesh.ts",
            "line": 20,
            "itemtype": "property",
            "name": "color",
            "type": "Color",
            "class": "CuboidMesh",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/mesh/prism.ts",
            "line": 68,
            "description": "Constructs and returns a prism mesh.",
            "class": "EulerModel",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/models/EulerModel.ts",
            "line": 18,
            "itemtype": "method",
            "name": "setUniforms",
            "params": [
                {
                    "name": "visitor",
                    "description": "",
                    "type": "UniformDataVisitor"
                },
                {
                    "name": "canvasId",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "EulerModel",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/models/EulerModel.ts",
            "line": 27,
            "itemtype": "property",
            "name": "rotation",
            "type": "{Vector3}",
            "readonly": "",
            "class": "EulerModel",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/models/Model3.ts",
            "line": 11,
            "description": "Model3 implements UniformData required for manipulating a body.",
            "class": "RigidBody3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/models/RigidBody3.ts",
            "line": 39,
            "description": "The attitude spinor of the rigid body.",
            "itemtype": "property",
            "name": "attitude",
            "type": "Spinor3",
            "readonly": "",
            "class": "RigidBody3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/models/RigidBody3.ts",
            "line": 51,
            "description": "The position vector of the rigid body.",
            "itemtype": "property",
            "name": "position",
            "type": "Vector3",
            "readonly": "",
            "class": "RigidBody3",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/programs/SimpleWebGLProgram.ts",
            "line": 8,
            "description": "This class is \"simple because\" it assumes exactly one vertex shader and on fragment shader.\nThis class assumes that it will only be supporting a single WebGL rendering context.\nThe existence of the manager in the constructor enables it to enforce this invariant.",
            "class": "ContextRenderer",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/programs/createMaterial.ts",
            "line": 28,
            "description": "Name used for reference count monitoring and logging.",
            "class": "ContextRenderer",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/programs/createMaterial.ts",
            "line": 33,
            "description": "Creates a WebGLProgram with compiled and linked shaders.",
            "class": "ContextRenderer",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/programs/createMaterial.ts",
            "line": 51,
            "description": "Because we are multi-canvas aware, programs are tracked by the canvas id.",
            "class": "ContextRenderer",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/programs/fragmentShader.ts",
            "line": 6,
            "class": "ContextRenderer",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/programs/makeWebGLShader.ts",
            "line": 1,
            "class": "ContextRenderer",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/programs/programFromScripts.ts",
            "line": 11,
            "itemtype": "method",
            "name": "programFromScripts",
            "params": [
                {
                    "name": "monitors",
                    "description": "",
                    "type": "ContextMonitor[]"
                },
                {
                    "name": "vsId",
                    "description": "The vertex shader script element identifier.",
                    "type": "String"
                },
                {
                    "name": "fsId",
                    "description": "The fragment shader script element identifier.",
                    "type": "String"
                },
                {
                    "name": "$document",
                    "description": "The document containing the script elements.",
                    "type": "Document"
                }
            ],
            "class": "ContextRenderer",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/programs/smartProgram.ts",
            "line": 26,
            "class": "ContextRenderer",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/programs/vertexShader.ts",
            "line": 27,
            "class": "ContextRenderer",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/renderers/ContextRenderer.ts",
            "line": 15,
            "description": "The (readonly) cached WebGL rendering context. The context may sometimes be undefined.",
            "itemtype": "property",
            "name": "gl",
            "type": "{WebGLRenderingContext}",
            "readonly": "",
            "class": "ContextRenderer",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/renderers/ContextRenderer.ts",
            "line": 22,
            "itemtype": "property",
            "name": "canvas",
            "type": "{HTMLCanvasElement}",
            "readonly": "",
            "class": "ContextRenderer",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/renderers/ContextRenderer.ts",
            "line": 28,
            "description": "<p>\nDetermines whether the prolog commands are run automatically as part of the render method.\n</p>",
            "itemtype": "property",
            "name": "autoProlog",
            "type": "{boolean}",
            "class": "ContextRenderer",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/renderers/ContextRenderer.ts",
            "line": 36,
            "description": "Executes the prolog commands.",
            "itemtype": "method",
            "name": "prolog",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "ContextRenderer",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/renderers/ContextRenderer.ts",
            "line": 42,
            "description": "Adds a command to the `prolog` that will be executed as part of the render() call, before drawing.",
            "itemtype": "method",
            "name": "addPrologCommand",
            "params": [
                {
                    "name": "command",
                    "description": "",
                    "type": "IPrologCommand"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "ContextRenderer",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/renderers/ContextRenderer.ts",
            "line": 49,
            "itemtype": "method",
            "name": "addContextGainCommand",
            "params": [
                {
                    "name": "command",
                    "description": "",
                    "type": "IContextCommand"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "ContextRenderer",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/renderers/FrameworkDrawContext.ts",
            "line": 2,
            "description": "TODO: Undecided as to whether this should be used.",
            "class": "Canvas3D",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/renderers/initWebGL.ts",
            "line": 3,
            "description": "Returns the WebGLRenderingContext given a canvas.\ncanvas\nattributes\nIf the canvas is undefined then an undefined value is returned for the context.",
            "class": "Canvas3D",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/renderers/renderer.ts",
            "line": 67,
            "description": "We need to know the canvasId so that we can tell drawables where to draw.\nHowever, we don't need an don't want a canvas because we can only get that once the\ncanvas has loaded. I suppose a promise would be OK, but that's for another day.\n\nPart of the role of this class is to manage the commands that are executed at startup/prolog.",
            "class": "Canvas3D",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/resources/TextureResource.ts",
            "line": 9,
            "description": "Name used for reference count monitoring and logging.",
            "class": "Canvas3D",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/resources/TextureResource.ts",
            "line": 74,
            "itemtype": "method",
            "name": "bind",
            "class": "Canvas3D",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/resources/TextureResource.ts",
            "line": 85,
            "itemtype": "method",
            "name": "unbind",
            "class": "Canvas3D",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/Canvas3D.ts",
            "line": 56,
            "itemtype": "method",
            "name": "destructor!~YUIDOC_LINE~!return",
            "type": "Void",
            "access": "protected",
            "tagname": "",
            "class": "Canvas3D",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/Canvas3D.ts",
            "line": 71,
            "description": "<p>\nDetermines whether prolog commands are run automatically as part of the `render()` call.\n</p>",
            "itemtype": "property",
            "name": "autoProlog",
            "type": "boolean",
            "default": "true",
            "class": "Canvas3D",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/Canvas3D.ts",
            "line": 91,
            "itemtype": "property",
            "name": "canvasId",
            "type": "{number}",
            "readonly": "",
            "class": "Canvas3D",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/Drawable.ts",
            "line": 22,
            "description": "Name used for reference count monitoring and logging.",
            "class": "Drawable",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/Drawable.ts",
            "line": 36,
            "itemtype": "property",
            "name": "geometry",
            "type": "{G}",
            "class": "Drawable",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/Drawable.ts",
            "line": 41,
            "itemtype": "property",
            "name": "_material",
            "type": "{M}",
            "access": "private",
            "tagname": "",
            "class": "Drawable",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/Drawable.ts",
            "line": 47,
            "itemtype": "property",
            "name": "name",
            "type": "[string]",
            "class": "Drawable",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/Drawable.ts",
            "line": 52,
            "description": "FIXME This is a bad name because it is not just a collection of buffersByCanvasid.\nA map from canvas to IBufferGeometry.\nIt's a function that returns a mesh, given a canvasId a lokup",
            "class": "Drawable",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/Drawable.ts",
            "line": 58,
            "itemtype": "property",
            "name": "model",
            "type": "{U}",
            "class": "Drawable",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/Drawable.ts",
            "line": 63,
            "itemtype": "property",
            "name": "mode",
            "type": "{number}",
            "access": "private",
            "tagname": "",
            "class": "Drawable",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/Drawable.ts",
            "line": 136,
            "itemtype": "property",
            "name": "material",
            "type": "{M}\n\nProvides a reference counted reference to the material.",
            "class": "Drawable",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/ICamera.ts",
            "line": 2,
            "interface": "ICamera",
            "extends": "IDrawable\n\nSupports IDrawable so that all cameras can be added to the scene graph.",
            "class": "IDrawList",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/IDrawList.ts",
            "line": 17,
            "description": "Gets a collection of drawable elements by name.",
            "itemtype": "method",
            "name": "getDrawablesByName",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "IDrawList",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/KahunaList.ts",
            "line": 11,
            "description": "Implementation Only.",
            "class": "PerspectiveCamera",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/MonitorList.ts",
            "line": 22,
            "description": "Implementation Only.",
            "class": "PerspectiveCamera",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/PerspectiveCamera.ts",
            "line": 20,
            "description": "Name used for reference count monitoring and logging.",
            "class": "PerspectiveCamera",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/PerspectiveCamera.ts",
            "line": 33,
            "itemtype": "property",
            "name": "material",
            "type": "{IMaterial}",
            "class": "PerspectiveCamera",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/PerspectiveCamera.ts",
            "line": 38,
            "itemtype": "property",
            "name": "name",
            "type": "[string]",
            "class": "PerspectiveCamera",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/PerspectiveCamera.ts",
            "line": 43,
            "class": "PerspectiveCamera",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/PerspectiveCamera.ts",
            "line": 90,
            "description": "The aspect ratio (width / height) of the camera viewport.",
            "itemtype": "property",
            "name": "aspect",
            "type": "{number}",
            "readonly": "",
            "class": "PerspectiveCamera",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/PerspectiveCamera.ts",
            "line": 99,
            "itemtype": "method",
            "name": "setAspect",
            "params": [
                {
                    "name": "aspect",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "`this` instance without incrementing the reference count.",
                "type": "PerspectiveCamera"
            },
            "chainable": 1,
            "class": "PerspectiveCamera",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/PerspectiveCamera.ts",
            "line": 109,
            "description": "The position of the camera.",
            "itemtype": "property",
            "name": "eye",
            "type": "{Vector3}",
            "readonly": "",
            "class": "PerspectiveCamera",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/PerspectiveCamera.ts",
            "line": 118,
            "itemtype": "method",
            "name": "setEye",
            "params": [
                {
                    "name": "eye",
                    "description": "",
                    "type": "Cartesian3"
                }
            ],
            "return": {
                "description": "`this` instance without incrementing the reference count.",
                "type": "PerspectiveCamera"
            },
            "chainable": 1,
            "class": "PerspectiveCamera",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/PerspectiveCamera.ts",
            "line": 128,
            "description": "The field of view is the (planar) angle (magnitude) in the camera horizontal plane that encloses object that can be seen.\nMeasured in radians.",
            "itemtype": "property",
            "name": "fov",
            "type": "{number}",
            "readonly": "",
            "class": "PerspectiveCamera",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/PerspectiveCamera.ts",
            "line": 142,
            "itemtype": "method",
            "name": "setFov",
            "params": [
                {
                    "name": "fov",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "`this` instance without incrementing the reference count.",
                "type": "PerspectiveCamera"
            },
            "chainable": 1,
            "class": "PerspectiveCamera",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/PerspectiveCamera.ts",
            "line": 161,
            "description": "The distance to the near plane.",
            "itemtype": "property",
            "name": "near",
            "type": "{number}",
            "readonly": "",
            "class": "PerspectiveCamera",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/PerspectiveCamera.ts",
            "line": 173,
            "itemtype": "method",
            "name": "setNear",
            "params": [
                {
                    "name": "near",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "<p><code>this</code> instance, <em>without incrementing the reference count</em>.</p>",
                "type": "PerspectiveCamera"
            },
            "chainable": 1,
            "class": "PerspectiveCamera",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/Scene.ts",
            "line": 59,
            "itemtype": "method",
            "name": "destructor",
            "return": {
                "description": "",
                "type": "Void"
            },
            "access": "protected",
            "tagname": "",
            "class": "Scene",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/Scene.ts",
            "line": 72,
            "description": "<p>\nAdds the <code>drawable</code> to this <code>Scene</code>.\n</p>",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "drawable",
                    "description": "",
                    "type": "IDrawable"
                }
            ],
            "return": {
                "description": "<p>\nThis method returns <code>undefined</code>.\n</p>",
                "type": "Void"
            },
            "class": "Scene",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/Scene.ts",
            "line": 86,
            "description": "<p>\nTraverses the collection of drawables, drawing each one.\n</p>",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ambients",
                    "description": "",
                    "type": "UniformData"
                },
                {
                    "name": "canvasId",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "beta": 1,
            "class": "Scene",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/Scene.ts",
            "line": 99,
            "description": "Gets a collection of drawable elements by name.",
            "itemtype": "method",
            "name": "getDrawablesByName",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Scene",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/Scene.ts",
            "line": 107,
            "description": "<p>\nRemoves the <code>drawable</code> from this <code>Scene</code>.\n</p>",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "drawable",
                    "description": "",
                    "type": "IDrawable"
                }
            ],
            "return": {
                "description": "<p>\nThis method returns <code>undefined</code>.\n</p>",
                "type": "Void"
            },
            "class": "Scene",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/Scene.ts",
            "line": 121,
            "description": "<p>\nTraverses the collection of drawables, calling the specified callback arguments.\n</p>",
            "itemtype": "method",
            "name": "traverse",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback function for each drawable.",
                    "type": "(drawable: IDrawable) => void"
                },
                {
                    "name": "canvasId",
                    "description": "Identifies the canvas.",
                    "type": "Number"
                },
                {
                    "name": "prolog",
                    "description": "Callback function for each material.",
                    "type": "(material: IMaterial) => void"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Scene",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/createDrawList.ts",
            "line": 29,
            "description": "A grouping of IDrawable, by IMaterial.",
            "class": "IUnknownArray",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/createDrawList.ts",
            "line": 34,
            "description": "I can't see this being used; it's all about the drawables!",
            "class": "IUnknownArray",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/createDrawList.ts",
            "line": 71,
            "description": "accept provides a way to push out the IMaterial without bumping the reference count.",
            "class": "IUnknownArray",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/createDrawList.ts",
            "line": 113,
            "description": "Should look like a set of Drawable Groups. Maybe like a Scene!",
            "class": "IUnknownArray",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/createDrawList.ts",
            "line": 117,
            "description": "Mapping from programId to DrawableGroup ~ (IMaterial,IDrawable[])",
            "class": "IUnknownArray",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/scene/createDrawList.ts",
            "line": 263,
            "description": "method contextGain",
            "class": "IUnknownArray",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/shaders/ShareableWebGLShader.ts",
            "line": 8,
            "description": "Construction on a single monitor says that this will only be used with one.\nBut what if someone external calls monitor.addContextListener(shader)?\nThen the shader starts receiving events for that monitor.\nThis means that this resource is inherantly multi-canvas.\nIt also means that the argument in the constructor is bogus because it is not fixed.\nIt's just an initial list.\nBut then we need IContextProvider to extend ContextMonitor so that this can unhook?",
            "class": "IUnknownArray",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/uniforms/CityTemperature.ts",
            "line": 4,
            "description": "Poller for the yadda server.",
            "class": "IUnknownArray",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/IUnknownArray.ts",
            "line": 20,
            "itemtype": "method",
            "name": "destructor",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "IUnknownArray",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/IUnknownArray.ts",
            "line": 30,
            "description": "Gets the element at the specified index without incrementing the reference count.\nUse this method when you don't intend to hold onto the returned value.",
            "itemtype": "method",
            "name": "getWeakReference",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "IUnknownArray",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/IUnknownArray.ts",
            "line": 40,
            "description": "Gets the element at the specified index, incrementing the reference count.\nUse this method when you intend to hold onto the referent and release it later.",
            "itemtype": "method",
            "name": "getStrongReference",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "IUnknownArray",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/IUnknownArray.ts",
            "line": 55,
            "itemtype": "method",
            "name": "indexOf",
            "params": [
                {
                    "name": "searchElement",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "fromIndex",
                    "description": "",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "IUnknownArray",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/IUnknownArray.ts",
            "line": 64,
            "itemtype": "property",
            "name": "length",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "IUnknownArray",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/IUnknownArray.ts",
            "line": 76,
            "description": "Traverse without Reference Counting",
            "itemtype": "method",
            "name": "forEach",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "(value: T, index: number)=>void"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "IUnknownArray",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/IUnknownArray.ts",
            "line": 85,
            "itemtype": "method",
            "name": "push",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "T"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "IUnknownArray",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/IUnknownArray.ts",
            "line": 95,
            "itemtype": "method",
            "name": "pop",
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "IUnknownArray",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/Shareable.ts",
            "line": 23,
            "description": "<p>\nNotifies this instance that something is dereferencing it.\n</p>",
            "itemtype": "method",
            "name": "addRef",
            "return": {
                "description": "The new value of the reference count.",
                "type": "Number"
            },
            "class": "Shareable",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/Shareable.ts",
            "line": 36,
            "description": "<p>\nNotifies this instance that something is dereferencing it.\n</p>",
            "itemtype": "method",
            "name": "release",
            "return": {
                "description": "The new value of the reference count.",
                "type": "Number"
            },
            "class": "Shareable",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/Shareable.ts",
            "line": 57,
            "description": "<p>\nOutputs a warning to the console that this method should be implemented by the derived class.\n</p>\n<p>\n<em>This method should be implemented by derived classes.</em>\n</p>\n<p>\n<em>Not implementing this method in a derived class risks leaking resources allocated by the derived class.</em>\n</p>",
            "itemtype": "method",
            "name": "destructor",
            "return": {
                "description": "",
                "type": "Void"
            },
            "access": "protected",
            "tagname": "",
            "class": "Shareable",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/StringIUnknownMap.ts",
            "line": 39,
            "description": "Determines whether the key exists in the map with a defined value.",
            "itemtype": "method",
            "name": "exists",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "<p><code>true</code> if there is an element at the specified key.</p>",
                "type": "Boolean"
            },
            "class": "StringIUnknownMap",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/WindowAnimationRunner.ts",
            "line": 6,
            "description": "The `start` method puts the animation runner into the running state.",
            "itemtype": "method",
            "name": "start",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "WindowAnimationRunner",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/WindowAnimationRunner.ts",
            "line": 12,
            "description": "The `stop` method pauses the animation runner from the running state.",
            "itemtype": "method",
            "name": "stop",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "WindowAnimationRunner",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/WindowAnimationRunner.ts",
            "line": 18,
            "description": "The `reset` method sets the time to zero from the paused state.",
            "itemtype": "method",
            "name": "reset",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "WindowAnimationRunner",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/WindowAnimationRunner.ts",
            "line": 24,
            "description": "The `lap` method records the time in the running state.",
            "itemtype": "method",
            "name": "lap",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "WindowAnimationRunner",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/WindowAnimationRunner.ts",
            "line": 30,
            "description": "The readonly `time` property contains the elapsed time on the animation runner.",
            "itemtype": "property",
            "name": "time",
            "type": "{number}",
            "class": "WindowAnimationRunner",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/WindowAnimationRunner.ts",
            "line": 36,
            "description": "The readonly `isRunning` property determines whether the animation runner is running.",
            "itemtype": "property",
            "name": "isRunning",
            "type": "{boolean}",
            "class": "WindowAnimationRunner",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/WindowAnimationRunner.ts",
            "line": 42,
            "description": "The readonly `isPaused` property determines whether the animation runner as been paused.",
            "itemtype": "property",
            "name": "isPaused",
            "type": "{boolean}",
            "class": "WindowAnimationRunner",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/contextProxy.ts",
            "line": 51,
            "description": "This could become an encapsulated call?\nclass GeometryDataCommand\nprivate",
            "class": "",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/contextProxy.ts",
            "line": 57,
            "description": "property mode\ntype {number}\nprivate",
            "class": "",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/contextProxy.ts",
            "line": 66,
            "description": "class GeometryDataCommand\nconstructor",
            "class": "",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/contextProxy.ts",
            "line": 76,
            "description": "Executes the drawElements command using the instance state.\nmethod execute\nparam gl {WebGLRenderingContext}",
            "class": "",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/contextProxy.ts",
            "line": 91,
            "description": "class ElementsBlock",
            "class": "",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/contextProxy.ts",
            "line": 97,
            "description": "Mapping from attribute name to a data structure describing and containing a buffer.\nproperty _attributes\ntype {StringIUnknownMap<ElementBlockAttrib>}\nprivate",
            "class": "",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/contextProxy.ts",
            "line": 104,
            "description": "The buffer containing element indices used in the drawElements command.\nproperty _indexBuffer\ntype {IBuffer}\nprivate",
            "class": "",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/contextProxy.ts",
            "line": 111,
            "description": "An executable command. May be a call to drawElements or drawArrays.\nproperty drawCommand\ntype {GeometryDataCommand}",
            "class": "",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/contextProxy.ts",
            "line": 117,
            "description": "class ElementsBlock\nconstructor",
            "class": "",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/contextProxy.ts",
            "line": 241,
            "class": "",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/contextProxy.ts",
            "line": 324,
            "description": "Implementation of removeContextListener for the kahuna.",
            "class": "",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/contextProxy.ts",
            "line": 440,
            "description": "We must cache the canvas so that we can remove listeners when `stop() is called.\nOnly between `start()` and `stop()` is canvas defined.\nWe use a canvasBuilder so the other initialization can happen while we are waiting\nfor the DOM to load.",
            "class": "",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/contextProxy.ts",
            "line": 475,
            "class": "",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/randumbInteger.ts",
            "line": 1,
            "description": "Initially used to give me a canvasId.\nUsing the big-enough space principle to avoid collisions.",
            "class": "",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/windowAnimationRunner.ts",
            "line": 19,
            "description": "Creates an object implementing a stopwatch API that makes callbacks to user-supplied functions.\nclass WindowAnimationRunner\nconstructor\nparam animate The `animate` function is called for each animation frame.\nparam options.setUp The `setUp` function is called synchronously each time the start() method is called.\nparam options.tearDown The `tearDown` function is called asynchronously each time the animation is stopped.\nparam options.terminate The `terminate` function is called to determine whether the animation should stop.\nparam options.window {Window} The window in which the animation will run. Defaults to the global window.",
            "class": "",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/utils/workbench3D.ts",
            "line": 12,
            "description": "Creates and returns a workbench3D thing.\ncanvas: An HTML canvas element to be inserted.\nTODO: We should remove the camera as being too opinionated, replace with a callback providing",
            "class": "",
            "module": "EIGHT"
        },
        {
            "file": "src/davinci-eight/core.ts",
            "line": 1,
            "class": "",
            "module": "EIGHT"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/davinci-eight/cameras/createFrustum.ts:15"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/davinci-eight/cameras/createPerspective.ts:19"
        },
        {
            "message": "unknown tag: parameters",
            "line": " src/davinci-eight/materials/LineMaterial.ts:26"
        },
        {
            "message": "unknown tag: parameters",
            "line": " src/davinci-eight/materials/MeshMaterial.ts:26"
        },
        {
            "message": "unknown tag: parameters",
            "line": " src/davinci-eight/materials/PointMaterial.ts:26"
        },
        {
            "message": "Missing item type\nName used for reference count monitoring and logging.",
            "line": " src/davinci-eight/core/BufferResource.ts:9"
        },
        {
            "message": "Missing item type\nConverts an angle, radius, height to a color on a color wheel.",
            "line": " src/davinci-eight/core/Color.ts:64"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/core/ContextKahuna.ts:5"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/core/ContextMonitor.ts:6"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/core/ContextMonitor.ts:10"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/core/ContextMonitor.ts:14"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/core/ContextUnique.ts:1"
        },
        {
            "message": "Missing item type\nThe identifier of a canvas must be unique and stable.\nFor speed we assume a low cardinality number.",
            "line": " src/davinci-eight/core/ContextUnique.ts:5"
        },
        {
            "message": "Missing item type\nA DrawContext is the argument for the Drawable draw() method.",
            "line": " src/davinci-eight/core/DrawContext.ts:1"
        },
        {
            "message": "Missing item type\nThe time of the current animation frame.",
            "line": " src/davinci-eight/core/DrawContext.ts:5"
        },
        {
            "message": "Missing item type\nlength 3 implies per-vertex normals with correspondence index 0 <=> a, 1 <=> b, 2 <=> c.\nlength 1 implies a face normal.\nlength 0 implies",
            "line": " src/davinci-eight/core/Face3.ts:21"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/core/IBuffer.ts:3"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/core/ITexture.ts:3"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/core/ITexture2D.ts:3"
        },
        {
            "message": "Missing item type\n'uModel'",
            "line": " src/davinci-eight/core/Symbolic.ts:74"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/core/UniformData.ts:3"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/core/UniformMetaInfo.ts:1"
        },
        {
            "message": "Missing item type\nPolicy for how an attribute variable name is determined.",
            "line": " src/davinci-eight/core/getAttribVarName.ts:4"
        },
        {
            "message": "Missing item type\nPolicy for how a uniform variable name is determined.",
            "line": " src/davinci-eight/core/getUniformVarName.ts:4"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/curves/Curve.ts:2"
        },
        {
            "message": "Missing item type\nVirtual base class method to overwrite and implement in subclasses\nt belongs to [0, 1]",
            "line": " src/davinci-eight/curves/Curve.ts:30"
        },
        {
            "message": "Missing item type\nGet point at relative position in curve according to arc length",
            "line": " src/davinci-eight/curves/Curve.ts:37"
        },
        {
            "message": "Missing item type\nGiven u ( 0 .. 1 ), get a t to find p. This gives you points which are equi distance",
            "line": " src/davinci-eight/curves/Curve.ts:112"
        },
        {
            "message": "Missing item type\nReturns a unit vector tangent at t\nIn case any sub curve does not implement its tangent derivation,\n2 points a small delta apart will be used to find its gradient\nwhich seems to give a reasonable approximation",
            "line": " src/davinci-eight/curves/Curve.ts:194"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/geometries/Geometry.ts:83"
        },
        {
            "message": "Missing item type\nThe values of the attribute.",
            "line": " src/davinci-eight/geometries/GeometryAttribute.ts:43"
        },
        {
            "message": "Missing item type\nThe chunking size of the attribute.\nThis is distinct from the size in the `GeometryMeta`.\nThe chunking size is invariant given the values and is used to describe the vertex attribute pointer.",
            "line": " src/davinci-eight/geometries/GeometryAttribute.ts:48"
        },
        {
            "message": "Missing item type\n0 => POINTS, 1 => LINES, 2 => TRIANGLES",
            "line": " src/davinci-eight/geometries/GeometryData.ts:9"
        },
        {
            "message": "Missing item type\nThe properties of the attributes.\nThe size refers to the size of the GLSL type, not the chunking size.\nThe name is an override of the key that produces the variable name.",
            "line": " src/davinci-eight/geometries/GeometryMeta.ts:11"
        },
        {
            "message": "Missing item type\nHashmap for looking up vertice by position coordinates (and making sure they are unique).\nkey is constructed from coordinates, value is index in vertices array.",
            "line": " src/davinci-eight/geometries/GeometryOld.ts:120"
        },
        {
            "message": "Missing item type\nThe list of unique vertices.",
            "line": " src/davinci-eight/geometries/GeometryOld.ts:125"
        },
        {
            "message": "Missing item type\nIndex is original index in vertices. Entry is index in unique array.",
            "line": " src/davinci-eight/geometries/GeometryOld.ts:129"
        },
        {
            "message": "Missing item type\nradius",
            "line": " src/davinci-eight/geometries/MobiusStripGeometry.ts:10"
        },
        {
            "message": "Missing item type\nhalf-width",
            "line": " src/davinci-eight/geometries/MobiusStripGeometry.ts:14"
        },
        {
            "message": "Missing item type\nhttp://virtualmathmuseum.org/Surface/moebius_strip/moebius_strip.html",
            "line": " src/davinci-eight/geometries/MobiusStripGeometry.ts:28"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/geometries/Simplex.ts:144"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/geometries/SurfaceGeometry.ts:8"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/geometries/TubeGeometry.ts:1"
        },
        {
            "message": "Missing item type\nThe index property is used when computing elements.",
            "line": " src/davinci-eight/geometries/Vertex.ts:27"
        },
        {
            "message": "Missing item type\nDefined for implementation convenience.",
            "line": " src/davinci-eight/geometries/VertexAttributeMap.ts:2"
        },
        {
            "message": "Missing item type\ncube as Simplex[]\n\n   v6----- v5\n  /|      /|\n v1------v0|\n | |     | |\n | |v7---|-|v4\n |/      |/\n v2------v3",
            "line": " src/davinci-eight/geometries/cube.ts:12"
        },
        {
            "message": "Missing item type\nquadrilateral\n\n b-------a\n |       | \n |       |\n |       |\n c-------d\n\nThe quadrilateral is split into two triangles: b-c-a and d-a-c, like a \"Z\".\nThe zeroth vertex for each triangle is opposite the other triangle.",
            "line": " src/davinci-eight/geometries/quadrilateral.ts:19"
        },
        {
            "message": "Missing item type\nterahedron\n\nThe tetrahedron is composed of four triangles: abc, bdc, cda, dba.",
            "line": " src/davinci-eight/geometries/tetrahedron.ts:6"
        },
        {
            "message": "Missing item type\nReturns undefined (void 0) for an empty geometry.",
            "line": " src/davinci-eight/geometries/toGeometryMeta.ts:25"
        },
        {
            "message": "Missing item type\nEvery token inherits from a symbol (Pratt).",
            "line": " src/davinci-eight/glsl/Token.d.ts:3"
        },
        {
            "message": "Missing item type\nThe current token.",
            "line": " src/davinci-eight/glsl/expr.ts:10"
        },
        {
            "message": "Missing item type\nThe prototype for all other symbols. Its method will usually be overridden.",
            "line": " src/davinci-eight/glsl/expr.ts:21"
        },
        {
            "message": "Missing item type\nA function that makes symbols and looks them up in a cache.",
            "line": " src/davinci-eight/glsl/expr.ts:37"
        },
        {
            "message": "Missing item type\nThe heart of top-down precedence parsing (Pratt).",
            "line": " src/davinci-eight/glsl/expr.ts:237"
        },
        {
            "message": "Missing item type\nMake a new token from the next simple object in the array and assign to the token variable",
            "line": " src/davinci-eight/glsl/expr.ts:256"
        },
        {
            "message": "Missing item type\nSymbol obtained from the symbol lookup table.",
            "line": " src/davinci-eight/glsl/expr.ts:263"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/i18n/readOnly.ts:3"
        },
        {
            "message": "Missing item type\nName used for reference count monitoring and logging.",
            "line": " src/davinci-eight/materials/HTMLScriptsMaterial.ts:9"
        },
        {
            "message": "Missing item type\nName used for reference count monitoring and logging.",
            "line": " src/davinci-eight/materials/LineMaterial.ts:10"
        },
        {
            "message": "Missing item type\nName used for reference count monitoring and logging.",
            "line": " src/davinci-eight/materials/MeshMaterial.ts:10"
        },
        {
            "message": "Missing item type\nName used for reference count monitoring and logging.",
            "line": " src/davinci-eight/materials/PointMaterial.ts:10"
        },
        {
            "message": "Missing item type\nName used for reference count monitoring and logging.",
            "line": " src/davinci-eight/materials/SmartMaterial.ts:21"
        },
        {
            "message": "Missing item type\nConverts an angle, radius, height to a color on a color wheel.",
            "line": " src/davinci-eight/math/Color.ts:23"
        },
        {
            "message": "Missing item type\n__add__ supports operator +(Complex, any)",
            "line": " src/davinci-eight/math/Complex.ts:76"
        },
        {
            "message": "Missing item type\n__radd__ supports operator +(any, Complex)",
            "line": " src/davinci-eight/math/Complex.ts:87"
        },
        {
            "message": "Missing item type\n~ (tilde) produces reversion.",
            "line": " src/davinci-eight/math/Euclidean2.ts:810"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/math/Euclidean3.ts:195"
        },
        {
            "message": "Missing item type\nThe `x` property is the x coordinate of the grade one (vector) part of the Euclidean3 multivector.",
            "line": " src/davinci-eight/math/Euclidean3.ts:708"
        },
        {
            "message": "Missing item type\nThe `y` property is the y coordinate of the grade one (vector) part of the Euclidean3 multivector.",
            "line": " src/davinci-eight/math/Euclidean3.ts:712"
        },
        {
            "message": "Missing item type\nThe `z` property is the z coordinate of the grade one (vector) part of the Euclidean3 multivector.",
            "line": " src/davinci-eight/math/Euclidean3.ts:716"
        },
        {
            "message": "Missing item type\nThe `xy` property is the xy coordinate of the grade two (bivector) part of the Euclidean3 multivector.",
            "line": " src/davinci-eight/math/Euclidean3.ts:720"
        },
        {
            "message": "Missing item type\nThe `yz` property is the yz coordinate of the grade two (bivector) part of the Euclidean3 multivector.",
            "line": " src/davinci-eight/math/Euclidean3.ts:724"
        },
        {
            "message": "Missing item type\nThe `zx` property is the zx coordinate of the grade two (bivector) part of the Euclidean3 multivector.",
            "line": " src/davinci-eight/math/Euclidean3.ts:728"
        },
        {
            "message": "Missing item type\nThe `xyz` property is the grade three (pseudoscalar) part of the Euclidean3 multivector.",
            "line": " src/davinci-eight/math/Euclidean3.ts:732"
        },
        {
            "message": "Missing item type\nThe optional unit of measure.",
            "line": " src/davinci-eight/math/Euclidean3.ts:736"
        },
        {
            "message": "Missing item type\nConstructs a Euclidean3 from its coordinates.",
            "line": " src/davinci-eight/math/Euclidean3.ts:740"
        },
        {
            "message": "Missing item type\n~ (tilde) produces reversion.",
            "line": " src/davinci-eight/math/Euclidean3.ts:1076"
        },
        {
            "message": "Missing item type\nComputes the magnitude of this Euclidean3. The magnitude is the square root of the quadrance.",
            "line": " src/davinci-eight/math/Euclidean3.ts:1160"
        },
        {
            "message": "Missing item type\nComputes the quadrance of this Euclidean3. The quadrance is the square of the magnitude.",
            "line": " src/davinci-eight/math/Euclidean3.ts:1165"
        },
        {
            "message": "Missing item type\nA mutable element of a geometric space.",
            "line": " src/davinci-eight/math/GeometricElement.ts:2"
        },
        {
            "message": "Missing item type\nConstructs a Matrix1 by wrapping a Float32Array.",
            "line": " src/davinci-eight/math/Matrix1.ts:6"
        },
        {
            "message": "Missing item type\nConstructs a Matrix2 by wrapping a Float32Array.",
            "line": " src/davinci-eight/math/Matrix2.ts:5"
        },
        {
            "message": "Missing item type\nConstructs a Matrix4 by wrapping a Float32Array.",
            "line": " src/davinci-eight/math/Matrix3.ts:8"
        },
        {
            "message": "Missing item type\nConstructs a Matrix4 by wrapping a Float32Array.",
            "line": " src/davinci-eight/math/Matrix4.ts:25"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/math/Matrix4.ts:158"
        },
        {
            "message": "Missing item type\nQuaternion is retained for reference only.\nQuaternion should not be exposed.",
            "line": " src/davinci-eight/math/Quaternion.ts:7"
        },
        {
            "message": "Missing item type\nR = mn (i.e. a versor), with the constraint that R * ~R = ~R * R = 1\n\nThe magnitude constraint means that a Rotor3 can be implemented with a unit scale,\nleaving only 3 parameters. This should improve computational efficiency.",
            "line": " src/davinci-eight/math/Rotor3.ts:3"
        },
        {
            "message": "Missing item type\nDetermines whether a property name is callable on an object.",
            "line": " src/davinci-eight/math/mathcore.ts:2"
        },
        {
            "message": "Missing item type\nFunctional constructor for producing a Rotor3.\nThe function is named so as to avoid case-insensitive collisions with Rotor3.\nThis will be exposed as `rotor3`.\nWe only need 2 parameters because the sum of the squares of the components is 1.\nPerhaps we should think of the third as being part of a cache?\nExtending this idea, what if",
            "line": " src/davinci-eight/math/rotor3.ts:16"
        },
        {
            "message": "Missing item type\nComputes the z component of the cross-product of Cartesian vector components.",
            "line": " src/davinci-eight/math/wedgeXY.ts:1"
        },
        {
            "message": "Missing item type\nComputes the x component of the cross-product of Cartesian vector components.",
            "line": " src/davinci-eight/math/wedgeYZ.ts:1"
        },
        {
            "message": "Missing item type\nComputes the y component of the cross-product of Cartesian vector components.",
            "line": " src/davinci-eight/math/wedgeZX.ts:1"
        },
        {
            "message": "Missing item type\nConstructs and returns a prism mesh.",
            "line": " src/davinci-eight/mesh/prism.ts:68"
        },
        {
            "message": "Missing item type\nModel3 implements UniformData required for manipulating a body.",
            "line": " src/davinci-eight/models/Model3.ts:11"
        },
        {
            "message": "Missing item type\nThis class is \"simple because\" it assumes exactly one vertex shader and on fragment shader.\nThis class assumes that it will only be supporting a single WebGL rendering context.\nThe existence of the manager in the constructor enables it to enforce this invariant.",
            "line": " src/davinci-eight/programs/SimpleWebGLProgram.ts:8"
        },
        {
            "message": "Missing item type\nName used for reference count monitoring and logging.",
            "line": " src/davinci-eight/programs/createMaterial.ts:28"
        },
        {
            "message": "Missing item type\nCreates a WebGLProgram with compiled and linked shaders.",
            "line": " src/davinci-eight/programs/createMaterial.ts:33"
        },
        {
            "message": "Missing item type\nBecause we are multi-canvas aware, programs are tracked by the canvas id.",
            "line": " src/davinci-eight/programs/createMaterial.ts:51"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/programs/fragmentShader.ts:6"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/programs/makeWebGLShader.ts:1"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/programs/smartProgram.ts:26"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/programs/vertexShader.ts:27"
        },
        {
            "message": "Missing item type\nTODO: Undecided as to whether this should be used.",
            "line": " src/davinci-eight/renderers/FrameworkDrawContext.ts:2"
        },
        {
            "message": "Missing item type\nReturns the WebGLRenderingContext given a canvas.\ncanvas\nattributes\nIf the canvas is undefined then an undefined value is returned for the context.",
            "line": " src/davinci-eight/renderers/initWebGL.ts:3"
        },
        {
            "message": "Missing item type\nWe need to know the canvasId so that we can tell drawables where to draw.\nHowever, we don't need an don't want a canvas because we can only get that once the\ncanvas has loaded. I suppose a promise would be OK, but that's for another day.\n\nPart of the role of this class is to manage the commands that are executed at startup/prolog.",
            "line": " src/davinci-eight/renderers/renderer.ts:67"
        },
        {
            "message": "Missing item type\nName used for reference count monitoring and logging.",
            "line": " src/davinci-eight/resources/TextureResource.ts:9"
        },
        {
            "message": "Missing item type\nName used for reference count monitoring and logging.",
            "line": " src/davinci-eight/scene/Drawable.ts:22"
        },
        {
            "message": "Missing item type\nFIXME This is a bad name because it is not just a collection of buffersByCanvasid.\nA map from canvas to IBufferGeometry.\nIt's a function that returns a mesh, given a canvasId a lokup",
            "line": " src/davinci-eight/scene/Drawable.ts:52"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/scene/ICamera.ts:2"
        },
        {
            "message": "Missing item type\nImplementation Only.",
            "line": " src/davinci-eight/scene/KahunaList.ts:11"
        },
        {
            "message": "Missing item type\nImplementation Only.",
            "line": " src/davinci-eight/scene/MonitorList.ts:22"
        },
        {
            "message": "Missing item type\nName used for reference count monitoring and logging.",
            "line": " src/davinci-eight/scene/PerspectiveCamera.ts:20"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/scene/PerspectiveCamera.ts:43"
        },
        {
            "message": "Missing item type\nA grouping of IDrawable, by IMaterial.",
            "line": " src/davinci-eight/scene/createDrawList.ts:29"
        },
        {
            "message": "Missing item type\nI can't see this being used; it's all about the drawables!",
            "line": " src/davinci-eight/scene/createDrawList.ts:34"
        },
        {
            "message": "Missing item type\naccept provides a way to push out the IMaterial without bumping the reference count.",
            "line": " src/davinci-eight/scene/createDrawList.ts:71"
        },
        {
            "message": "Missing item type\nShould look like a set of Drawable Groups. Maybe like a Scene!",
            "line": " src/davinci-eight/scene/createDrawList.ts:113"
        },
        {
            "message": "Missing item type\nMapping from programId to DrawableGroup ~ (IMaterial,IDrawable[])",
            "line": " src/davinci-eight/scene/createDrawList.ts:117"
        },
        {
            "message": "Missing item type\nmethod contextGain",
            "line": " src/davinci-eight/scene/createDrawList.ts:263"
        },
        {
            "message": "Missing item type\nConstruction on a single monitor says that this will only be used with one.\nBut what if someone external calls monitor.addContextListener(shader)?\nThen the shader starts receiving events for that monitor.\nThis means that this resource is inherantly multi-canvas.\nIt also means that the argument in the constructor is bogus because it is not fixed.\nIt's just an initial list.\nBut then we need IContextProvider to extend ContextMonitor so that this can unhook?",
            "line": " src/davinci-eight/shaders/ShareableWebGLShader.ts:8"
        },
        {
            "message": "Missing item type\nPoller for the yadda server.",
            "line": " src/davinci-eight/uniforms/CityTemperature.ts:4"
        },
        {
            "message": "Missing item type\nThis could become an encapsulated call?\nclass GeometryDataCommand\nprivate",
            "line": " src/davinci-eight/utils/contextProxy.ts:51"
        },
        {
            "message": "Missing item type\nproperty mode\ntype {number}\nprivate",
            "line": " src/davinci-eight/utils/contextProxy.ts:57"
        },
        {
            "message": "Missing item type\nclass GeometryDataCommand\nconstructor",
            "line": " src/davinci-eight/utils/contextProxy.ts:66"
        },
        {
            "message": "Missing item type\nExecutes the drawElements command using the instance state.\nmethod execute\nparam gl {WebGLRenderingContext}",
            "line": " src/davinci-eight/utils/contextProxy.ts:76"
        },
        {
            "message": "Missing item type\nclass ElementsBlock",
            "line": " src/davinci-eight/utils/contextProxy.ts:91"
        },
        {
            "message": "Missing item type\nMapping from attribute name to a data structure describing and containing a buffer.\nproperty _attributes\ntype {StringIUnknownMap<ElementBlockAttrib>}\nprivate",
            "line": " src/davinci-eight/utils/contextProxy.ts:97"
        },
        {
            "message": "Missing item type\nThe buffer containing element indices used in the drawElements command.\nproperty _indexBuffer\ntype {IBuffer}\nprivate",
            "line": " src/davinci-eight/utils/contextProxy.ts:104"
        },
        {
            "message": "Missing item type\nAn executable command. May be a call to drawElements or drawArrays.\nproperty drawCommand\ntype {GeometryDataCommand}",
            "line": " src/davinci-eight/utils/contextProxy.ts:111"
        },
        {
            "message": "Missing item type\nclass ElementsBlock\nconstructor",
            "line": " src/davinci-eight/utils/contextProxy.ts:117"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/utils/contextProxy.ts:241"
        },
        {
            "message": "Missing item type\nImplementation of removeContextListener for the kahuna.",
            "line": " src/davinci-eight/utils/contextProxy.ts:324"
        },
        {
            "message": "Missing item type\nWe must cache the canvas so that we can remove listeners when `stop() is called.\nOnly between `start()` and `stop()` is canvas defined.\nWe use a canvasBuilder so the other initialization can happen while we are waiting\nfor the DOM to load.",
            "line": " src/davinci-eight/utils/contextProxy.ts:440"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/utils/contextProxy.ts:475"
        },
        {
            "message": "Missing item type\nInitially used to give me a canvasId.\nUsing the big-enough space principle to avoid collisions.",
            "line": " src/davinci-eight/utils/randumbInteger.ts:1"
        },
        {
            "message": "Missing item type\nCreates an object implementing a stopwatch API that makes callbacks to user-supplied functions.\nclass WindowAnimationRunner\nconstructor\nparam animate The `animate` function is called for each animation frame.\nparam options.setUp The `setUp` function is called synchronously each time the start() method is called.\nparam options.tearDown The `tearDown` function is called asynchronously each time the animation is stopped.\nparam options.terminate The `terminate` function is called to determine whether the animation should stop.\nparam options.window {Window} The window in which the animation will run. Defaults to the global window.",
            "line": " src/davinci-eight/utils/windowAnimationRunner.ts:19"
        },
        {
            "message": "Missing item type\nCreates and returns a workbench3D thing.\ncanvas: An HTML canvas element to be inserted.\nTODO: We should remove the camera as being too opinionated, replace with a callback providing",
            "line": " src/davinci-eight/utils/workbench3D.ts:12"
        },
        {
            "message": "Missing item type",
            "line": " src/davinci-eight/core.ts:1"
        }
    ]
}