{"version":3,"file":"index.js","sources":["../module/py-to-ts/transpiler.js","../module/py-to-ts/SourceMap.js","../module/py-to-ts/utils.js","../module/py-to-ts/toStringLiteralJS.js","../module/py-to-ts/asserts.js"],"sourcesContent":["import { assert } from './asserts';\r\nimport { Attribute } from 'typhon-lang';\r\nimport { Add, Sub, Mult, Div, BitOr, BitXor, BitAnd, LShift, RShift, FloorDiv, Mod } from 'typhon-lang';\r\nimport { Eq, NotEq, Gt, GtE, Lt, LtE, In, NotIn, Is, IsNot } from 'typhon-lang';\r\nimport { Name } from 'typhon-lang';\r\nimport { Module } from 'typhon-lang';\r\nimport { parse, SourceKind } from 'typhon-lang';\r\nimport { astFromParse } from 'typhon-lang';\r\nimport { semanticsOfModule } from 'typhon-lang';\r\nimport { toStringLiteralJS } from './toStringLiteralJS';\r\nimport { DEF_LOCAL } from 'typhon-lang';\r\nimport { isClassNameByConvention, isMethod } from './utils';\r\nimport { CodeWriter } from 'code-writer';\r\nimport { Position, positionComparator } from 'code-writer';\r\nimport { RBTree } from 'generic-rbtree';\r\nimport { SourceMap } from './SourceMap';\r\n/**\r\n * Provides enhanced scope information beyond the SymbolTableScope.\r\n */\r\nvar PrinterUnit = (function () {\r\n    /**\r\n     * Stuff that changes on entry/exit of code blocks. must be saved and restored\r\n     * when returning to a block.\r\n     * Corresponds to the body of a module, class, or function.\r\n     */\r\n    function PrinterUnit(name, ste) {\r\n        /**\r\n         * Used to determine whether a local variable has been declared.\r\n         */\r\n        this.declared = {};\r\n        assert(typeof name === 'string');\r\n        assert(typeof ste === 'object');\r\n        this.name = name;\r\n        this.ste = ste;\r\n        this.private_ = null;\r\n        this.beginLine = 0;\r\n        this.lineno = 0;\r\n        this.linenoSet = false;\r\n        this.localnames = [];\r\n        this.blocknum = 0;\r\n        this.blocks = [];\r\n        this.curblock = 0;\r\n        this.scopename = null;\r\n        this.prefixCode = '';\r\n        this.varDeclsCode = '';\r\n        this.switchCode = '';\r\n        this.suffixCode = '';\r\n        // stack of where to go on a break\r\n        this.breakBlocks = [];\r\n        // stack of where to go on a continue\r\n        this.continueBlocks = [];\r\n        this.exceptBlocks = [];\r\n        this.finallyBlocks = [];\r\n    }\r\n    PrinterUnit.prototype.activateScope = function () {\r\n        // Do nothing yet.\r\n    };\r\n    PrinterUnit.prototype.deactivateScope = function () {\r\n        // Do nothing yet.\r\n    };\r\n    return PrinterUnit;\r\n}());\r\nvar Printer = (function () {\r\n    /**\r\n     *\r\n     * @param st The symbol table obtained from semantic analysis.\r\n     * @param flags Not being used yet. May become options.\r\n     * @param sourceText The original source code, provided for annotating the generated code and source mapping.\r\n     */\r\n    function Printer(st, flags, sourceText, beginLine, beginColumn, trace) {\r\n        this.beginLine = beginLine;\r\n        this.beginColumn = beginColumn;\r\n        /**\r\n         * Used to provide a unique number for generated symbol names.\r\n         */\r\n        this.gensymCount = 0;\r\n        // this.fileName = fileName;\r\n        this.st = st;\r\n        this.flags = flags;\r\n        this.interactive = false;\r\n        this.nestlevel = 0;\r\n        this.u = null;\r\n        this.stack = [];\r\n        this.result = [];\r\n        // this.gensymcount = 0;\r\n        this.allUnits = [];\r\n        this.source = sourceText ? sourceText.split(\"\\n\") : false;\r\n        this.writer = new CodeWriter(beginLine, beginColumn, {}, trace);\r\n    }\r\n    /**\r\n     * This is the entry point for this visitor.\r\n     */\r\n    Printer.prototype.transpileModule = function (module) {\r\n        // Traversing the AST sends commands to the writer.\r\n        this.enterScope(\"<module>\", module, this.beginLine, this.beginColumn);\r\n        this.module(module);\r\n        this.exitScope();\r\n        // Now return the captured events as a transpiled module.\r\n        return this.writer.snapshot();\r\n    };\r\n    /**\r\n     * Looks up the SymbolTableScope.\r\n     * Pushes a new PrinterUnit onto the stack.\r\n     * Returns a string identifying the scope.\r\n     * @param name The name that will be assigned to the PrinterUnit.\r\n     * @param key A scope object in the AST from sematic analysis. Provides the mapping to the SymbolTableScope.\r\n     */\r\n    Printer.prototype.enterScope = function (name, key, beginLine, beginColumn) {\r\n        var u = new PrinterUnit(name, this.st.getStsForAst(key));\r\n        u.beginLine = beginLine;\r\n        u.beginColumn = beginColumn;\r\n        if (this.u && this.u.private_) {\r\n            u.private_ = this.u.private_;\r\n        }\r\n        this.stack.push(this.u);\r\n        this.allUnits.push(u);\r\n        var scopeName = this.gensym('scope');\r\n        u.scopename = scopeName;\r\n        this.u = u;\r\n        this.u.activateScope();\r\n        this.nestlevel++;\r\n        return scopeName;\r\n    };\r\n    Printer.prototype.exitScope = function () {\r\n        if (this.u) {\r\n            this.u.deactivateScope();\r\n        }\r\n        this.nestlevel--;\r\n        if (this.stack.length - 1 >= 0) {\r\n            this.u = this.stack.pop();\r\n        }\r\n        else {\r\n            this.u = null;\r\n        }\r\n        if (this.u) {\r\n            this.u.activateScope();\r\n        }\r\n    };\r\n    /**\r\n     * Generates a unique symbol name for the provided namespace.\r\n     */\r\n    Printer.prototype.gensym = function (namespace) {\r\n        var symbolName = namespace || '';\r\n        symbolName = '$' + symbolName;\r\n        symbolName += this.gensymCount++;\r\n        return symbolName;\r\n    };\r\n    // Everything below here is an implementation of the Visitor\r\n    Printer.prototype.assign = function (assign) {\r\n        this.writer.beginStatement();\r\n        // TODO: Declaration.\r\n        // TODO: How to deal with multiple target?\r\n        for (var _i = 0, _a = assign.targets; _i < _a.length; _i++) {\r\n            var target = _a[_i];\r\n            if (target instanceof Name) {\r\n                var flags = this.u.ste.symFlags[target.id.value];\r\n                if (flags && DEF_LOCAL) {\r\n                    if (this.u.declared[target.id.value]) {\r\n                        // The variable has already been declared.\r\n                    }\r\n                    else {\r\n                        // We use let for now because we would need to look ahead for more assignments.\r\n                        // The smenatic analysis could count the number of assignments in the current scope?\r\n                        this.writer.write(\"let \", null);\r\n                        this.u.declared[target.id.value] = true;\r\n                    }\r\n                }\r\n            }\r\n            target.accept(this);\r\n        }\r\n        this.writer.assign(\"=\", assign.eqRange);\r\n        assign.value.accept(this);\r\n        this.writer.endStatement();\r\n    };\r\n    Printer.prototype.attribute = function (attribute) {\r\n        attribute.value.accept(this);\r\n        this.writer.write(\".\", null);\r\n        this.writer.str(attribute.attr.value, attribute.attr.range);\r\n    };\r\n    Printer.prototype.binOp = function (be) {\r\n        be.lhs.accept(this);\r\n        var op = be.op;\r\n        var opRange = be.opRange;\r\n        switch (op) {\r\n            case Add: {\r\n                this.writer.binOp(\"+\", opRange);\r\n                break;\r\n            }\r\n            case Sub: {\r\n                this.writer.binOp(\"-\", opRange);\r\n                break;\r\n            }\r\n            case Mult: {\r\n                this.writer.binOp(\"*\", opRange);\r\n                break;\r\n            }\r\n            case Div: {\r\n                this.writer.binOp(\"/\", opRange);\r\n                break;\r\n            }\r\n            case BitOr: {\r\n                this.writer.binOp(\"|\", opRange);\r\n                break;\r\n            }\r\n            case BitXor: {\r\n                this.writer.binOp(\"^\", opRange);\r\n                break;\r\n            }\r\n            case BitAnd: {\r\n                this.writer.binOp(\"&\", opRange);\r\n                break;\r\n            }\r\n            case LShift: {\r\n                this.writer.binOp(\"<<\", opRange);\r\n                break;\r\n            }\r\n            case RShift: {\r\n                this.writer.binOp(\">>\", opRange);\r\n                break;\r\n            }\r\n            case Mod: {\r\n                this.writer.binOp(\"%\", opRange);\r\n                break;\r\n            }\r\n            case FloorDiv: {\r\n                // TODO: What is the best way to handle FloorDiv.\r\n                // This doesn't actually exist in TypeScript.\r\n                this.writer.binOp(\"//\", opRange);\r\n                break;\r\n            }\r\n            default: {\r\n                throw new Error(\"Unexpected binary operator \" + op + \": \" + typeof op);\r\n            }\r\n        }\r\n        be.rhs.accept(this);\r\n    };\r\n    Printer.prototype.callExpression = function (ce) {\r\n        if (ce.func instanceof Name) {\r\n            if (isClassNameByConvention(ce.func)) {\r\n                this.writer.write(\"new \", null);\r\n            }\r\n        }\r\n        else if (ce.func instanceof Attribute) {\r\n            if (isClassNameByConvention(ce.func)) {\r\n                this.writer.write(\"new \", null);\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"Call.func must be a Name \" + ce.func);\r\n        }\r\n        ce.func.accept(this);\r\n        this.writer.openParen();\r\n        for (var i = 0; i < ce.args.length; i++) {\r\n            if (i > 0) {\r\n                this.writer.comma(null, null);\r\n            }\r\n            var arg = ce.args[i];\r\n            arg.accept(this);\r\n        }\r\n        for (var i = 0; i < ce.keywords.length; ++i) {\r\n            if (i > 0) {\r\n                this.writer.comma(null, null);\r\n            }\r\n            ce.keywords[i].value.accept(this);\r\n        }\r\n        if (ce.starargs) {\r\n            ce.starargs.accept(this);\r\n        }\r\n        if (ce.kwargs) {\r\n            ce.kwargs.accept(this);\r\n        }\r\n        this.writer.closeParen();\r\n    };\r\n    Printer.prototype.classDef = function (cd) {\r\n        this.writer.write(\"class\", null);\r\n        this.writer.space();\r\n        this.writer.name(cd.name.value, cd.name.range);\r\n        // this.writer.openParen();\r\n        // this.writer.closeParen();\r\n        this.writer.beginBlock();\r\n        /*\r\n        this.writer.write(\"constructor\");\r\n        this.writer.openParen();\r\n        this.writer.closeParen();\r\n        this.writer.beginBlock();\r\n        this.writer.endBlock();\r\n        */\r\n        for (var _i = 0, _a = cd.body; _i < _a.length; _i++) {\r\n            var stmt = _a[_i];\r\n            stmt.accept(this);\r\n        }\r\n        this.writer.endBlock();\r\n    };\r\n    Printer.prototype.compareExpression = function (ce) {\r\n        ce.left.accept(this);\r\n        for (var _i = 0, _a = ce.ops; _i < _a.length; _i++) {\r\n            var op = _a[_i];\r\n            switch (op) {\r\n                case Eq: {\r\n                    this.writer.write(\"===\", null);\r\n                    break;\r\n                }\r\n                case NotEq: {\r\n                    this.writer.write(\"!==\", null);\r\n                    break;\r\n                }\r\n                case Lt: {\r\n                    this.writer.write(\"<\", null);\r\n                    break;\r\n                }\r\n                case LtE: {\r\n                    this.writer.write(\"<=\", null);\r\n                    break;\r\n                }\r\n                case Gt: {\r\n                    this.writer.write(\">\", null);\r\n                    break;\r\n                }\r\n                case GtE: {\r\n                    this.writer.write(\">=\", null);\r\n                    break;\r\n                }\r\n                case Is: {\r\n                    this.writer.write(\"===\", null);\r\n                    break;\r\n                }\r\n                case IsNot: {\r\n                    this.writer.write(\"!==\", null);\r\n                    break;\r\n                }\r\n                case In: {\r\n                    this.writer.write(\" in \", null);\r\n                    break;\r\n                }\r\n                case NotIn: {\r\n                    this.writer.write(\" not in \", null);\r\n                    break;\r\n                }\r\n                default: {\r\n                    throw new Error(\"Unexpected comparison expression operator: \" + op);\r\n                }\r\n            }\r\n        }\r\n        for (var _b = 0, _c = ce.comparators; _b < _c.length; _b++) {\r\n            var comparator = _c[_b];\r\n            comparator.accept(this);\r\n        }\r\n    };\r\n    Printer.prototype.dict = function (dict) {\r\n        var keys = dict.keys;\r\n        var values = dict.values;\r\n        var N = keys.length;\r\n        this.writer.beginObject();\r\n        for (var i = 0; i < N; i++) {\r\n            if (i > 0) {\r\n                this.writer.comma(null, null);\r\n            }\r\n            keys[i].accept(this);\r\n            this.writer.write(\":\", null);\r\n            values[i].accept(this);\r\n        }\r\n        this.writer.endObject();\r\n    };\r\n    Printer.prototype.expressionStatement = function (s) {\r\n        this.writer.beginStatement();\r\n        s.value.accept(this);\r\n        this.writer.endStatement();\r\n    };\r\n    Printer.prototype.functionDef = function (functionDef) {\r\n        var isClassMethod = isMethod(functionDef);\r\n        this.writer.write(\"export \", null);\r\n        if (!isClassMethod) {\r\n            this.writer.write(\"function \", null);\r\n        }\r\n        this.writer.name(functionDef.name.value, functionDef.name.range);\r\n        this.writer.openParen();\r\n        for (var i = 0; i < functionDef.args.args.length; i++) {\r\n            var arg = functionDef.args.args[i];\r\n            if (i === 0) {\r\n                if (arg.id.value === 'self') {\r\n                    // Ignore.\r\n                }\r\n                else {\r\n                    arg.accept(this);\r\n                }\r\n            }\r\n            else {\r\n                arg.accept(this);\r\n            }\r\n        }\r\n        this.writer.closeParen();\r\n        if (functionDef.returnType) {\r\n            this.writer.write(\":\", null);\r\n            functionDef.returnType.accept(this);\r\n        }\r\n        this.writer.beginBlock();\r\n        for (var _i = 0, _a = functionDef.body; _i < _a.length; _i++) {\r\n            var stmt = _a[_i];\r\n            stmt.accept(this);\r\n        }\r\n        this.writer.endBlock();\r\n    };\r\n    Printer.prototype.ifStatement = function (i) {\r\n        this.writer.write(\"if\", null);\r\n        this.writer.openParen();\r\n        i.test.accept(this);\r\n        this.writer.closeParen();\r\n        this.writer.beginBlock();\r\n        for (var _i = 0, _a = i.consequent; _i < _a.length; _i++) {\r\n            var con = _a[_i];\r\n            con.accept(this);\r\n        }\r\n        this.writer.endBlock();\r\n    };\r\n    Printer.prototype.importFrom = function (importFrom) {\r\n        this.writer.beginStatement();\r\n        this.writer.write(\"import\", null);\r\n        this.writer.space();\r\n        this.writer.beginBlock();\r\n        for (var i = 0; i < importFrom.names.length; i++) {\r\n            if (i > 0) {\r\n                this.writer.comma(null, null);\r\n            }\r\n            var alias = importFrom.names[i];\r\n            this.writer.name(alias.name.value, alias.name.range);\r\n            if (alias.asname) {\r\n                this.writer.space();\r\n                this.writer.write(\"as\", null);\r\n                this.writer.space();\r\n                this.writer.write(alias.asname, null);\r\n            }\r\n        }\r\n        this.writer.endBlock();\r\n        this.writer.space();\r\n        this.writer.write(\"from\", null);\r\n        this.writer.space();\r\n        this.writer.str(toStringLiteralJS(importFrom.module.value), importFrom.module.range);\r\n        this.writer.endStatement();\r\n    };\r\n    Printer.prototype.list = function (list) {\r\n        var elements = list.elts;\r\n        var N = elements.length;\r\n        this.writer.write('[', null);\r\n        for (var i = 0; i < N; i++) {\r\n            if (i > 0) {\r\n                this.writer.comma(null, null);\r\n            }\r\n            elements[i].accept(this);\r\n        }\r\n        this.writer.write(']', null);\r\n    };\r\n    Printer.prototype.module = function (m) {\r\n        for (var _i = 0, _a = m.body; _i < _a.length; _i++) {\r\n            var stmt = _a[_i];\r\n            stmt.accept(this);\r\n        }\r\n    };\r\n    Printer.prototype.name = function (name) {\r\n        // TODO: Since 'True' and 'False' are reserved words in Python,\r\n        // syntactic analysis (parsing) should be sufficient to identify\r\n        // this name as a boolean expression - avoiding this overhead.\r\n        var value = name.id.value;\r\n        var range = name.id.range;\r\n        switch (value) {\r\n            case 'True': {\r\n                this.writer.name('true', range);\r\n                break;\r\n            }\r\n            case 'False': {\r\n                this.writer.name('false', range);\r\n                break;\r\n            }\r\n            case 'str': {\r\n                this.writer.name('string', range);\r\n                break;\r\n            }\r\n            case 'bool': {\r\n                this.writer.name('boolean', range);\r\n                break;\r\n            }\r\n            default: {\r\n                this.writer.name(value, range);\r\n            }\r\n        }\r\n    };\r\n    Printer.prototype.num = function (num) {\r\n        var value = num.n.value;\r\n        var range = num.n.range;\r\n        this.writer.num(value.toString(), range);\r\n    };\r\n    Printer.prototype.print = function (print) {\r\n        this.writer.name(\"console\", null);\r\n        this.writer.write(\".\", null);\r\n        this.writer.name(\"log\", null);\r\n        this.writer.openParen();\r\n        for (var _i = 0, _a = print.values; _i < _a.length; _i++) {\r\n            var value = _a[_i];\r\n            value.accept(this);\r\n        }\r\n        this.writer.closeParen();\r\n    };\r\n    Printer.prototype.returnStatement = function (rs) {\r\n        this.writer.beginStatement();\r\n        this.writer.write(\"return\", null);\r\n        this.writer.write(\" \", null);\r\n        rs.value.accept(this);\r\n        this.writer.endStatement();\r\n    };\r\n    Printer.prototype.str = function (str) {\r\n        var s = str.s;\r\n        // const begin = str.begin;\r\n        // const end = str.end;\r\n        this.writer.str(toStringLiteralJS(s.value), s.range);\r\n    };\r\n    return Printer;\r\n}());\r\nexport function transpileModule(sourceText, trace) {\r\n    if (trace === void 0) { trace = false; }\r\n    var cst = parse(sourceText, SourceKind.File);\r\n    if (typeof cst === 'object') {\r\n        var stmts = astFromParse(cst);\r\n        var mod = new Module(stmts);\r\n        var symbolTable = semanticsOfModule(mod);\r\n        var printer = new Printer(symbolTable, 0, sourceText, 1, 0, trace);\r\n        var textAndMappings = printer.transpileModule(mod);\r\n        var code = textAndMappings.text;\r\n        var sourceMap = mappingTreeToSourceMap(textAndMappings.tree, trace);\r\n        return { code: code, sourceMap: sourceMap };\r\n    }\r\n    else {\r\n        throw new Error(\"Error parsing source for file.\");\r\n    }\r\n}\r\nvar NIL_VALUE = new Position(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\r\nvar HI_KEY = new Position(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\r\nvar LO_KEY = new Position(Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER);\r\nfunction mappingTreeToSourceMap(mappingTree, trace) {\r\n    var sourceToTarget = new RBTree(LO_KEY, HI_KEY, NIL_VALUE, positionComparator);\r\n    var targetToSource = new RBTree(LO_KEY, HI_KEY, NIL_VALUE, positionComparator);\r\n    if (mappingTree) {\r\n        for (var _i = 0, _a = mappingTree.mappings(); _i < _a.length; _i++) {\r\n            var mapping = _a[_i];\r\n            var source = mapping.source;\r\n            var target = mapping.target;\r\n            // Convert to immutable values for targets.\r\n            var tBegin = new Position(target.begin.line, target.begin.column);\r\n            var tEnd = new Position(target.end.line, target.end.column);\r\n            if (trace) {\r\n                console.log(source.begin + \" => \" + tBegin);\r\n                console.log(source.end + \" => \" + tEnd);\r\n            }\r\n            sourceToTarget.insert(source.begin, tBegin);\r\n            sourceToTarget.insert(source.end, tEnd);\r\n            targetToSource.insert(tBegin, source.begin);\r\n            targetToSource.insert(tEnd, source.end);\r\n        }\r\n    }\r\n    return new SourceMap(sourceToTarget, targetToSource);\r\n}\r\n","import { Position } from 'code-writer';\r\nvar SourceMap = (function () {\r\n    function SourceMap(sourceToTarget, targetToSource) {\r\n        this.sourceToTarget = sourceToTarget;\r\n        this.targetToSource = targetToSource;\r\n        // Do nothing yet.\r\n    }\r\n    SourceMap.prototype.getTargetPosition = function (sourcePos) {\r\n        var nodeL = this.sourceToTarget.glb(sourcePos);\r\n        var nodeU = this.sourceToTarget.lub(sourcePos);\r\n        if (nodeL) {\r\n            if (nodeU) {\r\n                return interpolate(sourcePos.line, sourcePos.column, nodeL.key, nodeL.value);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    SourceMap.prototype.getSourcePosition = function (targetPos) {\r\n        var nodeL = this.targetToSource.glb(targetPos);\r\n        if (nodeL) {\r\n            return interpolate(targetPos.line, targetPos.column, nodeL.key, nodeL.value);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return SourceMap;\r\n}());\r\nexport { SourceMap };\r\nfunction interpolate(sourceLine, sourceColumn, sourceBegin, targetBegin) {\r\n    var lineOffset = sourceLine - sourceBegin.line;\r\n    var columnOffset = sourceColumn - sourceBegin.column;\r\n    var targetLine = targetBegin.line + lineOffset;\r\n    var targetColumn = targetBegin.column + columnOffset;\r\n    return new Position(targetLine, targetColumn);\r\n}\r\n","import { RangeAnnotated } from 'typhon-lang';\r\n/**\r\n * Determines whether the name or attribute should be considered to be a class.\r\n * This is a heuristic test based upon the JavaScript convention for class names.\r\n * In future we may be able to use type information.\r\n */\r\nexport function isClassNameByConvention(name) {\r\n    var id = name.id;\r\n    if (id instanceof RangeAnnotated && typeof id.value === 'string') {\r\n        // console.lg(`name => ${JSON.stringify(name, null, 2)}`);\r\n        var N = id.value.length;\r\n        if (N > 0) {\r\n            var firstChar = id.value[0];\r\n            return firstChar.toUpperCase() === firstChar;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nexport function isMethod(functionDef) {\r\n    for (var i = 0; i < functionDef.args.args.length; i++) {\r\n        if (i === 0) {\r\n            var arg = functionDef.args.args[i];\r\n            if (arg.id.value === 'self') {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n","/**\r\n * FIXME: Argument should be declared as string but not allowed by TypeScript compiler.\r\n * May be a bug when comparing to 0x7f below.\r\n */\r\nexport function toStringLiteralJS(value) {\r\n    // single is preferred\r\n    var quote = \"'\";\r\n    if (value.indexOf(\"'\") !== -1 && value.indexOf('\"') === -1) {\r\n        quote = '\"';\r\n    }\r\n    var len = value.length;\r\n    var ret = quote;\r\n    for (var i = 0; i < len; ++i) {\r\n        var c = value.charAt(i);\r\n        if (c === quote || c === '\\\\')\r\n            ret += '\\\\' + c;\r\n        else if (c === '\\t')\r\n            ret += '\\\\t';\r\n        else if (c === '\\n')\r\n            ret += '\\\\n';\r\n        else if (c === '\\r')\r\n            ret += '\\\\r';\r\n        else if (c < ' ' || c >= 0x7f) {\r\n            var ashex = c.charCodeAt(0).toString(16);\r\n            if (ashex.length < 2)\r\n                ashex = \"0\" + ashex;\r\n            ret += \"\\\\x\" + ashex;\r\n        }\r\n        else\r\n            ret += c;\r\n    }\r\n    ret += quote;\r\n    return ret;\r\n}\r\n","/**\r\n * We're looking for something that is truthy, not just true.\r\n */\r\nexport function assert(condition, message) {\r\n    if (!condition) {\r\n        throw new Error(message);\r\n    }\r\n}\r\nexport function fail(message) {\r\n    assert(false, message);\r\n}\r\n"],"names":["Position","RBTree","positionComparator","semanticsOfModule","Module","astFromParse","parse","SourceKind","NotIn","In","IsNot","Is","GtE","Gt","LtE","Lt","NotEq","Eq","Attribute","Name","FloorDiv","Mod","RShift","LShift","BitAnd","BitXor","BitOr","Div","Mult","Sub","Add","DEF_LOCAL","CodeWriter","RangeAnnotated"],"mappings":"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"}